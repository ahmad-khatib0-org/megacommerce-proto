// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               unknown
// source: search/v1/search.proto

/* eslint-disable */
import {
  type CallOptions,
  type ChannelCredentials,
  Client,
  type ClientOptions,
  type ClientUnaryCall,
  type handleUnaryCall,
  makeGenericClientConstructor,
  type Metadata,
  type ServiceError,
  type UntypedServiceImplementation,
} from "@grpc/grpc-js";
import { PingRequest, PingResponse } from "../../shared/v1/types";

export const protobufPackage = "search.v1";

export type SearchServiceService = typeof SearchServiceService;
export const SearchServiceService = {
  ping: {
    path: "/search.v1.SearchService/Ping",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: PingRequest): Buffer => Buffer.from(PingRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer): PingRequest => PingRequest.decode(value),
    responseSerialize: (value: PingResponse): Buffer => Buffer.from(PingResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer): PingResponse => PingResponse.decode(value),
  },
} as const;

export interface SearchServiceServer extends UntypedServiceImplementation {
  ping: handleUnaryCall<PingRequest, PingResponse>;
}

export interface SearchServiceClient extends Client {
  ping(request: PingRequest, callback: (error: ServiceError | null, response: PingResponse) => void): ClientUnaryCall;
  ping(
    request: PingRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: PingResponse) => void,
  ): ClientUnaryCall;
  ping(
    request: PingRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: PingResponse) => void,
  ): ClientUnaryCall;
}

export const SearchServiceClient = makeGenericClientConstructor(
  SearchServiceService,
  "search.v1.SearchService",
) as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): SearchServiceClient;
  service: typeof SearchServiceService;
  serviceName: string;
};
