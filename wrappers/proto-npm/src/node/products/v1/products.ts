// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               unknown
// source: products/v1/products.proto

/* eslint-disable */
import {
  type CallOptions,
  type ChannelCredentials,
  Client,
  type ClientOptions,
  type ClientUnaryCall,
  type handleUnaryCall,
  makeGenericClientConstructor,
  type Metadata,
  type ServiceError,
  type UntypedServiceImplementation,
} from "@grpc/grpc-js";
import { ProductCreateRequest, ProductCreateResponse } from "./product_create";
import { ProductDataRequest, ProductDataResponse } from "./product_data";
import { ProductListRequest, ProductListResponse } from "./product_list";

export const protobufPackage = "products.v1";

export type ProductsServiceService = typeof ProductsServiceService;
export const ProductsServiceService = {
  productCreate: {
    path: "/products.v1.ProductsService/ProductCreate",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: ProductCreateRequest): Buffer => Buffer.from(ProductCreateRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer): ProductCreateRequest => ProductCreateRequest.decode(value),
    responseSerialize: (value: ProductCreateResponse): Buffer =>
      Buffer.from(ProductCreateResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer): ProductCreateResponse => ProductCreateResponse.decode(value),
  },
  productData: {
    path: "/products.v1.ProductsService/ProductData",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: ProductDataRequest): Buffer => Buffer.from(ProductDataRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer): ProductDataRequest => ProductDataRequest.decode(value),
    responseSerialize: (value: ProductDataResponse): Buffer => Buffer.from(ProductDataResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer): ProductDataResponse => ProductDataResponse.decode(value),
  },
  productList: {
    path: "/products.v1.ProductsService/ProductList",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: ProductListRequest): Buffer => Buffer.from(ProductListRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer): ProductListRequest => ProductListRequest.decode(value),
    responseSerialize: (value: ProductListResponse): Buffer => Buffer.from(ProductListResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer): ProductListResponse => ProductListResponse.decode(value),
  },
} as const;

export interface ProductsServiceServer extends UntypedServiceImplementation {
  productCreate: handleUnaryCall<ProductCreateRequest, ProductCreateResponse>;
  productData: handleUnaryCall<ProductDataRequest, ProductDataResponse>;
  productList: handleUnaryCall<ProductListRequest, ProductListResponse>;
}

export interface ProductsServiceClient extends Client {
  productCreate(
    request: ProductCreateRequest,
    callback: (error: ServiceError | null, response: ProductCreateResponse) => void,
  ): ClientUnaryCall;
  productCreate(
    request: ProductCreateRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: ProductCreateResponse) => void,
  ): ClientUnaryCall;
  productCreate(
    request: ProductCreateRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: ProductCreateResponse) => void,
  ): ClientUnaryCall;
  productData(
    request: ProductDataRequest,
    callback: (error: ServiceError | null, response: ProductDataResponse) => void,
  ): ClientUnaryCall;
  productData(
    request: ProductDataRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: ProductDataResponse) => void,
  ): ClientUnaryCall;
  productData(
    request: ProductDataRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: ProductDataResponse) => void,
  ): ClientUnaryCall;
  productList(
    request: ProductListRequest,
    callback: (error: ServiceError | null, response: ProductListResponse) => void,
  ): ClientUnaryCall;
  productList(
    request: ProductListRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: ProductListResponse) => void,
  ): ClientUnaryCall;
  productList(
    request: ProductListRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: ProductListResponse) => void,
  ): ClientUnaryCall;
}

export const ProductsServiceClient = makeGenericClientConstructor(
  ProductsServiceService,
  "products.v1.ProductsService",
) as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): ProductsServiceClient;
  service: typeof ProductsServiceService;
  serviceName: string;
};
