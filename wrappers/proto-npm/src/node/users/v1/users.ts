// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               unknown
// source: users/v1/users.proto

/* eslint-disable */
import {
  type CallOptions,
  ChannelCredentials,
  Client,
  type ClientOptions,
  type ClientUnaryCall,
  type handleUnaryCall,
  makeGenericClientConstructor,
  Metadata,
  type ServiceError,
  type UntypedServiceImplementation,
} from "@grpc/grpc-js";
import { EmailConfirmationRequest, EmailConfirmationResponse } from "./auth";
import { SupplierCreateRequest, SupplierCreateResponse } from "./supplier";

export const protobufPackage = "users.v1";

export type UsersServiceService = typeof UsersServiceService;
export const UsersServiceService = {
  createSupplier: {
    path: "/users.v1.UsersService/CreateSupplier",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: SupplierCreateRequest) => Buffer.from(SupplierCreateRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => SupplierCreateRequest.decode(value),
    responseSerialize: (value: SupplierCreateResponse) => Buffer.from(SupplierCreateResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => SupplierCreateResponse.decode(value),
  },
  emailConfirmation: {
    path: "/users.v1.UsersService/EmailConfirmation",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: EmailConfirmationRequest) => Buffer.from(EmailConfirmationRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => EmailConfirmationRequest.decode(value),
    responseSerialize: (value: EmailConfirmationResponse) =>
      Buffer.from(EmailConfirmationResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => EmailConfirmationResponse.decode(value),
  },
} as const;

export interface UsersServiceServer extends UntypedServiceImplementation {
  createSupplier: handleUnaryCall<SupplierCreateRequest, SupplierCreateResponse>;
  emailConfirmation: handleUnaryCall<EmailConfirmationRequest, EmailConfirmationResponse>;
}

export interface UsersServiceClient extends Client {
  createSupplier(
    request: SupplierCreateRequest,
    callback: (error: ServiceError | null, response: SupplierCreateResponse) => void,
  ): ClientUnaryCall;
  createSupplier(
    request: SupplierCreateRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: SupplierCreateResponse) => void,
  ): ClientUnaryCall;
  createSupplier(
    request: SupplierCreateRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: SupplierCreateResponse) => void,
  ): ClientUnaryCall;
  emailConfirmation(
    request: EmailConfirmationRequest,
    callback: (error: ServiceError | null, response: EmailConfirmationResponse) => void,
  ): ClientUnaryCall;
  emailConfirmation(
    request: EmailConfirmationRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: EmailConfirmationResponse) => void,
  ): ClientUnaryCall;
  emailConfirmation(
    request: EmailConfirmationRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: EmailConfirmationResponse) => void,
  ): ClientUnaryCall;
}

export const UsersServiceClient = makeGenericClientConstructor(
  UsersServiceService,
  "users.v1.UsersService",
) as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): UsersServiceClient;
  service: typeof UsersServiceService;
  serviceName: string;
};
