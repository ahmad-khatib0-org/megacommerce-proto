// source: products/v1/product_categories.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.products.v1.ProductCategories', null, global);
goog.exportSymbol('proto.products.v1.ProductCategoriesWithoutSubcategories', null, global);
goog.exportSymbol('proto.products.v1.ProductCategory', null, global);
goog.exportSymbol('proto.products.v1.ProductCategoryWithoutSubcategories', null, global);
goog.exportSymbol('proto.products.v1.ProductSubcategory', null, global);
goog.exportSymbol('proto.products.v1.ProductSubcategoryAttribute', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.products.v1.ProductCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.products.v1.ProductCategory.repeatedFields_, null);
};
goog.inherits(proto.products.v1.ProductCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.products.v1.ProductCategory.displayName = 'proto.products.v1.ProductCategory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.products.v1.ProductSubcategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.products.v1.ProductSubcategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.products.v1.ProductSubcategory.displayName = 'proto.products.v1.ProductSubcategory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.products.v1.ProductSubcategoryAttribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.products.v1.ProductSubcategoryAttribute.repeatedFields_, null);
};
goog.inherits(proto.products.v1.ProductSubcategoryAttribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.products.v1.ProductSubcategoryAttribute.displayName = 'proto.products.v1.ProductSubcategoryAttribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.products.v1.ProductCategories = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.products.v1.ProductCategories.repeatedFields_, null);
};
goog.inherits(proto.products.v1.ProductCategories, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.products.v1.ProductCategories.displayName = 'proto.products.v1.ProductCategories';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.products.v1.ProductCategoryWithoutSubcategories = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.products.v1.ProductCategoryWithoutSubcategories, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.products.v1.ProductCategoryWithoutSubcategories.displayName = 'proto.products.v1.ProductCategoryWithoutSubcategories';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.products.v1.ProductCategoriesWithoutSubcategories = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.products.v1.ProductCategoriesWithoutSubcategories.repeatedFields_, null);
};
goog.inherits(proto.products.v1.ProductCategoriesWithoutSubcategories, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.products.v1.ProductCategoriesWithoutSubcategories.displayName = 'proto.products.v1.ProductCategoriesWithoutSubcategories';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.products.v1.ProductCategory.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.products.v1.ProductCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.products.v1.ProductCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.products.v1.ProductCategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.products.v1.ProductCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
subcategoriesList: jspb.Message.toObjectList(msg.getSubcategoriesList(),
    proto.products.v1.ProductSubcategory.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.products.v1.ProductCategory}
 */
proto.products.v1.ProductCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.products.v1.ProductCategory;
  return proto.products.v1.ProductCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.products.v1.ProductCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.products.v1.ProductCategory}
 */
proto.products.v1.ProductCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.products.v1.ProductSubcategory;
      reader.readMessage(value,proto.products.v1.ProductSubcategory.deserializeBinaryFromReader);
      msg.addSubcategories(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.products.v1.ProductCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.products.v1.ProductCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.products.v1.ProductCategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.products.v1.ProductCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubcategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.products.v1.ProductSubcategory.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.products.v1.ProductCategory.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.products.v1.ProductCategory} returns this
 */
proto.products.v1.ProductCategory.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.products.v1.ProductCategory.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.products.v1.ProductCategory} returns this
 */
proto.products.v1.ProductCategory.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ProductSubcategory subcategories = 3;
 * @return {!Array<!proto.products.v1.ProductSubcategory>}
 */
proto.products.v1.ProductCategory.prototype.getSubcategoriesList = function() {
  return /** @type{!Array<!proto.products.v1.ProductSubcategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.products.v1.ProductSubcategory, 3));
};


/**
 * @param {!Array<!proto.products.v1.ProductSubcategory>} value
 * @return {!proto.products.v1.ProductCategory} returns this
*/
proto.products.v1.ProductCategory.prototype.setSubcategoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.products.v1.ProductSubcategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.products.v1.ProductSubcategory}
 */
proto.products.v1.ProductCategory.prototype.addSubcategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.products.v1.ProductSubcategory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.products.v1.ProductCategory} returns this
 */
proto.products.v1.ProductCategory.prototype.clearSubcategoriesList = function() {
  return this.setSubcategoriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.products.v1.ProductSubcategory.prototype.toObject = function(opt_includeInstance) {
  return proto.products.v1.ProductSubcategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.products.v1.ProductSubcategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.products.v1.ProductSubcategory.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
attributesMap: (f = msg.getAttributesMap()) ? f.toObject(includeInstance, proto.products.v1.ProductSubcategoryAttribute.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.products.v1.ProductSubcategory}
 */
proto.products.v1.ProductSubcategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.products.v1.ProductSubcategory;
  return proto.products.v1.ProductSubcategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.products.v1.ProductSubcategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.products.v1.ProductSubcategory}
 */
proto.products.v1.ProductSubcategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = msg.getAttributesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.products.v1.ProductSubcategoryAttribute.deserializeBinaryFromReader, "", new proto.products.v1.ProductSubcategoryAttribute());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.products.v1.ProductSubcategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.products.v1.ProductSubcategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.products.v1.ProductSubcategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.products.v1.ProductSubcategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAttributesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.products.v1.ProductSubcategoryAttribute.serializeBinaryToWriter);
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.products.v1.ProductSubcategory.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.products.v1.ProductSubcategory} returns this
 */
proto.products.v1.ProductSubcategory.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.products.v1.ProductSubcategory.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.products.v1.ProductSubcategory} returns this
 */
proto.products.v1.ProductSubcategory.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, ProductSubcategoryAttribute> attributes = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.products.v1.ProductSubcategoryAttribute>}
 */
proto.products.v1.ProductSubcategory.prototype.getAttributesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.products.v1.ProductSubcategoryAttribute>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.products.v1.ProductSubcategoryAttribute));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.products.v1.ProductSubcategory} returns this
 */
proto.products.v1.ProductSubcategory.prototype.clearAttributesMap = function() {
  this.getAttributesMap().clear();
  return this;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.products.v1.ProductSubcategoryAttribute.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.products.v1.ProductSubcategoryAttribute.prototype.toObject = function(opt_includeInstance) {
  return proto.products.v1.ProductSubcategoryAttribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.products.v1.ProductSubcategoryAttribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.products.v1.ProductSubcategoryAttribute.toObject = function(includeInstance, msg) {
  var f, obj = {
required: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
type: jspb.Message.getFieldWithDefault(msg, 2, ""),
stringArrayList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.products.v1.ProductSubcategoryAttribute}
 */
proto.products.v1.ProductSubcategoryAttribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.products.v1.ProductSubcategoryAttribute;
  return proto.products.v1.ProductSubcategoryAttribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.products.v1.ProductSubcategoryAttribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.products.v1.ProductSubcategoryAttribute}
 */
proto.products.v1.ProductSubcategoryAttribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRequired(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addStringArray(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.products.v1.ProductSubcategoryAttribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.products.v1.ProductSubcategoryAttribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.products.v1.ProductSubcategoryAttribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.products.v1.ProductSubcategoryAttribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequired();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStringArrayList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional bool required = 1;
 * @return {boolean}
 */
proto.products.v1.ProductSubcategoryAttribute.prototype.getRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.products.v1.ProductSubcategoryAttribute} returns this
 */
proto.products.v1.ProductSubcategoryAttribute.prototype.setRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.products.v1.ProductSubcategoryAttribute.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.products.v1.ProductSubcategoryAttribute} returns this
 */
proto.products.v1.ProductSubcategoryAttribute.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string string_array = 3;
 * @return {!Array<string>}
 */
proto.products.v1.ProductSubcategoryAttribute.prototype.getStringArrayList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.products.v1.ProductSubcategoryAttribute} returns this
 */
proto.products.v1.ProductSubcategoryAttribute.prototype.setStringArrayList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.products.v1.ProductSubcategoryAttribute} returns this
 */
proto.products.v1.ProductSubcategoryAttribute.prototype.addStringArray = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.products.v1.ProductSubcategoryAttribute} returns this
 */
proto.products.v1.ProductSubcategoryAttribute.prototype.clearStringArrayList = function() {
  return this.setStringArrayList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.products.v1.ProductCategories.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.products.v1.ProductCategories.prototype.toObject = function(opt_includeInstance) {
  return proto.products.v1.ProductCategories.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.products.v1.ProductCategories} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.products.v1.ProductCategories.toObject = function(includeInstance, msg) {
  var f, obj = {
categoriesList: jspb.Message.toObjectList(msg.getCategoriesList(),
    proto.products.v1.ProductCategory.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.products.v1.ProductCategories}
 */
proto.products.v1.ProductCategories.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.products.v1.ProductCategories;
  return proto.products.v1.ProductCategories.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.products.v1.ProductCategories} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.products.v1.ProductCategories}
 */
proto.products.v1.ProductCategories.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.products.v1.ProductCategory;
      reader.readMessage(value,proto.products.v1.ProductCategory.deserializeBinaryFromReader);
      msg.addCategories(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.products.v1.ProductCategories.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.products.v1.ProductCategories.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.products.v1.ProductCategories} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.products.v1.ProductCategories.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.products.v1.ProductCategory.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProductCategory categories = 1;
 * @return {!Array<!proto.products.v1.ProductCategory>}
 */
proto.products.v1.ProductCategories.prototype.getCategoriesList = function() {
  return /** @type{!Array<!proto.products.v1.ProductCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.products.v1.ProductCategory, 1));
};


/**
 * @param {!Array<!proto.products.v1.ProductCategory>} value
 * @return {!proto.products.v1.ProductCategories} returns this
*/
proto.products.v1.ProductCategories.prototype.setCategoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.products.v1.ProductCategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.products.v1.ProductCategory}
 */
proto.products.v1.ProductCategories.prototype.addCategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.products.v1.ProductCategory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.products.v1.ProductCategories} returns this
 */
proto.products.v1.ProductCategories.prototype.clearCategoriesList = function() {
  return this.setCategoriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.products.v1.ProductCategoryWithoutSubcategories.prototype.toObject = function(opt_includeInstance) {
  return proto.products.v1.ProductCategoryWithoutSubcategories.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.products.v1.ProductCategoryWithoutSubcategories} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.products.v1.ProductCategoryWithoutSubcategories.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.products.v1.ProductCategoryWithoutSubcategories}
 */
proto.products.v1.ProductCategoryWithoutSubcategories.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.products.v1.ProductCategoryWithoutSubcategories;
  return proto.products.v1.ProductCategoryWithoutSubcategories.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.products.v1.ProductCategoryWithoutSubcategories} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.products.v1.ProductCategoryWithoutSubcategories}
 */
proto.products.v1.ProductCategoryWithoutSubcategories.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.products.v1.ProductCategoryWithoutSubcategories.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.products.v1.ProductCategoryWithoutSubcategories.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.products.v1.ProductCategoryWithoutSubcategories} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.products.v1.ProductCategoryWithoutSubcategories.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.products.v1.ProductCategoryWithoutSubcategories.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.products.v1.ProductCategoryWithoutSubcategories} returns this
 */
proto.products.v1.ProductCategoryWithoutSubcategories.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.products.v1.ProductCategoryWithoutSubcategories.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.products.v1.ProductCategoryWithoutSubcategories} returns this
 */
proto.products.v1.ProductCategoryWithoutSubcategories.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.products.v1.ProductCategoriesWithoutSubcategories.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.products.v1.ProductCategoriesWithoutSubcategories.prototype.toObject = function(opt_includeInstance) {
  return proto.products.v1.ProductCategoriesWithoutSubcategories.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.products.v1.ProductCategoriesWithoutSubcategories} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.products.v1.ProductCategoriesWithoutSubcategories.toObject = function(includeInstance, msg) {
  var f, obj = {
categoriesList: jspb.Message.toObjectList(msg.getCategoriesList(),
    proto.products.v1.ProductCategoryWithoutSubcategories.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.products.v1.ProductCategoriesWithoutSubcategories}
 */
proto.products.v1.ProductCategoriesWithoutSubcategories.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.products.v1.ProductCategoriesWithoutSubcategories;
  return proto.products.v1.ProductCategoriesWithoutSubcategories.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.products.v1.ProductCategoriesWithoutSubcategories} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.products.v1.ProductCategoriesWithoutSubcategories}
 */
proto.products.v1.ProductCategoriesWithoutSubcategories.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.products.v1.ProductCategoryWithoutSubcategories;
      reader.readMessage(value,proto.products.v1.ProductCategoryWithoutSubcategories.deserializeBinaryFromReader);
      msg.addCategories(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.products.v1.ProductCategoriesWithoutSubcategories.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.products.v1.ProductCategoriesWithoutSubcategories.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.products.v1.ProductCategoriesWithoutSubcategories} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.products.v1.ProductCategoriesWithoutSubcategories.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.products.v1.ProductCategoryWithoutSubcategories.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProductCategoryWithoutSubcategories categories = 1;
 * @return {!Array<!proto.products.v1.ProductCategoryWithoutSubcategories>}
 */
proto.products.v1.ProductCategoriesWithoutSubcategories.prototype.getCategoriesList = function() {
  return /** @type{!Array<!proto.products.v1.ProductCategoryWithoutSubcategories>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.products.v1.ProductCategoryWithoutSubcategories, 1));
};


/**
 * @param {!Array<!proto.products.v1.ProductCategoryWithoutSubcategories>} value
 * @return {!proto.products.v1.ProductCategoriesWithoutSubcategories} returns this
*/
proto.products.v1.ProductCategoriesWithoutSubcategories.prototype.setCategoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.products.v1.ProductCategoryWithoutSubcategories=} opt_value
 * @param {number=} opt_index
 * @return {!proto.products.v1.ProductCategoryWithoutSubcategories}
 */
proto.products.v1.ProductCategoriesWithoutSubcategories.prototype.addCategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.products.v1.ProductCategoryWithoutSubcategories, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.products.v1.ProductCategoriesWithoutSubcategories} returns this
 */
proto.products.v1.ProductCategoriesWithoutSubcategories.prototype.clearCategoriesList = function() {
  return this.setCategoriesList([]);
};


goog.object.extend(exports, proto.products.v1);
