// source: user/v1/user.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var user_v1_supplier_pb = require('../../user/v1/supplier_pb.js');
goog.object.extend(proto, user_v1_supplier_pb);
goog.exportSymbol('proto.user.v1.User', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.user.v1.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.user.v1.User.repeatedFields_, null);
};
goog.inherits(proto.user.v1.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.user.v1.User.displayName = 'proto.user.v1.User';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.user.v1.User.repeatedFields_ = [12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.user.v1.User.prototype.toObject = function(opt_includeInstance) {
  return proto.user.v1.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.user.v1.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.v1.User.toObject = function(includeInstance, msg) {
  var f, obj = {
id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
username: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
firstName: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
lastName: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
email: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
userType: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
membership: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
isEmailVerified: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
password: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
authData: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
authService: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
rolesList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
propsMap: (f = msg.getPropsMap()) ? f.toObject(includeInstance, undefined) : [],
notifyPropsMap: (f = msg.getNotifyPropsMap()) ? f.toObject(includeInstance, undefined) : [],
lastPasswordUpdate: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
lastPictureUpdate: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
failedAttempts: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
locale: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
mfaActive: (f = jspb.Message.getBooleanField(msg, 19)) == null ? undefined : f,
mfaSecret: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
lastActivityAt: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
lastLogin: (f = jspb.Message.getField(msg, 22)) == null ? undefined : f,
createdAt: (f = jspb.Message.getField(msg, 23)) == null ? undefined : f,
updatedAt: (f = jspb.Message.getField(msg, 24)) == null ? undefined : f,
deletedAt: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.user.v1.User}
 */
proto.user.v1.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.user.v1.User;
  return proto.user.v1.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.user.v1.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.user.v1.User}
 */
proto.user.v1.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMembership(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsEmailVerified(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthData(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthService(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoles(value);
      break;
    case 13:
      var value = msg.getPropsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 14:
      var value = msg.getNotifyPropsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastPasswordUpdate(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastPictureUpdate(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFailedAttempts(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocale(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMfaActive(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setMfaSecret(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastActivityAt(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastLogin(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDeletedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.user.v1.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.user.v1.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.user.v1.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.v1.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = message.getPropsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getNotifyPropsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(14, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeInt64(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeInt64(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeInt64(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeInt64(
      25,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.user.v1.User.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.user.v1.User.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string first_name = 3;
 * @return {string}
 */
proto.user.v1.User.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setFirstName = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearFirstName = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasFirstName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string last_name = 4;
 * @return {string}
 */
proto.user.v1.User.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setLastName = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearLastName = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasLastName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string email = 5;
 * @return {string}
 */
proto.user.v1.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setEmail = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearEmail = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string user_type = 6;
 * @return {string}
 */
proto.user.v1.User.prototype.getUserType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setUserType = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearUserType = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasUserType = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string membership = 7;
 * @return {string}
 */
proto.user.v1.User.prototype.getMembership = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setMembership = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearMembership = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasMembership = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool is_email_verified = 8;
 * @return {boolean}
 */
proto.user.v1.User.prototype.getIsEmailVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setIsEmailVerified = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearIsEmailVerified = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasIsEmailVerified = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string password = 9;
 * @return {string}
 */
proto.user.v1.User.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string auth_data = 10;
 * @return {string}
 */
proto.user.v1.User.prototype.getAuthData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setAuthData = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearAuthData = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasAuthData = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string auth_service = 11;
 * @return {string}
 */
proto.user.v1.User.prototype.getAuthService = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setAuthService = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearAuthService = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasAuthService = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated string roles = 12;
 * @return {!Array<string>}
 */
proto.user.v1.User.prototype.getRolesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setRolesList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.addRoles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearRolesList = function() {
  return this.setRolesList([]);
};


/**
 * map<string, string> props = 13;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.user.v1.User.prototype.getPropsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 13, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearPropsMap = function() {
  this.getPropsMap().clear();
  return this;
};


/**
 * map<string, string> notify_props = 14;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.user.v1.User.prototype.getNotifyPropsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 14, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearNotifyPropsMap = function() {
  this.getNotifyPropsMap().clear();
  return this;
};


/**
 * optional int64 last_password_update = 15;
 * @return {number}
 */
proto.user.v1.User.prototype.getLastPasswordUpdate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setLastPasswordUpdate = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearLastPasswordUpdate = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasLastPasswordUpdate = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional int64 last_picture_update = 16;
 * @return {number}
 */
proto.user.v1.User.prototype.getLastPictureUpdate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setLastPictureUpdate = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearLastPictureUpdate = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasLastPictureUpdate = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional int32 failed_attempts = 17;
 * @return {number}
 */
proto.user.v1.User.prototype.getFailedAttempts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setFailedAttempts = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearFailedAttempts = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasFailedAttempts = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string locale = 18;
 * @return {string}
 */
proto.user.v1.User.prototype.getLocale = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setLocale = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearLocale = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasLocale = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool mfa_active = 19;
 * @return {boolean}
 */
proto.user.v1.User.prototype.getMfaActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setMfaActive = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearMfaActive = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasMfaActive = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string mfa_secret = 20;
 * @return {string}
 */
proto.user.v1.User.prototype.getMfaSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setMfaSecret = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearMfaSecret = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasMfaSecret = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional int64 last_activity_at = 21;
 * @return {number}
 */
proto.user.v1.User.prototype.getLastActivityAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setLastActivityAt = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearLastActivityAt = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasLastActivityAt = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional int64 last_login = 22;
 * @return {number}
 */
proto.user.v1.User.prototype.getLastLogin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setLastLogin = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearLastLogin = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasLastLogin = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional int64 created_at = 23;
 * @return {number}
 */
proto.user.v1.User.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setCreatedAt = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearCreatedAt = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional int64 updated_at = 24;
 * @return {number}
 */
proto.user.v1.User.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearUpdatedAt = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional int64 deleted_at = 25;
 * @return {number}
 */
proto.user.v1.User.prototype.getDeletedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.setDeletedAt = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.user.v1.User} returns this
 */
proto.user.v1.User.prototype.clearDeletedAt = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.v1.User.prototype.hasDeletedAt = function() {
  return jspb.Message.getField(this, 25) != null;
};


goog.object.extend(exports, proto.user.v1);
