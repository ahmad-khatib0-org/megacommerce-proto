// source: common/v1/config.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var shared_v1_error_pb = require('../../shared/v1/error_pb.js');
goog.object.extend(proto, shared_v1_error_pb);
goog.exportSymbol('proto.common.v1.CacheConfig', null, global);
goog.exportSymbol('proto.common.v1.Config', null, global);
goog.exportSymbol('proto.common.v1.ConfigBleve', null, global);
goog.exportSymbol('proto.common.v1.ConfigDataRetention', null, global);
goog.exportSymbol('proto.common.v1.ConfigEmail', null, global);
goog.exportSymbol('proto.common.v1.ConfigFile', null, global);
goog.exportSymbol('proto.common.v1.ConfigGetRequest', null, global);
goog.exportSymbol('proto.common.v1.ConfigGetResponse', null, global);
goog.exportSymbol('proto.common.v1.ConfigGetResponse.ResponseCase', null, global);
goog.exportSymbol('proto.common.v1.ConfigImageProxy', null, global);
goog.exportSymbol('proto.common.v1.ConfigLdap', null, global);
goog.exportSymbol('proto.common.v1.ConfigListenerRequest', null, global);
goog.exportSymbol('proto.common.v1.ConfigListenerResponse', null, global);
goog.exportSymbol('proto.common.v1.ConfigListenerResponse.ResponseCase', null, global);
goog.exportSymbol('proto.common.v1.ConfigLocalization', null, global);
goog.exportSymbol('proto.common.v1.ConfigMain', null, global);
goog.exportSymbol('proto.common.v1.ConfigMeilisearch', null, global);
goog.exportSymbol('proto.common.v1.ConfigMetrics', null, global);
goog.exportSymbol('proto.common.v1.ConfigNativeApp', null, global);
goog.exportSymbol('proto.common.v1.ConfigPassword', null, global);
goog.exportSymbol('proto.common.v1.ConfigPrivacy', null, global);
goog.exportSymbol('proto.common.v1.ConfigRateLimit', null, global);
goog.exportSymbol('proto.common.v1.ConfigSSO', null, global);
goog.exportSymbol('proto.common.v1.ConfigSaml', null, global);
goog.exportSymbol('proto.common.v1.ConfigSecurity', null, global);
goog.exportSymbol('proto.common.v1.ConfigServices', null, global);
goog.exportSymbol('proto.common.v1.ConfigSql', null, global);
goog.exportSymbol('proto.common.v1.ConfigSupport', null, global);
goog.exportSymbol('proto.common.v1.ConfigUpdateRequest', null, global);
goog.exportSymbol('proto.common.v1.ConfigUpdateResponse', null, global);
goog.exportSymbol('proto.common.v1.ConfigUpdateResponse.ResponseCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigMain = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigMain, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigMain.displayName = 'proto.common.v1.ConfigMain';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigServices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigServices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigServices.displayName = 'proto.common.v1.ConfigServices';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigSecurity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigSecurity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigSecurity.displayName = 'proto.common.v1.ConfigSecurity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.CacheConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.CacheConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.CacheConfig.displayName = 'proto.common.v1.CacheConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigMetrics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.common.v1.ConfigMetrics.repeatedFields_, null);
};
goog.inherits(proto.common.v1.ConfigMetrics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigMetrics.displayName = 'proto.common.v1.ConfigMetrics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigSSO = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigSSO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigSSO.displayName = 'proto.common.v1.ConfigSSO';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigSql = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigSql, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigSql.displayName = 'proto.common.v1.ConfigSql';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigPassword = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigPassword, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigPassword.displayName = 'proto.common.v1.ConfigPassword';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigFile.displayName = 'proto.common.v1.ConfigFile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigEmail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigEmail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigEmail.displayName = 'proto.common.v1.ConfigEmail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigRateLimit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigRateLimit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigRateLimit.displayName = 'proto.common.v1.ConfigRateLimit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigPrivacy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigPrivacy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigPrivacy.displayName = 'proto.common.v1.ConfigPrivacy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigSupport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigSupport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigSupport.displayName = 'proto.common.v1.ConfigSupport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigLocalization = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigLocalization, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigLocalization.displayName = 'proto.common.v1.ConfigLocalization';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigLdap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigLdap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigLdap.displayName = 'proto.common.v1.ConfigLdap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigSaml = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigSaml, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigSaml.displayName = 'proto.common.v1.ConfigSaml';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigNativeApp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.common.v1.ConfigNativeApp.repeatedFields_, null);
};
goog.inherits(proto.common.v1.ConfigNativeApp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigNativeApp.displayName = 'proto.common.v1.ConfigNativeApp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigMeilisearch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigMeilisearch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigMeilisearch.displayName = 'proto.common.v1.ConfigMeilisearch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigBleve = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigBleve, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigBleve.displayName = 'proto.common.v1.ConfigBleve';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigDataRetention = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigDataRetention, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigDataRetention.displayName = 'proto.common.v1.ConfigDataRetention';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigImageProxy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigImageProxy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigImageProxy.displayName = 'proto.common.v1.ConfigImageProxy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.Config = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.Config, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.Config.displayName = 'proto.common.v1.Config';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigGetRequest.displayName = 'proto.common.v1.ConfigGetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigGetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.common.v1.ConfigGetResponse.oneofGroups_);
};
goog.inherits(proto.common.v1.ConfigGetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigGetResponse.displayName = 'proto.common.v1.ConfigGetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigUpdateRequest.displayName = 'proto.common.v1.ConfigUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.common.v1.ConfigUpdateResponse.oneofGroups_);
};
goog.inherits(proto.common.v1.ConfigUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigUpdateResponse.displayName = 'proto.common.v1.ConfigUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigListenerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.common.v1.ConfigListenerResponse.oneofGroups_);
};
goog.inherits(proto.common.v1.ConfigListenerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigListenerResponse.displayName = 'proto.common.v1.ConfigListenerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.v1.ConfigListenerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.v1.ConfigListenerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.v1.ConfigListenerRequest.displayName = 'proto.common.v1.ConfigListenerRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigMain.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigMain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigMain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigMain.toObject = function(includeInstance, msg) {
  var f, obj = {
env: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
siteName: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
siteUrl: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
enableLinkPreviews: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
restrictLinkPreviews: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
enableClientPerformanceDebugging: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
enableGifPicker: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
enableCustomEmoji: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
enableEmojiPicker: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
timeBetweenUserTypingUpdatesMilliseconds: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
enableFileSearch: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
enableUserTypingMessages: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
enableUserStatuses: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
enableEmailInvitations: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f,
enableSvgs: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,
allowPersistentNotifications: (f = jspb.Message.getBooleanField(msg, 17)) == null ? undefined : f,
persistentNotificationIntervalMinutes: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
persistentNotificationMaxCount: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
persistentNotificationMaxRecipients: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
featureFlagSyncIntervalSeconds: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
allowSyncedDrafts: (f = jspb.Message.getBooleanField(msg, 22)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigMain}
 */
proto.common.v1.ConfigMain.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigMain;
  return proto.common.v1.ConfigMain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigMain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigMain}
 */
proto.common.v1.ConfigMain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnv(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSiteName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSiteUrl(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableLinkPreviews(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRestrictLinkPreviews(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableClientPerformanceDebugging(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableGifPicker(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableCustomEmoji(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableEmojiPicker(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimeBetweenUserTypingUpdatesMilliseconds(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableFileSearch(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableUserTypingMessages(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableUserStatuses(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableEmailInvitations(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableSvgs(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowPersistentNotifications(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPersistentNotificationIntervalMinutes(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPersistentNotificationMaxCount(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPersistentNotificationMaxRecipients(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFeatureFlagSyncIntervalSeconds(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowSyncedDrafts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigMain.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigMain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigMain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigMain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
};


/**
 * optional string env = 1;
 * @return {string}
 */
proto.common.v1.ConfigMain.prototype.getEnv = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setEnv = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearEnv = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasEnv = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string site_name = 2;
 * @return {string}
 */
proto.common.v1.ConfigMain.prototype.getSiteName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setSiteName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearSiteName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasSiteName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string site_url = 3;
 * @return {string}
 */
proto.common.v1.ConfigMain.prototype.getSiteUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setSiteUrl = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearSiteUrl = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasSiteUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool enable_link_previews = 5;
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.getEnableLinkPreviews = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setEnableLinkPreviews = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearEnableLinkPreviews = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasEnableLinkPreviews = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string restrict_link_previews = 6;
 * @return {string}
 */
proto.common.v1.ConfigMain.prototype.getRestrictLinkPreviews = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setRestrictLinkPreviews = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearRestrictLinkPreviews = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasRestrictLinkPreviews = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool enable_client_performance_debugging = 7;
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.getEnableClientPerformanceDebugging = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setEnableClientPerformanceDebugging = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearEnableClientPerformanceDebugging = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasEnableClientPerformanceDebugging = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool enable_gif_picker = 8;
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.getEnableGifPicker = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setEnableGifPicker = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearEnableGifPicker = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasEnableGifPicker = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool enable_custom_emoji = 9;
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.getEnableCustomEmoji = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setEnableCustomEmoji = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearEnableCustomEmoji = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasEnableCustomEmoji = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool enable_emoji_picker = 10;
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.getEnableEmojiPicker = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setEnableEmojiPicker = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearEnableEmojiPicker = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasEnableEmojiPicker = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int64 time_between_user_typing_updates_milliseconds = 11;
 * @return {number}
 */
proto.common.v1.ConfigMain.prototype.getTimeBetweenUserTypingUpdatesMilliseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setTimeBetweenUserTypingUpdatesMilliseconds = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearTimeBetweenUserTypingUpdatesMilliseconds = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasTimeBetweenUserTypingUpdatesMilliseconds = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool enable_file_search = 12;
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.getEnableFileSearch = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setEnableFileSearch = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearEnableFileSearch = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasEnableFileSearch = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool enable_user_typing_messages = 13;
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.getEnableUserTypingMessages = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setEnableUserTypingMessages = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearEnableUserTypingMessages = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasEnableUserTypingMessages = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool enable_user_statuses = 14;
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.getEnableUserStatuses = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setEnableUserStatuses = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearEnableUserStatuses = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasEnableUserStatuses = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool enable_email_invitations = 15;
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.getEnableEmailInvitations = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setEnableEmailInvitations = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearEnableEmailInvitations = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasEnableEmailInvitations = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool enable_svgs = 16;
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.getEnableSvgs = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setEnableSvgs = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearEnableSvgs = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasEnableSvgs = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool allow_persistent_notifications = 17;
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.getAllowPersistentNotifications = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setAllowPersistentNotifications = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearAllowPersistentNotifications = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasAllowPersistentNotifications = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional int32 persistent_notification_interval_minutes = 18;
 * @return {number}
 */
proto.common.v1.ConfigMain.prototype.getPersistentNotificationIntervalMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setPersistentNotificationIntervalMinutes = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearPersistentNotificationIntervalMinutes = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasPersistentNotificationIntervalMinutes = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional int32 persistent_notification_max_count = 19;
 * @return {number}
 */
proto.common.v1.ConfigMain.prototype.getPersistentNotificationMaxCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setPersistentNotificationMaxCount = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearPersistentNotificationMaxCount = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasPersistentNotificationMaxCount = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional int32 persistent_notification_max_recipients = 20;
 * @return {number}
 */
proto.common.v1.ConfigMain.prototype.getPersistentNotificationMaxRecipients = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setPersistentNotificationMaxRecipients = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearPersistentNotificationMaxRecipients = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasPersistentNotificationMaxRecipients = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional int32 feature_flag_sync_interval_seconds = 21;
 * @return {number}
 */
proto.common.v1.ConfigMain.prototype.getFeatureFlagSyncIntervalSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setFeatureFlagSyncIntervalSeconds = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearFeatureFlagSyncIntervalSeconds = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasFeatureFlagSyncIntervalSeconds = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool allow_synced_drafts = 22;
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.getAllowSyncedDrafts = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.setAllowSyncedDrafts = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMain} returns this
 */
proto.common.v1.ConfigMain.prototype.clearAllowSyncedDrafts = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMain.prototype.hasAllowSyncedDrafts = function() {
  return jspb.Message.getField(this, 22) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigServices.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigServices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigServices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigServices.toObject = function(includeInstance, msg) {
  var f, obj = {
commonServiceGrpcUrl: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
userServiceGrpcUrl: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
productsServiceGrpcUrl: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
jaegerCollectorUrl: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
commonServicePrometheusUrl: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
userServicePrometheusUrl: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
productsServicePrometheusUrl: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigServices}
 */
proto.common.v1.ConfigServices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigServices;
  return proto.common.v1.ConfigServices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigServices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigServices}
 */
proto.common.v1.ConfigServices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommonServiceGrpcUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserServiceGrpcUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductsServiceGrpcUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setJaegerCollectorUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommonServicePrometheusUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserServicePrometheusUrl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductsServicePrometheusUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigServices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigServices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigServices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigServices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string common_service_grpc_url = 1;
 * @return {string}
 */
proto.common.v1.ConfigServices.prototype.getCommonServiceGrpcUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigServices} returns this
 */
proto.common.v1.ConfigServices.prototype.setCommonServiceGrpcUrl = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigServices} returns this
 */
proto.common.v1.ConfigServices.prototype.clearCommonServiceGrpcUrl = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigServices.prototype.hasCommonServiceGrpcUrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_service_grpc_url = 2;
 * @return {string}
 */
proto.common.v1.ConfigServices.prototype.getUserServiceGrpcUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigServices} returns this
 */
proto.common.v1.ConfigServices.prototype.setUserServiceGrpcUrl = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigServices} returns this
 */
proto.common.v1.ConfigServices.prototype.clearUserServiceGrpcUrl = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigServices.prototype.hasUserServiceGrpcUrl = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string products_service_grpc_url = 3;
 * @return {string}
 */
proto.common.v1.ConfigServices.prototype.getProductsServiceGrpcUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigServices} returns this
 */
proto.common.v1.ConfigServices.prototype.setProductsServiceGrpcUrl = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigServices} returns this
 */
proto.common.v1.ConfigServices.prototype.clearProductsServiceGrpcUrl = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigServices.prototype.hasProductsServiceGrpcUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string jaeger_collector_url = 4;
 * @return {string}
 */
proto.common.v1.ConfigServices.prototype.getJaegerCollectorUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigServices} returns this
 */
proto.common.v1.ConfigServices.prototype.setJaegerCollectorUrl = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigServices} returns this
 */
proto.common.v1.ConfigServices.prototype.clearJaegerCollectorUrl = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigServices.prototype.hasJaegerCollectorUrl = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string common_service_prometheus_url = 5;
 * @return {string}
 */
proto.common.v1.ConfigServices.prototype.getCommonServicePrometheusUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigServices} returns this
 */
proto.common.v1.ConfigServices.prototype.setCommonServicePrometheusUrl = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigServices} returns this
 */
proto.common.v1.ConfigServices.prototype.clearCommonServicePrometheusUrl = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigServices.prototype.hasCommonServicePrometheusUrl = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string user_service_prometheus_url = 6;
 * @return {string}
 */
proto.common.v1.ConfigServices.prototype.getUserServicePrometheusUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigServices} returns this
 */
proto.common.v1.ConfigServices.prototype.setUserServicePrometheusUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigServices} returns this
 */
proto.common.v1.ConfigServices.prototype.clearUserServicePrometheusUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigServices.prototype.hasUserServicePrometheusUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string products_service_prometheus_url = 7;
 * @return {string}
 */
proto.common.v1.ConfigServices.prototype.getProductsServicePrometheusUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigServices} returns this
 */
proto.common.v1.ConfigServices.prototype.setProductsServicePrometheusUrl = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigServices} returns this
 */
proto.common.v1.ConfigServices.prototype.clearProductsServicePrometheusUrl = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigServices.prototype.hasProductsServicePrometheusUrl = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigSecurity.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigSecurity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigSecurity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigSecurity.toObject = function(includeInstance, msg) {
  var f, obj = {
restrictedUsernamesMap: (f = msg.getRestrictedUsernamesMap()) ? f.toObject(includeInstance, undefined) : [],
maximumLoginAttempts: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
enableInsecureOutgoingConnections: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
enableMultifactorAuthentication: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
enforceMultifactorAuthentication: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
enableOauthServiceProvider: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
enableOutgoingOauthConnections: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
terminateSessionsOnPasswordChange: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
sessionLengthWebInHours: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
sessionLengthMobileInHours: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
sessionLengthSsoInHours: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
allowCorsFrom: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
corsExposedHeaders: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
corsAllowCredentials: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
corsDebug: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f,
allowCookiesForSubdomains: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,
sessionCacheInMinutes: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
emailConfirmationUrl: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigSecurity}
 */
proto.common.v1.ConfigSecurity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigSecurity;
  return proto.common.v1.ConfigSecurity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigSecurity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigSecurity}
 */
proto.common.v1.ConfigSecurity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getRestrictedUsernamesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaximumLoginAttempts(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableInsecureOutgoingConnections(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableMultifactorAuthentication(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnforceMultifactorAuthentication(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableOauthServiceProvider(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableOutgoingOauthConnections(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTerminateSessionsOnPasswordChange(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSessionLengthWebInHours(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSessionLengthMobileInHours(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSessionLengthSsoInHours(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAllowCorsFrom(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorsExposedHeaders(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCorsAllowCredentials(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCorsDebug(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowCookiesForSubdomains(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSessionCacheInMinutes(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailConfirmationUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigSecurity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigSecurity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigSecurity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigSecurity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRestrictedUsernamesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
};


/**
 * map<string, string> restricted_usernames = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.common.v1.ConfigSecurity.prototype.getRestrictedUsernamesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearRestrictedUsernamesMap = function() {
  this.getRestrictedUsernamesMap().clear();
  return this;
};


/**
 * optional int32 maximum_login_attempts = 2;
 * @return {number}
 */
proto.common.v1.ConfigSecurity.prototype.getMaximumLoginAttempts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setMaximumLoginAttempts = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearMaximumLoginAttempts = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasMaximumLoginAttempts = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool enable_insecure_outgoing_connections = 3;
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.getEnableInsecureOutgoingConnections = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setEnableInsecureOutgoingConnections = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearEnableInsecureOutgoingConnections = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasEnableInsecureOutgoingConnections = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool enable_multifactor_authentication = 4;
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.getEnableMultifactorAuthentication = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setEnableMultifactorAuthentication = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearEnableMultifactorAuthentication = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasEnableMultifactorAuthentication = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool enforce_multifactor_authentication = 5;
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.getEnforceMultifactorAuthentication = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setEnforceMultifactorAuthentication = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearEnforceMultifactorAuthentication = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasEnforceMultifactorAuthentication = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool enable_oauth_service_provider = 6;
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.getEnableOauthServiceProvider = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setEnableOauthServiceProvider = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearEnableOauthServiceProvider = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasEnableOauthServiceProvider = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool enable_outgoing_oauth_connections = 7;
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.getEnableOutgoingOauthConnections = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setEnableOutgoingOauthConnections = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearEnableOutgoingOauthConnections = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasEnableOutgoingOauthConnections = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool terminate_sessions_on_password_change = 8;
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.getTerminateSessionsOnPasswordChange = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setTerminateSessionsOnPasswordChange = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearTerminateSessionsOnPasswordChange = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasTerminateSessionsOnPasswordChange = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 session_length_web_in_hours = 9;
 * @return {number}
 */
proto.common.v1.ConfigSecurity.prototype.getSessionLengthWebInHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setSessionLengthWebInHours = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearSessionLengthWebInHours = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasSessionLengthWebInHours = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 session_length_mobile_in_hours = 10;
 * @return {number}
 */
proto.common.v1.ConfigSecurity.prototype.getSessionLengthMobileInHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setSessionLengthMobileInHours = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearSessionLengthMobileInHours = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasSessionLengthMobileInHours = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 session_length_sso_in_hours = 11;
 * @return {number}
 */
proto.common.v1.ConfigSecurity.prototype.getSessionLengthSsoInHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setSessionLengthSsoInHours = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearSessionLengthSsoInHours = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasSessionLengthSsoInHours = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string allow_cors_from = 12;
 * @return {string}
 */
proto.common.v1.ConfigSecurity.prototype.getAllowCorsFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setAllowCorsFrom = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearAllowCorsFrom = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasAllowCorsFrom = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string cors_exposed_headers = 13;
 * @return {string}
 */
proto.common.v1.ConfigSecurity.prototype.getCorsExposedHeaders = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setCorsExposedHeaders = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearCorsExposedHeaders = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasCorsExposedHeaders = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool cors_allow_credentials = 14;
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.getCorsAllowCredentials = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setCorsAllowCredentials = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearCorsAllowCredentials = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasCorsAllowCredentials = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool cors_debug = 15;
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.getCorsDebug = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setCorsDebug = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearCorsDebug = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasCorsDebug = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool allow_cookies_for_subdomains = 16;
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.getAllowCookiesForSubdomains = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setAllowCookiesForSubdomains = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearAllowCookiesForSubdomains = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasAllowCookiesForSubdomains = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional int32 session_cache_in_minutes = 17;
 * @return {number}
 */
proto.common.v1.ConfigSecurity.prototype.getSessionCacheInMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setSessionCacheInMinutes = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearSessionCacheInMinutes = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasSessionCacheInMinutes = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string email_confirmation_url = 18;
 * @return {string}
 */
proto.common.v1.ConfigSecurity.prototype.getEmailConfirmationUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.setEmailConfirmationUrl = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSecurity} returns this
 */
proto.common.v1.ConfigSecurity.prototype.clearEmailConfirmationUrl = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSecurity.prototype.hasEmailConfirmationUrl = function() {
  return jspb.Message.getField(this, 18) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.CacheConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.CacheConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.CacheConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.CacheConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
cacheType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
redisAddress: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
redisPassword: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
redisDb: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
redisCachePrefix: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
disableClientCache: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.CacheConfig}
 */
proto.common.v1.CacheConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.CacheConfig;
  return proto.common.v1.CacheConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.CacheConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.CacheConfig}
 */
proto.common.v1.CacheConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCacheType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedisAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedisPassword(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRedisDb(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedisCachePrefix(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableClientCache(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.CacheConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.CacheConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.CacheConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.CacheConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string cache_type = 1;
 * @return {string}
 */
proto.common.v1.CacheConfig.prototype.getCacheType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.CacheConfig} returns this
 */
proto.common.v1.CacheConfig.prototype.setCacheType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.CacheConfig} returns this
 */
proto.common.v1.CacheConfig.prototype.clearCacheType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.CacheConfig.prototype.hasCacheType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string redis_address = 2;
 * @return {string}
 */
proto.common.v1.CacheConfig.prototype.getRedisAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.CacheConfig} returns this
 */
proto.common.v1.CacheConfig.prototype.setRedisAddress = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.CacheConfig} returns this
 */
proto.common.v1.CacheConfig.prototype.clearRedisAddress = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.CacheConfig.prototype.hasRedisAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string redis_password = 3;
 * @return {string}
 */
proto.common.v1.CacheConfig.prototype.getRedisPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.CacheConfig} returns this
 */
proto.common.v1.CacheConfig.prototype.setRedisPassword = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.CacheConfig} returns this
 */
proto.common.v1.CacheConfig.prototype.clearRedisPassword = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.CacheConfig.prototype.hasRedisPassword = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 redis_db = 4;
 * @return {number}
 */
proto.common.v1.CacheConfig.prototype.getRedisDb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.CacheConfig} returns this
 */
proto.common.v1.CacheConfig.prototype.setRedisDb = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.CacheConfig} returns this
 */
proto.common.v1.CacheConfig.prototype.clearRedisDb = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.CacheConfig.prototype.hasRedisDb = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string redis_cache_prefix = 5;
 * @return {string}
 */
proto.common.v1.CacheConfig.prototype.getRedisCachePrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.CacheConfig} returns this
 */
proto.common.v1.CacheConfig.prototype.setRedisCachePrefix = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.CacheConfig} returns this
 */
proto.common.v1.CacheConfig.prototype.clearRedisCachePrefix = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.CacheConfig.prototype.hasRedisCachePrefix = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool disable_client_cache = 6;
 * @return {boolean}
 */
proto.common.v1.CacheConfig.prototype.getDisableClientCache = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.CacheConfig} returns this
 */
proto.common.v1.CacheConfig.prototype.setDisableClientCache = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.CacheConfig} returns this
 */
proto.common.v1.CacheConfig.prototype.clearDisableClientCache = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.CacheConfig.prototype.hasDisableClientCache = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.common.v1.ConfigMetrics.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigMetrics.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigMetrics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigMetrics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigMetrics.toObject = function(includeInstance, msg) {
  var f, obj = {
enable: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
blockProfileRate: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
listenAddress: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
enableClientMetrics: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
enableNotificationMetrics: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
clientSideUserIdsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigMetrics}
 */
proto.common.v1.ConfigMetrics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigMetrics;
  return proto.common.v1.ConfigMetrics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigMetrics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigMetrics}
 */
proto.common.v1.ConfigMetrics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlockProfileRate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setListenAddress(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableClientMetrics(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableNotificationMetrics(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addClientSideUserIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigMetrics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigMetrics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigMetrics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigMetrics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getClientSideUserIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * optional bool enable = 1;
 * @return {boolean}
 */
proto.common.v1.ConfigMetrics.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMetrics} returns this
 */
proto.common.v1.ConfigMetrics.prototype.setEnable = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMetrics} returns this
 */
proto.common.v1.ConfigMetrics.prototype.clearEnable = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMetrics.prototype.hasEnable = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 block_profile_rate = 2;
 * @return {number}
 */
proto.common.v1.ConfigMetrics.prototype.getBlockProfileRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigMetrics} returns this
 */
proto.common.v1.ConfigMetrics.prototype.setBlockProfileRate = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMetrics} returns this
 */
proto.common.v1.ConfigMetrics.prototype.clearBlockProfileRate = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMetrics.prototype.hasBlockProfileRate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string listen_address = 3;
 * @return {string}
 */
proto.common.v1.ConfigMetrics.prototype.getListenAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigMetrics} returns this
 */
proto.common.v1.ConfigMetrics.prototype.setListenAddress = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMetrics} returns this
 */
proto.common.v1.ConfigMetrics.prototype.clearListenAddress = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMetrics.prototype.hasListenAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool enable_client_metrics = 4;
 * @return {boolean}
 */
proto.common.v1.ConfigMetrics.prototype.getEnableClientMetrics = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMetrics} returns this
 */
proto.common.v1.ConfigMetrics.prototype.setEnableClientMetrics = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMetrics} returns this
 */
proto.common.v1.ConfigMetrics.prototype.clearEnableClientMetrics = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMetrics.prototype.hasEnableClientMetrics = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool enable_notification_metrics = 5;
 * @return {boolean}
 */
proto.common.v1.ConfigMetrics.prototype.getEnableNotificationMetrics = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMetrics} returns this
 */
proto.common.v1.ConfigMetrics.prototype.setEnableNotificationMetrics = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMetrics} returns this
 */
proto.common.v1.ConfigMetrics.prototype.clearEnableNotificationMetrics = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMetrics.prototype.hasEnableNotificationMetrics = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string client_side_user_ids = 6;
 * @return {!Array<string>}
 */
proto.common.v1.ConfigMetrics.prototype.getClientSideUserIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.common.v1.ConfigMetrics} returns this
 */
proto.common.v1.ConfigMetrics.prototype.setClientSideUserIdsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.common.v1.ConfigMetrics} returns this
 */
proto.common.v1.ConfigMetrics.prototype.addClientSideUserIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.common.v1.ConfigMetrics} returns this
 */
proto.common.v1.ConfigMetrics.prototype.clearClientSideUserIdsList = function() {
  return this.setClientSideUserIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigSSO.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigSSO.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigSSO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigSSO.toObject = function(includeInstance, msg) {
  var f, obj = {
enable: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
secret: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
id: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
scope: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
authEndpoint: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
tokenEndpoint: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
userApiEndpoint: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
discoveryEndpoint: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
buttonText: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
buttonColor: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigSSO}
 */
proto.common.v1.ConfigSSO.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigSSO;
  return proto.common.v1.ConfigSSO.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigSSO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigSSO}
 */
proto.common.v1.ConfigSSO.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthEndpoint(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenEndpoint(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserApiEndpoint(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiscoveryEndpoint(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setButtonText(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setButtonColor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigSSO.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigSSO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigSSO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigSSO.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional bool enable = 1;
 * @return {boolean}
 */
proto.common.v1.ConfigSSO.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.setEnable = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.clearEnable = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSSO.prototype.hasEnable = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string secret = 2;
 * @return {string}
 */
proto.common.v1.ConfigSSO.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.setSecret = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.clearSecret = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSSO.prototype.hasSecret = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.common.v1.ConfigSSO.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.setId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.clearId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSSO.prototype.hasId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string scope = 4;
 * @return {string}
 */
proto.common.v1.ConfigSSO.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.setScope = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.clearScope = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSSO.prototype.hasScope = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string auth_endpoint = 5;
 * @return {string}
 */
proto.common.v1.ConfigSSO.prototype.getAuthEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.setAuthEndpoint = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.clearAuthEndpoint = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSSO.prototype.hasAuthEndpoint = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string token_endpoint = 6;
 * @return {string}
 */
proto.common.v1.ConfigSSO.prototype.getTokenEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.setTokenEndpoint = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.clearTokenEndpoint = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSSO.prototype.hasTokenEndpoint = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string user_api_endpoint = 7;
 * @return {string}
 */
proto.common.v1.ConfigSSO.prototype.getUserApiEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.setUserApiEndpoint = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.clearUserApiEndpoint = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSSO.prototype.hasUserApiEndpoint = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string discovery_endpoint = 8;
 * @return {string}
 */
proto.common.v1.ConfigSSO.prototype.getDiscoveryEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.setDiscoveryEndpoint = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.clearDiscoveryEndpoint = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSSO.prototype.hasDiscoveryEndpoint = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string button_text = 9;
 * @return {string}
 */
proto.common.v1.ConfigSSO.prototype.getButtonText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.setButtonText = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.clearButtonText = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSSO.prototype.hasButtonText = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string button_color = 10;
 * @return {string}
 */
proto.common.v1.ConfigSSO.prototype.getButtonColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.setButtonColor = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSSO} returns this
 */
proto.common.v1.ConfigSSO.prototype.clearButtonColor = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSSO.prototype.hasButtonColor = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigSql.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigSql.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigSql} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigSql.toObject = function(includeInstance, msg) {
  var f, obj = {
driverName: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
dataSource: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
maxIdleConns: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
connMaxLifetimeMilliseconds: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
connMaxIdleTimeMilliseconds: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
maxOpenConns: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
trace: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
atRestEncryptKey: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
queryTimeout: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
disableDatabaseSearch: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigSql}
 */
proto.common.v1.ConfigSql.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigSql;
  return proto.common.v1.ConfigSql.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigSql} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigSql}
 */
proto.common.v1.ConfigSql.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDriverName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataSource(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxIdleConns(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConnMaxLifetimeMilliseconds(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConnMaxIdleTimeMilliseconds(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxOpenConns(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTrace(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAtRestEncryptKey(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQueryTimeout(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableDatabaseSearch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigSql.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigSql.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigSql} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigSql.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional string driver_name = 1;
 * @return {string}
 */
proto.common.v1.ConfigSql.prototype.getDriverName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.setDriverName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.clearDriverName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSql.prototype.hasDriverName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string data_source = 2;
 * @return {string}
 */
proto.common.v1.ConfigSql.prototype.getDataSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.setDataSource = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.clearDataSource = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSql.prototype.hasDataSource = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 max_idle_conns = 3;
 * @return {number}
 */
proto.common.v1.ConfigSql.prototype.getMaxIdleConns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.setMaxIdleConns = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.clearMaxIdleConns = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSql.prototype.hasMaxIdleConns = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 conn_max_lifetime_milliseconds = 4;
 * @return {number}
 */
proto.common.v1.ConfigSql.prototype.getConnMaxLifetimeMilliseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.setConnMaxLifetimeMilliseconds = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.clearConnMaxLifetimeMilliseconds = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSql.prototype.hasConnMaxLifetimeMilliseconds = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 conn_max_idle_time_milliseconds = 5;
 * @return {number}
 */
proto.common.v1.ConfigSql.prototype.getConnMaxIdleTimeMilliseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.setConnMaxIdleTimeMilliseconds = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.clearConnMaxIdleTimeMilliseconds = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSql.prototype.hasConnMaxIdleTimeMilliseconds = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 max_open_conns = 6;
 * @return {number}
 */
proto.common.v1.ConfigSql.prototype.getMaxOpenConns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.setMaxOpenConns = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.clearMaxOpenConns = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSql.prototype.hasMaxOpenConns = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool trace = 7;
 * @return {boolean}
 */
proto.common.v1.ConfigSql.prototype.getTrace = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.setTrace = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.clearTrace = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSql.prototype.hasTrace = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string at_rest_encrypt_key = 8;
 * @return {string}
 */
proto.common.v1.ConfigSql.prototype.getAtRestEncryptKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.setAtRestEncryptKey = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.clearAtRestEncryptKey = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSql.prototype.hasAtRestEncryptKey = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 query_timeout = 9;
 * @return {number}
 */
proto.common.v1.ConfigSql.prototype.getQueryTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.setQueryTimeout = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.clearQueryTimeout = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSql.prototype.hasQueryTimeout = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool disable_database_search = 10;
 * @return {boolean}
 */
proto.common.v1.ConfigSql.prototype.getDisableDatabaseSearch = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.setDisableDatabaseSearch = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSql} returns this
 */
proto.common.v1.ConfigSql.prototype.clearDisableDatabaseSearch = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSql.prototype.hasDisableDatabaseSearch = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigPassword.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigPassword.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigPassword} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigPassword.toObject = function(includeInstance, msg) {
  var f, obj = {
minimumLength: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
maximumLength: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
lowercase: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
number: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
uppercase: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
symbol: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
enableForgotLink: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigPassword}
 */
proto.common.v1.ConfigPassword.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigPassword;
  return proto.common.v1.ConfigPassword.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigPassword} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigPassword}
 */
proto.common.v1.ConfigPassword.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinimumLength(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaximumLength(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLowercase(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNumber(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUppercase(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSymbol(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableForgotLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigPassword.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigPassword.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigPassword} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigPassword.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional int32 minimum_length = 1;
 * @return {number}
 */
proto.common.v1.ConfigPassword.prototype.getMinimumLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigPassword} returns this
 */
proto.common.v1.ConfigPassword.prototype.setMinimumLength = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigPassword} returns this
 */
proto.common.v1.ConfigPassword.prototype.clearMinimumLength = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigPassword.prototype.hasMinimumLength = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 maximum_length = 2;
 * @return {number}
 */
proto.common.v1.ConfigPassword.prototype.getMaximumLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigPassword} returns this
 */
proto.common.v1.ConfigPassword.prototype.setMaximumLength = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigPassword} returns this
 */
proto.common.v1.ConfigPassword.prototype.clearMaximumLength = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigPassword.prototype.hasMaximumLength = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool lowercase = 3;
 * @return {boolean}
 */
proto.common.v1.ConfigPassword.prototype.getLowercase = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigPassword} returns this
 */
proto.common.v1.ConfigPassword.prototype.setLowercase = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigPassword} returns this
 */
proto.common.v1.ConfigPassword.prototype.clearLowercase = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigPassword.prototype.hasLowercase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool number = 4;
 * @return {boolean}
 */
proto.common.v1.ConfigPassword.prototype.getNumber = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigPassword} returns this
 */
proto.common.v1.ConfigPassword.prototype.setNumber = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigPassword} returns this
 */
proto.common.v1.ConfigPassword.prototype.clearNumber = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigPassword.prototype.hasNumber = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool uppercase = 5;
 * @return {boolean}
 */
proto.common.v1.ConfigPassword.prototype.getUppercase = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigPassword} returns this
 */
proto.common.v1.ConfigPassword.prototype.setUppercase = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigPassword} returns this
 */
proto.common.v1.ConfigPassword.prototype.clearUppercase = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigPassword.prototype.hasUppercase = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool symbol = 6;
 * @return {boolean}
 */
proto.common.v1.ConfigPassword.prototype.getSymbol = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigPassword} returns this
 */
proto.common.v1.ConfigPassword.prototype.setSymbol = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigPassword} returns this
 */
proto.common.v1.ConfigPassword.prototype.clearSymbol = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigPassword.prototype.hasSymbol = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool enable_forgot_link = 7;
 * @return {boolean}
 */
proto.common.v1.ConfigPassword.prototype.getEnableForgotLink = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigPassword} returns this
 */
proto.common.v1.ConfigPassword.prototype.setEnableForgotLink = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigPassword} returns this
 */
proto.common.v1.ConfigPassword.prototype.clearEnableForgotLink = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigPassword.prototype.hasEnableForgotLink = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigFile.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigFile.toObject = function(includeInstance, msg) {
  var f, obj = {
enableFileAttachments: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
enableMobileUpload: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
enableMobileDownload: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
maxFileSize: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
maxImageResolution: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
maxImageDecoderConcurrency: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
driverName: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
directory: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
enablePublicLink: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
extractContent: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
archiveRecursion: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
publicLinkSalt: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
initialFont: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
amazonS3AccessKeyId: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
amazonS3SecretAccessKey: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
amazonS3Bucket: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
amazonS3PathPrefix: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
amazonS3Region: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
amazonS3Endpoint: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
amazonS3Ssl: (f = jspb.Message.getBooleanField(msg, 20)) == null ? undefined : f,
amazonS3SignV2: (f = jspb.Message.getBooleanField(msg, 21)) == null ? undefined : f,
amazonS3Sse: (f = jspb.Message.getBooleanField(msg, 22)) == null ? undefined : f,
amazonS3Trace: (f = jspb.Message.getBooleanField(msg, 23)) == null ? undefined : f,
amazonS3RequestTimeoutMilliseconds: (f = jspb.Message.getField(msg, 24)) == null ? undefined : f,
amazonS3UploadPartSizeBytes: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,
amazonS3StorageClass: (f = jspb.Message.getField(msg, 26)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigFile}
 */
proto.common.v1.ConfigFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigFile;
  return proto.common.v1.ConfigFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigFile}
 */
proto.common.v1.ConfigFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableFileAttachments(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableMobileUpload(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableMobileDownload(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxFileSize(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxImageResolution(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxImageDecoderConcurrency(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDriverName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirectory(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnablePublicLink(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExtractContent(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setArchiveRecursion(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicLinkSalt(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitialFont(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmazonS3AccessKeyId(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmazonS3SecretAccessKey(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmazonS3Bucket(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmazonS3PathPrefix(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmazonS3Region(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmazonS3Endpoint(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAmazonS3Ssl(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAmazonS3SignV2(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAmazonS3Sse(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAmazonS3Trace(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmazonS3RequestTimeoutMilliseconds(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmazonS3UploadPartSizeBytes(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmazonS3StorageClass(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeString(
      19,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeBool(
      21,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeBool(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeInt64(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeInt64(
      25,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeString(
      26,
      f
    );
  }
};


/**
 * optional bool enable_file_attachments = 1;
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.getEnableFileAttachments = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setEnableFileAttachments = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearEnableFileAttachments = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasEnableFileAttachments = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool enable_mobile_upload = 2;
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.getEnableMobileUpload = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setEnableMobileUpload = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearEnableMobileUpload = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasEnableMobileUpload = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool enable_mobile_download = 3;
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.getEnableMobileDownload = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setEnableMobileDownload = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearEnableMobileDownload = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasEnableMobileDownload = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 max_file_size = 4;
 * @return {number}
 */
proto.common.v1.ConfigFile.prototype.getMaxFileSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setMaxFileSize = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearMaxFileSize = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasMaxFileSize = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 max_image_resolution = 5;
 * @return {number}
 */
proto.common.v1.ConfigFile.prototype.getMaxImageResolution = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setMaxImageResolution = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearMaxImageResolution = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasMaxImageResolution = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int64 max_image_decoder_concurrency = 6;
 * @return {number}
 */
proto.common.v1.ConfigFile.prototype.getMaxImageDecoderConcurrency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setMaxImageDecoderConcurrency = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearMaxImageDecoderConcurrency = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasMaxImageDecoderConcurrency = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string driver_name = 7;
 * @return {string}
 */
proto.common.v1.ConfigFile.prototype.getDriverName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setDriverName = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearDriverName = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasDriverName = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string directory = 8;
 * @return {string}
 */
proto.common.v1.ConfigFile.prototype.getDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setDirectory = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearDirectory = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasDirectory = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool enable_public_link = 9;
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.getEnablePublicLink = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setEnablePublicLink = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearEnablePublicLink = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasEnablePublicLink = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool extract_content = 10;
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.getExtractContent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setExtractContent = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearExtractContent = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasExtractContent = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool archive_recursion = 11;
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.getArchiveRecursion = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setArchiveRecursion = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearArchiveRecursion = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasArchiveRecursion = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string public_link_salt = 12;
 * @return {string}
 */
proto.common.v1.ConfigFile.prototype.getPublicLinkSalt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setPublicLinkSalt = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearPublicLinkSalt = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasPublicLinkSalt = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string initial_font = 13;
 * @return {string}
 */
proto.common.v1.ConfigFile.prototype.getInitialFont = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setInitialFont = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearInitialFont = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasInitialFont = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string amazon_s3_access_key_id = 14;
 * @return {string}
 */
proto.common.v1.ConfigFile.prototype.getAmazonS3AccessKeyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setAmazonS3AccessKeyId = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearAmazonS3AccessKeyId = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasAmazonS3AccessKeyId = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string amazon_s3_secret_access_key = 15;
 * @return {string}
 */
proto.common.v1.ConfigFile.prototype.getAmazonS3SecretAccessKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setAmazonS3SecretAccessKey = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearAmazonS3SecretAccessKey = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasAmazonS3SecretAccessKey = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string amazon_s3_bucket = 16;
 * @return {string}
 */
proto.common.v1.ConfigFile.prototype.getAmazonS3Bucket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setAmazonS3Bucket = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearAmazonS3Bucket = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasAmazonS3Bucket = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string amazon_s3_path_prefix = 17;
 * @return {string}
 */
proto.common.v1.ConfigFile.prototype.getAmazonS3PathPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setAmazonS3PathPrefix = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearAmazonS3PathPrefix = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasAmazonS3PathPrefix = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string amazon_s3_region = 18;
 * @return {string}
 */
proto.common.v1.ConfigFile.prototype.getAmazonS3Region = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setAmazonS3Region = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearAmazonS3Region = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasAmazonS3Region = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional string amazon_s3_endpoint = 19;
 * @return {string}
 */
proto.common.v1.ConfigFile.prototype.getAmazonS3Endpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setAmazonS3Endpoint = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearAmazonS3Endpoint = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasAmazonS3Endpoint = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool amazon_s3_ssl = 20;
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.getAmazonS3Ssl = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setAmazonS3Ssl = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearAmazonS3Ssl = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasAmazonS3Ssl = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional bool amazon_s3_sign_v2 = 21;
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.getAmazonS3SignV2 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setAmazonS3SignV2 = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearAmazonS3SignV2 = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasAmazonS3SignV2 = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool amazon_s3_sse = 22;
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.getAmazonS3Sse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setAmazonS3Sse = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearAmazonS3Sse = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasAmazonS3Sse = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional bool amazon_s3_trace = 23;
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.getAmazonS3Trace = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setAmazonS3Trace = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearAmazonS3Trace = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasAmazonS3Trace = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional int64 amazon_s3_request_timeout_milliseconds = 24;
 * @return {number}
 */
proto.common.v1.ConfigFile.prototype.getAmazonS3RequestTimeoutMilliseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setAmazonS3RequestTimeoutMilliseconds = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearAmazonS3RequestTimeoutMilliseconds = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasAmazonS3RequestTimeoutMilliseconds = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional int64 amazon_s3_upload_part_size_bytes = 25;
 * @return {number}
 */
proto.common.v1.ConfigFile.prototype.getAmazonS3UploadPartSizeBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setAmazonS3UploadPartSizeBytes = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearAmazonS3UploadPartSizeBytes = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasAmazonS3UploadPartSizeBytes = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional string amazon_s3_storage_class = 26;
 * @return {string}
 */
proto.common.v1.ConfigFile.prototype.getAmazonS3StorageClass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.setAmazonS3StorageClass = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigFile} returns this
 */
proto.common.v1.ConfigFile.prototype.clearAmazonS3StorageClass = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigFile.prototype.hasAmazonS3StorageClass = function() {
  return jspb.Message.getField(this, 26) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigEmail.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigEmail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigEmail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigEmail.toObject = function(includeInstance, msg) {
  var f, obj = {
sendEmailNotifications: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
requireEmailVerification: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
feedbackEmail: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
replyToAddress: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
enableSmtpAuth: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
smtpUsername: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
smtpPassword: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
smtpServer: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
smtpPort: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
smtpServerTimeout: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
connectionSecurity: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
sendPushNotifications: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
pushNotificationServer: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
pushNotificationContents: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
pushNotificationBuffer: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
enableEmailBatching: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,
emailBatchingBufferSize: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
emailBatchingInterval: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
skipServerCertificateVerification: (f = jspb.Message.getBooleanField(msg, 19)) == null ? undefined : f,
emailNotificationContentsType: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
loginButtonColor: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
loginButtonBorderColor: (f = jspb.Message.getField(msg, 22)) == null ? undefined : f,
loginButtonTextColor: (f = jspb.Message.getField(msg, 23)) == null ? undefined : f,
rateLimitingMemorySize: (f = jspb.Message.getField(msg, 24)) == null ? undefined : f,
rateLimitingPerHour: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,
rateLimitingMaxBurst: (f = jspb.Message.getField(msg, 26)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigEmail}
 */
proto.common.v1.ConfigEmail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigEmail;
  return proto.common.v1.ConfigEmail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigEmail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigEmail}
 */
proto.common.v1.ConfigEmail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSendEmailNotifications(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRequireEmailVerification(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeedbackEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReplyToAddress(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableSmtpAuth(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSmtpUsername(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSmtpPassword(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSmtpServer(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSmtpPort(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSmtpServerTimeout(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionSecurity(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSendPushNotifications(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPushNotificationServer(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setPushNotificationContents(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPushNotificationBuffer(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableEmailBatching(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEmailBatchingBufferSize(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEmailBatchingInterval(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSkipServerCertificateVerification(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailNotificationContentsType(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginButtonColor(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginButtonBorderColor(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginButtonTextColor(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRateLimitingMemorySize(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRateLimitingPerHour(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRateLimitingMaxBurst(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigEmail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigEmail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigEmail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigEmail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeString(
      22,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeString(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeInt32(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeInt32(
      26,
      f
    );
  }
};


/**
 * optional bool send_email_notifications = 1;
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.getSendEmailNotifications = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setSendEmailNotifications = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearSendEmailNotifications = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasSendEmailNotifications = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool require_email_verification = 2;
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.getRequireEmailVerification = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setRequireEmailVerification = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearRequireEmailVerification = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasRequireEmailVerification = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string feedback_email = 3;
 * @return {string}
 */
proto.common.v1.ConfigEmail.prototype.getFeedbackEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setFeedbackEmail = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearFeedbackEmail = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasFeedbackEmail = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string reply_to_address = 4;
 * @return {string}
 */
proto.common.v1.ConfigEmail.prototype.getReplyToAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setReplyToAddress = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearReplyToAddress = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasReplyToAddress = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool enable_smtp_auth = 5;
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.getEnableSmtpAuth = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setEnableSmtpAuth = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearEnableSmtpAuth = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasEnableSmtpAuth = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string smtp_username = 6;
 * @return {string}
 */
proto.common.v1.ConfigEmail.prototype.getSmtpUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setSmtpUsername = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearSmtpUsername = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasSmtpUsername = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string smtp_password = 7;
 * @return {string}
 */
proto.common.v1.ConfigEmail.prototype.getSmtpPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setSmtpPassword = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearSmtpPassword = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasSmtpPassword = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string smtp_server = 8;
 * @return {string}
 */
proto.common.v1.ConfigEmail.prototype.getSmtpServer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setSmtpServer = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearSmtpServer = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasSmtpServer = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string smtp_port = 9;
 * @return {string}
 */
proto.common.v1.ConfigEmail.prototype.getSmtpPort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setSmtpPort = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearSmtpPort = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasSmtpPort = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 smtp_server_timeout = 10;
 * @return {number}
 */
proto.common.v1.ConfigEmail.prototype.getSmtpServerTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setSmtpServerTimeout = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearSmtpServerTimeout = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasSmtpServerTimeout = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string connection_security = 11;
 * @return {string}
 */
proto.common.v1.ConfigEmail.prototype.getConnectionSecurity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setConnectionSecurity = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearConnectionSecurity = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasConnectionSecurity = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool send_push_notifications = 12;
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.getSendPushNotifications = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setSendPushNotifications = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearSendPushNotifications = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasSendPushNotifications = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string push_notification_server = 13;
 * @return {string}
 */
proto.common.v1.ConfigEmail.prototype.getPushNotificationServer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setPushNotificationServer = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearPushNotificationServer = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasPushNotificationServer = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string push_notification_contents = 14;
 * @return {string}
 */
proto.common.v1.ConfigEmail.prototype.getPushNotificationContents = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setPushNotificationContents = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearPushNotificationContents = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasPushNotificationContents = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional int32 push_notification_buffer = 15;
 * @return {number}
 */
proto.common.v1.ConfigEmail.prototype.getPushNotificationBuffer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setPushNotificationBuffer = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearPushNotificationBuffer = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasPushNotificationBuffer = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool enable_email_batching = 16;
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.getEnableEmailBatching = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setEnableEmailBatching = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearEnableEmailBatching = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasEnableEmailBatching = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional int32 email_batching_buffer_size = 17;
 * @return {number}
 */
proto.common.v1.ConfigEmail.prototype.getEmailBatchingBufferSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setEmailBatchingBufferSize = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearEmailBatchingBufferSize = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasEmailBatchingBufferSize = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional int32 email_batching_interval = 18;
 * @return {number}
 */
proto.common.v1.ConfigEmail.prototype.getEmailBatchingInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setEmailBatchingInterval = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearEmailBatchingInterval = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasEmailBatchingInterval = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool skip_server_certificate_verification = 19;
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.getSkipServerCertificateVerification = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setSkipServerCertificateVerification = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearSkipServerCertificateVerification = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasSkipServerCertificateVerification = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string email_notification_contents_type = 20;
 * @return {string}
 */
proto.common.v1.ConfigEmail.prototype.getEmailNotificationContentsType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setEmailNotificationContentsType = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearEmailNotificationContentsType = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasEmailNotificationContentsType = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string login_button_color = 21;
 * @return {string}
 */
proto.common.v1.ConfigEmail.prototype.getLoginButtonColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setLoginButtonColor = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearLoginButtonColor = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasLoginButtonColor = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional string login_button_border_color = 22;
 * @return {string}
 */
proto.common.v1.ConfigEmail.prototype.getLoginButtonBorderColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setLoginButtonBorderColor = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearLoginButtonBorderColor = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasLoginButtonBorderColor = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional string login_button_text_color = 23;
 * @return {string}
 */
proto.common.v1.ConfigEmail.prototype.getLoginButtonTextColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setLoginButtonTextColor = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearLoginButtonTextColor = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasLoginButtonTextColor = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional int32 rate_limiting_memory_size = 24;
 * @return {number}
 */
proto.common.v1.ConfigEmail.prototype.getRateLimitingMemorySize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setRateLimitingMemorySize = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearRateLimitingMemorySize = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasRateLimitingMemorySize = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional int32 rate_limiting_per_hour = 25;
 * @return {number}
 */
proto.common.v1.ConfigEmail.prototype.getRateLimitingPerHour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setRateLimitingPerHour = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearRateLimitingPerHour = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasRateLimitingPerHour = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional int32 rate_limiting_max_burst = 26;
 * @return {number}
 */
proto.common.v1.ConfigEmail.prototype.getRateLimitingMaxBurst = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.setRateLimitingMaxBurst = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigEmail} returns this
 */
proto.common.v1.ConfigEmail.prototype.clearRateLimitingMaxBurst = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigEmail.prototype.hasRateLimitingMaxBurst = function() {
  return jspb.Message.getField(this, 26) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigRateLimit.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigRateLimit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigRateLimit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigRateLimit.toObject = function(includeInstance, msg) {
  var f, obj = {
enable: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
perSec: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
maxBurst: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
memoryStoreSize: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
varyByRemoteAddr: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
varyByUser: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
varyByHeader: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigRateLimit}
 */
proto.common.v1.ConfigRateLimit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigRateLimit;
  return proto.common.v1.ConfigRateLimit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigRateLimit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigRateLimit}
 */
proto.common.v1.ConfigRateLimit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPerSec(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxBurst(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMemoryStoreSize(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVaryByRemoteAddr(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVaryByUser(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVaryByHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigRateLimit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigRateLimit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigRateLimit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigRateLimit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getVaryByHeader();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional bool enable = 1;
 * @return {boolean}
 */
proto.common.v1.ConfigRateLimit.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigRateLimit} returns this
 */
proto.common.v1.ConfigRateLimit.prototype.setEnable = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigRateLimit} returns this
 */
proto.common.v1.ConfigRateLimit.prototype.clearEnable = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigRateLimit.prototype.hasEnable = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 per_sec = 2;
 * @return {number}
 */
proto.common.v1.ConfigRateLimit.prototype.getPerSec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigRateLimit} returns this
 */
proto.common.v1.ConfigRateLimit.prototype.setPerSec = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigRateLimit} returns this
 */
proto.common.v1.ConfigRateLimit.prototype.clearPerSec = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigRateLimit.prototype.hasPerSec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 max_burst = 3;
 * @return {number}
 */
proto.common.v1.ConfigRateLimit.prototype.getMaxBurst = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigRateLimit} returns this
 */
proto.common.v1.ConfigRateLimit.prototype.setMaxBurst = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigRateLimit} returns this
 */
proto.common.v1.ConfigRateLimit.prototype.clearMaxBurst = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigRateLimit.prototype.hasMaxBurst = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 memory_store_size = 4;
 * @return {number}
 */
proto.common.v1.ConfigRateLimit.prototype.getMemoryStoreSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigRateLimit} returns this
 */
proto.common.v1.ConfigRateLimit.prototype.setMemoryStoreSize = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigRateLimit} returns this
 */
proto.common.v1.ConfigRateLimit.prototype.clearMemoryStoreSize = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigRateLimit.prototype.hasMemoryStoreSize = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool vary_by_remote_addr = 5;
 * @return {boolean}
 */
proto.common.v1.ConfigRateLimit.prototype.getVaryByRemoteAddr = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigRateLimit} returns this
 */
proto.common.v1.ConfigRateLimit.prototype.setVaryByRemoteAddr = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigRateLimit} returns this
 */
proto.common.v1.ConfigRateLimit.prototype.clearVaryByRemoteAddr = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigRateLimit.prototype.hasVaryByRemoteAddr = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool vary_by_user = 6;
 * @return {boolean}
 */
proto.common.v1.ConfigRateLimit.prototype.getVaryByUser = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigRateLimit} returns this
 */
proto.common.v1.ConfigRateLimit.prototype.setVaryByUser = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigRateLimit} returns this
 */
proto.common.v1.ConfigRateLimit.prototype.clearVaryByUser = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigRateLimit.prototype.hasVaryByUser = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string vary_by_header = 7;
 * @return {string}
 */
proto.common.v1.ConfigRateLimit.prototype.getVaryByHeader = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigRateLimit} returns this
 */
proto.common.v1.ConfigRateLimit.prototype.setVaryByHeader = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigPrivacy.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigPrivacy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigPrivacy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigPrivacy.toObject = function(includeInstance, msg) {
  var f, obj = {
showEmailAddress: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
showFullName: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigPrivacy}
 */
proto.common.v1.ConfigPrivacy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigPrivacy;
  return proto.common.v1.ConfigPrivacy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigPrivacy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigPrivacy}
 */
proto.common.v1.ConfigPrivacy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowEmailAddress(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowFullName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigPrivacy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigPrivacy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigPrivacy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigPrivacy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool show_email_address = 1;
 * @return {boolean}
 */
proto.common.v1.ConfigPrivacy.prototype.getShowEmailAddress = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigPrivacy} returns this
 */
proto.common.v1.ConfigPrivacy.prototype.setShowEmailAddress = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigPrivacy} returns this
 */
proto.common.v1.ConfigPrivacy.prototype.clearShowEmailAddress = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigPrivacy.prototype.hasShowEmailAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool show_full_name = 2;
 * @return {boolean}
 */
proto.common.v1.ConfigPrivacy.prototype.getShowFullName = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigPrivacy} returns this
 */
proto.common.v1.ConfigPrivacy.prototype.setShowFullName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigPrivacy} returns this
 */
proto.common.v1.ConfigPrivacy.prototype.clearShowFullName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigPrivacy.prototype.hasShowFullName = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigSupport.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigSupport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigSupport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigSupport.toObject = function(includeInstance, msg) {
  var f, obj = {
termsOfServiceLink: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
privacyPolicyLink: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
aboutLink: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
helpLink: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
reportAProblemLink: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
forgotPasswordLink: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
supportEmail: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigSupport}
 */
proto.common.v1.ConfigSupport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigSupport;
  return proto.common.v1.ConfigSupport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigSupport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigSupport}
 */
proto.common.v1.ConfigSupport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTermsOfServiceLink(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivacyPolicyLink(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAboutLink(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelpLink(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportAProblemLink(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setForgotPasswordLink(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSupportEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigSupport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigSupport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigSupport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigSupport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string terms_of_service_link = 1;
 * @return {string}
 */
proto.common.v1.ConfigSupport.prototype.getTermsOfServiceLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSupport} returns this
 */
proto.common.v1.ConfigSupport.prototype.setTermsOfServiceLink = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSupport} returns this
 */
proto.common.v1.ConfigSupport.prototype.clearTermsOfServiceLink = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSupport.prototype.hasTermsOfServiceLink = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string privacy_policy_link = 2;
 * @return {string}
 */
proto.common.v1.ConfigSupport.prototype.getPrivacyPolicyLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSupport} returns this
 */
proto.common.v1.ConfigSupport.prototype.setPrivacyPolicyLink = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSupport} returns this
 */
proto.common.v1.ConfigSupport.prototype.clearPrivacyPolicyLink = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSupport.prototype.hasPrivacyPolicyLink = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string about_link = 3;
 * @return {string}
 */
proto.common.v1.ConfigSupport.prototype.getAboutLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSupport} returns this
 */
proto.common.v1.ConfigSupport.prototype.setAboutLink = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSupport} returns this
 */
proto.common.v1.ConfigSupport.prototype.clearAboutLink = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSupport.prototype.hasAboutLink = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string help_link = 4;
 * @return {string}
 */
proto.common.v1.ConfigSupport.prototype.getHelpLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSupport} returns this
 */
proto.common.v1.ConfigSupport.prototype.setHelpLink = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSupport} returns this
 */
proto.common.v1.ConfigSupport.prototype.clearHelpLink = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSupport.prototype.hasHelpLink = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string report_a_problem_link = 5;
 * @return {string}
 */
proto.common.v1.ConfigSupport.prototype.getReportAProblemLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSupport} returns this
 */
proto.common.v1.ConfigSupport.prototype.setReportAProblemLink = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSupport} returns this
 */
proto.common.v1.ConfigSupport.prototype.clearReportAProblemLink = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSupport.prototype.hasReportAProblemLink = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string forgot_password_link = 6;
 * @return {string}
 */
proto.common.v1.ConfigSupport.prototype.getForgotPasswordLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSupport} returns this
 */
proto.common.v1.ConfigSupport.prototype.setForgotPasswordLink = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSupport} returns this
 */
proto.common.v1.ConfigSupport.prototype.clearForgotPasswordLink = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSupport.prototype.hasForgotPasswordLink = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string support_email = 7;
 * @return {string}
 */
proto.common.v1.ConfigSupport.prototype.getSupportEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSupport} returns this
 */
proto.common.v1.ConfigSupport.prototype.setSupportEmail = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSupport} returns this
 */
proto.common.v1.ConfigSupport.prototype.clearSupportEmail = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSupport.prototype.hasSupportEmail = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigLocalization.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigLocalization.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigLocalization} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigLocalization.toObject = function(includeInstance, msg) {
  var f, obj = {
defaultServerLocale: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
defaultClientLocale: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
availableLocales: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigLocalization}
 */
proto.common.v1.ConfigLocalization.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigLocalization;
  return proto.common.v1.ConfigLocalization.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigLocalization} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigLocalization}
 */
proto.common.v1.ConfigLocalization.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultServerLocale(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultClientLocale(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvailableLocales(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigLocalization.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigLocalization.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigLocalization} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigLocalization.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string default_server_locale = 1;
 * @return {string}
 */
proto.common.v1.ConfigLocalization.prototype.getDefaultServerLocale = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLocalization} returns this
 */
proto.common.v1.ConfigLocalization.prototype.setDefaultServerLocale = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLocalization} returns this
 */
proto.common.v1.ConfigLocalization.prototype.clearDefaultServerLocale = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLocalization.prototype.hasDefaultServerLocale = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string default_client_locale = 2;
 * @return {string}
 */
proto.common.v1.ConfigLocalization.prototype.getDefaultClientLocale = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLocalization} returns this
 */
proto.common.v1.ConfigLocalization.prototype.setDefaultClientLocale = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLocalization} returns this
 */
proto.common.v1.ConfigLocalization.prototype.clearDefaultClientLocale = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLocalization.prototype.hasDefaultClientLocale = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string available_locales = 3;
 * @return {string}
 */
proto.common.v1.ConfigLocalization.prototype.getAvailableLocales = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLocalization} returns this
 */
proto.common.v1.ConfigLocalization.prototype.setAvailableLocales = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLocalization} returns this
 */
proto.common.v1.ConfigLocalization.prototype.clearAvailableLocales = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLocalization.prototype.hasAvailableLocales = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigLdap.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigLdap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigLdap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigLdap.toObject = function(includeInstance, msg) {
  var f, obj = {
enable: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
enableSync: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
ldapServer: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
ldapPort: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
connectionSecurity: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
baseDn: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
bindUsername: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
bindPassword: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
maximumLoginAttempts: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
userFilter: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
groupFilter: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
enableAdminFilter: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
adminFilter: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
groupDisplayNameAttribute: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
groupIdAttribute: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
firstNameAttribute: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
lastNameAttribute: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
emailAttribute: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
usernameAttribute: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
nicknameAttribute: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
idAttribute: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
positionAttribute: (f = jspb.Message.getField(msg, 22)) == null ? undefined : f,
loginIdAttribute: (f = jspb.Message.getField(msg, 23)) == null ? undefined : f,
pictureAttribute: (f = jspb.Message.getField(msg, 24)) == null ? undefined : f,
syncIntervalMinutes: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,
queryTimeout: (f = jspb.Message.getField(msg, 26)) == null ? undefined : f,
maxPageSize: (f = jspb.Message.getField(msg, 27)) == null ? undefined : f,
loginFieldName: (f = jspb.Message.getField(msg, 28)) == null ? undefined : f,
loginButtonColor: (f = jspb.Message.getField(msg, 29)) == null ? undefined : f,
loginButtonBorderColor: (f = jspb.Message.getField(msg, 30)) == null ? undefined : f,
loginButtonTextColor: (f = jspb.Message.getField(msg, 31)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigLdap}
 */
proto.common.v1.ConfigLdap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigLdap;
  return proto.common.v1.ConfigLdap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigLdap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigLdap}
 */
proto.common.v1.ConfigLdap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableSync(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLdapServer(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLdapPort(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionSecurity(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseDn(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBindUsername(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBindPassword(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaximumLoginAttempts(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserFilter(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupFilter(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableAdminFilter(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminFilter(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupDisplayNameAttribute(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupIdAttribute(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstNameAttribute(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastNameAttribute(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailAttribute(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsernameAttribute(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setNicknameAttribute(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdAttribute(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setPositionAttribute(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginIdAttribute(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setPictureAttribute(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSyncIntervalMinutes(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQueryTimeout(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxPageSize(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginFieldName(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginButtonColor(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginButtonBorderColor(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginButtonTextColor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigLdap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigLdap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigLdap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigLdap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeString(
      19,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeString(
      22,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeString(
      23,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeString(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeInt32(
      27,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeString(
      28,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeString(
      29,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeString(
      30,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeString(
      31,
      f
    );
  }
};


/**
 * optional bool enable = 1;
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setEnable = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearEnable = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasEnable = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool enable_sync = 2;
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.getEnableSync = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setEnableSync = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearEnableSync = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasEnableSync = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string ldap_server = 3;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getLdapServer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setLdapServer = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearLdapServer = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasLdapServer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 ldap_port = 4;
 * @return {number}
 */
proto.common.v1.ConfigLdap.prototype.getLdapPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setLdapPort = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearLdapPort = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasLdapPort = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string connection_security = 5;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getConnectionSecurity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setConnectionSecurity = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearConnectionSecurity = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasConnectionSecurity = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string base_dn = 6;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getBaseDn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setBaseDn = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearBaseDn = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasBaseDn = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string bind_username = 7;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getBindUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setBindUsername = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearBindUsername = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasBindUsername = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string bind_password = 8;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getBindPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setBindPassword = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearBindPassword = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasBindPassword = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 maximum_login_attempts = 9;
 * @return {number}
 */
proto.common.v1.ConfigLdap.prototype.getMaximumLoginAttempts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setMaximumLoginAttempts = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearMaximumLoginAttempts = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasMaximumLoginAttempts = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string user_filter = 10;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getUserFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setUserFilter = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearUserFilter = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasUserFilter = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string group_filter = 11;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getGroupFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setGroupFilter = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearGroupFilter = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasGroupFilter = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool enable_admin_filter = 12;
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.getEnableAdminFilter = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setEnableAdminFilter = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearEnableAdminFilter = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasEnableAdminFilter = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string admin_filter = 13;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getAdminFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setAdminFilter = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearAdminFilter = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasAdminFilter = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string group_display_name_attribute = 14;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getGroupDisplayNameAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setGroupDisplayNameAttribute = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearGroupDisplayNameAttribute = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasGroupDisplayNameAttribute = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string group_id_attribute = 15;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getGroupIdAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setGroupIdAttribute = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearGroupIdAttribute = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasGroupIdAttribute = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string first_name_attribute = 16;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getFirstNameAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setFirstNameAttribute = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearFirstNameAttribute = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasFirstNameAttribute = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string last_name_attribute = 17;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getLastNameAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setLastNameAttribute = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearLastNameAttribute = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasLastNameAttribute = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string email_attribute = 18;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getEmailAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setEmailAttribute = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearEmailAttribute = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasEmailAttribute = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional string username_attribute = 19;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getUsernameAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setUsernameAttribute = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearUsernameAttribute = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasUsernameAttribute = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string nickname_attribute = 20;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getNicknameAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setNicknameAttribute = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearNicknameAttribute = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasNicknameAttribute = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string id_attribute = 21;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getIdAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setIdAttribute = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearIdAttribute = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasIdAttribute = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional string position_attribute = 22;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getPositionAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setPositionAttribute = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearPositionAttribute = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasPositionAttribute = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional string login_id_attribute = 23;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getLoginIdAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setLoginIdAttribute = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearLoginIdAttribute = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasLoginIdAttribute = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional string picture_attribute = 24;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getPictureAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setPictureAttribute = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearPictureAttribute = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasPictureAttribute = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional int32 sync_interval_minutes = 25;
 * @return {number}
 */
proto.common.v1.ConfigLdap.prototype.getSyncIntervalMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setSyncIntervalMinutes = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearSyncIntervalMinutes = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasSyncIntervalMinutes = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional int32 query_timeout = 26;
 * @return {number}
 */
proto.common.v1.ConfigLdap.prototype.getQueryTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setQueryTimeout = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearQueryTimeout = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasQueryTimeout = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional int32 max_page_size = 27;
 * @return {number}
 */
proto.common.v1.ConfigLdap.prototype.getMaxPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setMaxPageSize = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearMaxPageSize = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasMaxPageSize = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional string login_field_name = 28;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getLoginFieldName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setLoginFieldName = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearLoginFieldName = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasLoginFieldName = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional string login_button_color = 29;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getLoginButtonColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setLoginButtonColor = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearLoginButtonColor = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasLoginButtonColor = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional string login_button_border_color = 30;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getLoginButtonBorderColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setLoginButtonBorderColor = function(value) {
  return jspb.Message.setField(this, 30, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearLoginButtonBorderColor = function() {
  return jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasLoginButtonBorderColor = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional string login_button_text_color = 31;
 * @return {string}
 */
proto.common.v1.ConfigLdap.prototype.getLoginButtonTextColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.setLoginButtonTextColor = function(value) {
  return jspb.Message.setField(this, 31, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigLdap} returns this
 */
proto.common.v1.ConfigLdap.prototype.clearLoginButtonTextColor = function() {
  return jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigLdap.prototype.hasLoginButtonTextColor = function() {
  return jspb.Message.getField(this, 31) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigSaml.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigSaml.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigSaml} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigSaml.toObject = function(includeInstance, msg) {
  var f, obj = {
enable: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
enableSyncWithLdap: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
enableSyncWithLdapIncludeAuth: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
ignoreGuestsLdapSync: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
verify: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
encrypt: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
signRequest: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
idpUrl: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
idpDescriptorUrl: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
idpMetadataUrl: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
serviceProviderIdentifier: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
assertionConsumerServiceUrl: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
signatureAlgorithm: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
canonicalAlgorithm: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
scopingIdpProviderId: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
scopingIdpName: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
idpCertificateFile: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
publicCertificateFile: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
privateKeyFile: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
idAttribute: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
enableAdminAttribute: (f = jspb.Message.getBooleanField(msg, 21)) == null ? undefined : f,
adminAttribute: (f = jspb.Message.getField(msg, 22)) == null ? undefined : f,
firstNameAttribute: (f = jspb.Message.getField(msg, 23)) == null ? undefined : f,
lastNameAttribute: (f = jspb.Message.getField(msg, 24)) == null ? undefined : f,
emailAttribute: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,
usernameAttribute: (f = jspb.Message.getField(msg, 26)) == null ? undefined : f,
nicknameAttribute: (f = jspb.Message.getField(msg, 27)) == null ? undefined : f,
localeAttribute: (f = jspb.Message.getField(msg, 28)) == null ? undefined : f,
positionAttribute: (f = jspb.Message.getField(msg, 29)) == null ? undefined : f,
loginButtonText: (f = jspb.Message.getField(msg, 30)) == null ? undefined : f,
loginButtonColor: (f = jspb.Message.getField(msg, 31)) == null ? undefined : f,
loginButtonBorderColor: (f = jspb.Message.getField(msg, 32)) == null ? undefined : f,
loginButtonTextColor: (f = jspb.Message.getField(msg, 33)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigSaml}
 */
proto.common.v1.ConfigSaml.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigSaml;
  return proto.common.v1.ConfigSaml.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigSaml} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigSaml}
 */
proto.common.v1.ConfigSaml.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableSyncWithLdap(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableSyncWithLdapIncludeAuth(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnoreGuestsLdapSync(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerify(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncrypt(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSignRequest(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdpUrl(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdpDescriptorUrl(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdpMetadataUrl(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceProviderIdentifier(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssertionConsumerServiceUrl(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignatureAlgorithm(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCanonicalAlgorithm(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setScopingIdpProviderId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setScopingIdpName(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdpCertificateFile(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicCertificateFile(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivateKeyFile(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdAttribute(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableAdminAttribute(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminAttribute(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstNameAttribute(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastNameAttribute(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailAttribute(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsernameAttribute(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setNicknameAttribute(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocaleAttribute(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setPositionAttribute(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginButtonText(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginButtonColor(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginButtonBorderColor(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginButtonTextColor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigSaml.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigSaml.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigSaml} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigSaml.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeString(
      19,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeBool(
      21,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeString(
      22,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeString(
      23,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeString(
      24,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeString(
      25,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeString(
      26,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeString(
      27,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeString(
      28,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeString(
      29,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeString(
      30,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeString(
      31,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeString(
      32,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeString(
      33,
      f
    );
  }
};


/**
 * optional bool enable = 1;
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setEnable = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearEnable = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasEnable = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool enable_sync_with_ldap = 2;
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.getEnableSyncWithLdap = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setEnableSyncWithLdap = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearEnableSyncWithLdap = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasEnableSyncWithLdap = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool enable_sync_with_ldap_include_auth = 3;
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.getEnableSyncWithLdapIncludeAuth = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setEnableSyncWithLdapIncludeAuth = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearEnableSyncWithLdapIncludeAuth = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasEnableSyncWithLdapIncludeAuth = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool ignore_guests_ldap_sync = 4;
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.getIgnoreGuestsLdapSync = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setIgnoreGuestsLdapSync = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearIgnoreGuestsLdapSync = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasIgnoreGuestsLdapSync = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool verify = 5;
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.getVerify = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setVerify = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearVerify = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasVerify = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool encrypt = 6;
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.getEncrypt = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setEncrypt = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearEncrypt = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasEncrypt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool sign_request = 7;
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.getSignRequest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setSignRequest = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearSignRequest = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasSignRequest = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string idp_url = 8;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getIdpUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setIdpUrl = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearIdpUrl = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasIdpUrl = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string idp_descriptor_url = 9;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getIdpDescriptorUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setIdpDescriptorUrl = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearIdpDescriptorUrl = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasIdpDescriptorUrl = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string idp_metadata_url = 10;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getIdpMetadataUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setIdpMetadataUrl = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearIdpMetadataUrl = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasIdpMetadataUrl = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string service_provider_identifier = 11;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getServiceProviderIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setServiceProviderIdentifier = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearServiceProviderIdentifier = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasServiceProviderIdentifier = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string assertion_consumer_service_url = 12;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getAssertionConsumerServiceUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setAssertionConsumerServiceUrl = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearAssertionConsumerServiceUrl = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasAssertionConsumerServiceUrl = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string signature_algorithm = 13;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getSignatureAlgorithm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setSignatureAlgorithm = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearSignatureAlgorithm = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasSignatureAlgorithm = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string canonical_algorithm = 14;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getCanonicalAlgorithm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setCanonicalAlgorithm = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearCanonicalAlgorithm = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasCanonicalAlgorithm = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string scoping_idp_provider_id = 15;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getScopingIdpProviderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setScopingIdpProviderId = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearScopingIdpProviderId = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasScopingIdpProviderId = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string scoping_idp_name = 16;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getScopingIdpName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setScopingIdpName = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearScopingIdpName = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasScopingIdpName = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string idp_certificate_file = 17;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getIdpCertificateFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setIdpCertificateFile = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearIdpCertificateFile = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasIdpCertificateFile = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string public_certificate_file = 18;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getPublicCertificateFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setPublicCertificateFile = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearPublicCertificateFile = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasPublicCertificateFile = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional string private_key_file = 19;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getPrivateKeyFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setPrivateKeyFile = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearPrivateKeyFile = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasPrivateKeyFile = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string id_attribute = 20;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getIdAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setIdAttribute = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearIdAttribute = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasIdAttribute = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional bool enable_admin_attribute = 21;
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.getEnableAdminAttribute = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setEnableAdminAttribute = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearEnableAdminAttribute = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasEnableAdminAttribute = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional string admin_attribute = 22;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getAdminAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setAdminAttribute = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearAdminAttribute = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasAdminAttribute = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional string first_name_attribute = 23;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getFirstNameAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setFirstNameAttribute = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearFirstNameAttribute = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasFirstNameAttribute = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional string last_name_attribute = 24;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getLastNameAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setLastNameAttribute = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearLastNameAttribute = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasLastNameAttribute = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional string email_attribute = 25;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getEmailAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setEmailAttribute = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearEmailAttribute = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasEmailAttribute = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional string username_attribute = 26;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getUsernameAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setUsernameAttribute = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearUsernameAttribute = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasUsernameAttribute = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional string nickname_attribute = 27;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getNicknameAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setNicknameAttribute = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearNicknameAttribute = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasNicknameAttribute = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional string locale_attribute = 28;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getLocaleAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setLocaleAttribute = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearLocaleAttribute = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasLocaleAttribute = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional string position_attribute = 29;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getPositionAttribute = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setPositionAttribute = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearPositionAttribute = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasPositionAttribute = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional string login_button_text = 30;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getLoginButtonText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setLoginButtonText = function(value) {
  return jspb.Message.setField(this, 30, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearLoginButtonText = function() {
  return jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasLoginButtonText = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional string login_button_color = 31;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getLoginButtonColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setLoginButtonColor = function(value) {
  return jspb.Message.setField(this, 31, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearLoginButtonColor = function() {
  return jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasLoginButtonColor = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional string login_button_border_color = 32;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getLoginButtonBorderColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setLoginButtonBorderColor = function(value) {
  return jspb.Message.setField(this, 32, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearLoginButtonBorderColor = function() {
  return jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasLoginButtonBorderColor = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional string login_button_text_color = 33;
 * @return {string}
 */
proto.common.v1.ConfigSaml.prototype.getLoginButtonTextColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.setLoginButtonTextColor = function(value) {
  return jspb.Message.setField(this, 33, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigSaml} returns this
 */
proto.common.v1.ConfigSaml.prototype.clearLoginButtonTextColor = function() {
  return jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigSaml.prototype.hasLoginButtonTextColor = function() {
  return jspb.Message.getField(this, 33) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.common.v1.ConfigNativeApp.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigNativeApp.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigNativeApp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigNativeApp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigNativeApp.toObject = function(includeInstance, msg) {
  var f, obj = {
appCustomUrlSchemesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
appDownloadLink: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
androidAppDownloadLink: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
iosAppDownloadLink: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
mobileExternalBrowser: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
mobileEnableBiometrics: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
mobilePreventScreenCapture: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
mobileJailbreakProtection: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigNativeApp}
 */
proto.common.v1.ConfigNativeApp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigNativeApp;
  return proto.common.v1.ConfigNativeApp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigNativeApp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigNativeApp}
 */
proto.common.v1.ConfigNativeApp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAppCustomUrlSchemes(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppDownloadLink(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAndroidAppDownloadLink(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIosAppDownloadLink(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMobileExternalBrowser(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMobileEnableBiometrics(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMobilePreventScreenCapture(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMobileJailbreakProtection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigNativeApp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigNativeApp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigNativeApp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigNativeApp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppCustomUrlSchemesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * repeated string app_custom_url_schemes = 1;
 * @return {!Array<string>}
 */
proto.common.v1.ConfigNativeApp.prototype.getAppCustomUrlSchemesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.setAppCustomUrlSchemesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.addAppCustomUrlSchemes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.clearAppCustomUrlSchemesList = function() {
  return this.setAppCustomUrlSchemesList([]);
};


/**
 * optional string app_download_link = 2;
 * @return {string}
 */
proto.common.v1.ConfigNativeApp.prototype.getAppDownloadLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.setAppDownloadLink = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.clearAppDownloadLink = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigNativeApp.prototype.hasAppDownloadLink = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string android_app_download_link = 3;
 * @return {string}
 */
proto.common.v1.ConfigNativeApp.prototype.getAndroidAppDownloadLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.setAndroidAppDownloadLink = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.clearAndroidAppDownloadLink = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigNativeApp.prototype.hasAndroidAppDownloadLink = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string ios_app_download_link = 4;
 * @return {string}
 */
proto.common.v1.ConfigNativeApp.prototype.getIosAppDownloadLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.setIosAppDownloadLink = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.clearIosAppDownloadLink = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigNativeApp.prototype.hasIosAppDownloadLink = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool mobile_external_browser = 5;
 * @return {boolean}
 */
proto.common.v1.ConfigNativeApp.prototype.getMobileExternalBrowser = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.setMobileExternalBrowser = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.clearMobileExternalBrowser = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigNativeApp.prototype.hasMobileExternalBrowser = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool mobile_enable_biometrics = 6;
 * @return {boolean}
 */
proto.common.v1.ConfigNativeApp.prototype.getMobileEnableBiometrics = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.setMobileEnableBiometrics = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.clearMobileEnableBiometrics = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigNativeApp.prototype.hasMobileEnableBiometrics = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool mobile_prevent_screen_capture = 7;
 * @return {boolean}
 */
proto.common.v1.ConfigNativeApp.prototype.getMobilePreventScreenCapture = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.setMobilePreventScreenCapture = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.clearMobilePreventScreenCapture = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigNativeApp.prototype.hasMobilePreventScreenCapture = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool mobile_jailbreak_protection = 8;
 * @return {boolean}
 */
proto.common.v1.ConfigNativeApp.prototype.getMobileJailbreakProtection = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.setMobileJailbreakProtection = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigNativeApp} returns this
 */
proto.common.v1.ConfigNativeApp.prototype.clearMobileJailbreakProtection = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigNativeApp.prototype.hasMobileJailbreakProtection = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigMeilisearch.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigMeilisearch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigMeilisearch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigMeilisearch.toObject = function(includeInstance, msg) {
  var f, obj = {
serverUrl: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
masterKey: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
enableIndexing: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
enableSearching: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
enableAutocomplete: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
batchSize: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
requestTimeoutSeconds: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
indexPrefix: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
searchCutoffMs: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
enableTypoTolerance: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigMeilisearch}
 */
proto.common.v1.ConfigMeilisearch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigMeilisearch;
  return proto.common.v1.ConfigMeilisearch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigMeilisearch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigMeilisearch}
 */
proto.common.v1.ConfigMeilisearch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMasterKey(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableIndexing(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableSearching(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableAutocomplete(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBatchSize(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRequestTimeoutSeconds(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setIndexPrefix(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSearchCutoffMs(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableTypoTolerance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigMeilisearch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigMeilisearch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigMeilisearch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigMeilisearch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional string server_url = 1;
 * @return {string}
 */
proto.common.v1.ConfigMeilisearch.prototype.getServerUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.setServerUrl = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.clearServerUrl = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMeilisearch.prototype.hasServerUrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string master_key = 2;
 * @return {string}
 */
proto.common.v1.ConfigMeilisearch.prototype.getMasterKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.setMasterKey = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.clearMasterKey = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMeilisearch.prototype.hasMasterKey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool enable_indexing = 3;
 * @return {boolean}
 */
proto.common.v1.ConfigMeilisearch.prototype.getEnableIndexing = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.setEnableIndexing = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.clearEnableIndexing = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMeilisearch.prototype.hasEnableIndexing = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool enable_searching = 4;
 * @return {boolean}
 */
proto.common.v1.ConfigMeilisearch.prototype.getEnableSearching = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.setEnableSearching = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.clearEnableSearching = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMeilisearch.prototype.hasEnableSearching = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool enable_autocomplete = 5;
 * @return {boolean}
 */
proto.common.v1.ConfigMeilisearch.prototype.getEnableAutocomplete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.setEnableAutocomplete = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.clearEnableAutocomplete = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMeilisearch.prototype.hasEnableAutocomplete = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 batch_size = 6;
 * @return {number}
 */
proto.common.v1.ConfigMeilisearch.prototype.getBatchSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.setBatchSize = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.clearBatchSize = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMeilisearch.prototype.hasBatchSize = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 request_timeout_seconds = 7;
 * @return {number}
 */
proto.common.v1.ConfigMeilisearch.prototype.getRequestTimeoutSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.setRequestTimeoutSeconds = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.clearRequestTimeoutSeconds = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMeilisearch.prototype.hasRequestTimeoutSeconds = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string index_prefix = 8;
 * @return {string}
 */
proto.common.v1.ConfigMeilisearch.prototype.getIndexPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.setIndexPrefix = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.clearIndexPrefix = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMeilisearch.prototype.hasIndexPrefix = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 search_cutoff_ms = 9;
 * @return {number}
 */
proto.common.v1.ConfigMeilisearch.prototype.getSearchCutoffMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.setSearchCutoffMs = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.clearSearchCutoffMs = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMeilisearch.prototype.hasSearchCutoffMs = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool enable_typo_tolerance = 10;
 * @return {boolean}
 */
proto.common.v1.ConfigMeilisearch.prototype.getEnableTypoTolerance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.setEnableTypoTolerance = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigMeilisearch} returns this
 */
proto.common.v1.ConfigMeilisearch.prototype.clearEnableTypoTolerance = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigMeilisearch.prototype.hasEnableTypoTolerance = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigBleve.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigBleve.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigBleve} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigBleve.toObject = function(includeInstance, msg) {
  var f, obj = {
indexDir: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
enableIndexing: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
enableSearching: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
enableAutocomplete: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
bulkIndexingTimeWindowSeconds: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
batchSize: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigBleve}
 */
proto.common.v1.ConfigBleve.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigBleve;
  return proto.common.v1.ConfigBleve.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigBleve} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigBleve}
 */
proto.common.v1.ConfigBleve.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIndexDir(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableIndexing(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableSearching(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableAutocomplete(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBulkIndexingTimeWindowSeconds(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBatchSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigBleve.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigBleve.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigBleve} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigBleve.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional string index_dir = 1;
 * @return {string}
 */
proto.common.v1.ConfigBleve.prototype.getIndexDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigBleve} returns this
 */
proto.common.v1.ConfigBleve.prototype.setIndexDir = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigBleve} returns this
 */
proto.common.v1.ConfigBleve.prototype.clearIndexDir = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigBleve.prototype.hasIndexDir = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool enable_indexing = 2;
 * @return {boolean}
 */
proto.common.v1.ConfigBleve.prototype.getEnableIndexing = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigBleve} returns this
 */
proto.common.v1.ConfigBleve.prototype.setEnableIndexing = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigBleve} returns this
 */
proto.common.v1.ConfigBleve.prototype.clearEnableIndexing = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigBleve.prototype.hasEnableIndexing = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool enable_searching = 3;
 * @return {boolean}
 */
proto.common.v1.ConfigBleve.prototype.getEnableSearching = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigBleve} returns this
 */
proto.common.v1.ConfigBleve.prototype.setEnableSearching = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigBleve} returns this
 */
proto.common.v1.ConfigBleve.prototype.clearEnableSearching = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigBleve.prototype.hasEnableSearching = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool enable_autocomplete = 4;
 * @return {boolean}
 */
proto.common.v1.ConfigBleve.prototype.getEnableAutocomplete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigBleve} returns this
 */
proto.common.v1.ConfigBleve.prototype.setEnableAutocomplete = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigBleve} returns this
 */
proto.common.v1.ConfigBleve.prototype.clearEnableAutocomplete = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigBleve.prototype.hasEnableAutocomplete = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 bulk_indexing_time_window_seconds = 5;
 * @return {number}
 */
proto.common.v1.ConfigBleve.prototype.getBulkIndexingTimeWindowSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigBleve} returns this
 */
proto.common.v1.ConfigBleve.prototype.setBulkIndexingTimeWindowSeconds = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigBleve} returns this
 */
proto.common.v1.ConfigBleve.prototype.clearBulkIndexingTimeWindowSeconds = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigBleve.prototype.hasBulkIndexingTimeWindowSeconds = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 batch_size = 6;
 * @return {number}
 */
proto.common.v1.ConfigBleve.prototype.getBatchSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigBleve} returns this
 */
proto.common.v1.ConfigBleve.prototype.setBatchSize = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigBleve} returns this
 */
proto.common.v1.ConfigBleve.prototype.clearBatchSize = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigBleve.prototype.hasBatchSize = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigDataRetention.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigDataRetention.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigDataRetention} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigDataRetention.toObject = function(includeInstance, msg) {
  var f, obj = {
enableMessageDeletion: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
enableFileDeletion: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
enableBoardsDeletion: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
messageRetentionHours: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
fileRetentionHours: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
boardsRetentionDays: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
deletionJobStartTime: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
batchSize: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
timeBetweenBatchesMilliseconds: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
retentionIdsBatchSize: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigDataRetention}
 */
proto.common.v1.ConfigDataRetention.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigDataRetention;
  return proto.common.v1.ConfigDataRetention.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigDataRetention} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigDataRetention}
 */
proto.common.v1.ConfigDataRetention.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableMessageDeletion(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableFileDeletion(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableBoardsDeletion(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMessageRetentionHours(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFileRetentionHours(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBoardsRetentionDays(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeletionJobStartTime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBatchSize(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimeBetweenBatchesMilliseconds(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRetentionIdsBatchSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigDataRetention.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigDataRetention.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigDataRetention} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigDataRetention.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
};


/**
 * optional bool enable_message_deletion = 1;
 * @return {boolean}
 */
proto.common.v1.ConfigDataRetention.prototype.getEnableMessageDeletion = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.setEnableMessageDeletion = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.clearEnableMessageDeletion = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigDataRetention.prototype.hasEnableMessageDeletion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool enable_file_deletion = 2;
 * @return {boolean}
 */
proto.common.v1.ConfigDataRetention.prototype.getEnableFileDeletion = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.setEnableFileDeletion = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.clearEnableFileDeletion = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigDataRetention.prototype.hasEnableFileDeletion = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool enable_boards_deletion = 3;
 * @return {boolean}
 */
proto.common.v1.ConfigDataRetention.prototype.getEnableBoardsDeletion = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.setEnableBoardsDeletion = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.clearEnableBoardsDeletion = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigDataRetention.prototype.hasEnableBoardsDeletion = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 message_retention_hours = 4;
 * @return {number}
 */
proto.common.v1.ConfigDataRetention.prototype.getMessageRetentionHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.setMessageRetentionHours = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.clearMessageRetentionHours = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigDataRetention.prototype.hasMessageRetentionHours = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 file_retention_hours = 5;
 * @return {number}
 */
proto.common.v1.ConfigDataRetention.prototype.getFileRetentionHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.setFileRetentionHours = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.clearFileRetentionHours = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigDataRetention.prototype.hasFileRetentionHours = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 boards_retention_days = 6;
 * @return {number}
 */
proto.common.v1.ConfigDataRetention.prototype.getBoardsRetentionDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.setBoardsRetentionDays = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.clearBoardsRetentionDays = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigDataRetention.prototype.hasBoardsRetentionDays = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string deletion_job_start_time = 7;
 * @return {string}
 */
proto.common.v1.ConfigDataRetention.prototype.getDeletionJobStartTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.setDeletionJobStartTime = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.clearDeletionJobStartTime = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigDataRetention.prototype.hasDeletionJobStartTime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 batch_size = 8;
 * @return {number}
 */
proto.common.v1.ConfigDataRetention.prototype.getBatchSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.setBatchSize = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.clearBatchSize = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigDataRetention.prototype.hasBatchSize = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 time_between_batches_milliseconds = 9;
 * @return {number}
 */
proto.common.v1.ConfigDataRetention.prototype.getTimeBetweenBatchesMilliseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.setTimeBetweenBatchesMilliseconds = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.clearTimeBetweenBatchesMilliseconds = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigDataRetention.prototype.hasTimeBetweenBatchesMilliseconds = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 retention_ids_batch_size = 10;
 * @return {number}
 */
proto.common.v1.ConfigDataRetention.prototype.getRetentionIdsBatchSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.setRetentionIdsBatchSize = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigDataRetention} returns this
 */
proto.common.v1.ConfigDataRetention.prototype.clearRetentionIdsBatchSize = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigDataRetention.prototype.hasRetentionIdsBatchSize = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigImageProxy.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigImageProxy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigImageProxy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigImageProxy.toObject = function(includeInstance, msg) {
  var f, obj = {
enable: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
imageProxyType: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
remoteImageProxyUrl: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
remoteImageProxyOptions: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigImageProxy}
 */
proto.common.v1.ConfigImageProxy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigImageProxy;
  return proto.common.v1.ConfigImageProxy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigImageProxy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigImageProxy}
 */
proto.common.v1.ConfigImageProxy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageProxyType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteImageProxyUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteImageProxyOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigImageProxy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigImageProxy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigImageProxy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigImageProxy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool enable = 1;
 * @return {boolean}
 */
proto.common.v1.ConfigImageProxy.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.common.v1.ConfigImageProxy} returns this
 */
proto.common.v1.ConfigImageProxy.prototype.setEnable = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigImageProxy} returns this
 */
proto.common.v1.ConfigImageProxy.prototype.clearEnable = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigImageProxy.prototype.hasEnable = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string image_proxy_type = 2;
 * @return {string}
 */
proto.common.v1.ConfigImageProxy.prototype.getImageProxyType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigImageProxy} returns this
 */
proto.common.v1.ConfigImageProxy.prototype.setImageProxyType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigImageProxy} returns this
 */
proto.common.v1.ConfigImageProxy.prototype.clearImageProxyType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigImageProxy.prototype.hasImageProxyType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string remote_image_proxy_url = 3;
 * @return {string}
 */
proto.common.v1.ConfigImageProxy.prototype.getRemoteImageProxyUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigImageProxy} returns this
 */
proto.common.v1.ConfigImageProxy.prototype.setRemoteImageProxyUrl = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigImageProxy} returns this
 */
proto.common.v1.ConfigImageProxy.prototype.clearRemoteImageProxyUrl = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigImageProxy.prototype.hasRemoteImageProxyUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string remote_image_proxy_options = 4;
 * @return {string}
 */
proto.common.v1.ConfigImageProxy.prototype.getRemoteImageProxyOptions = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigImageProxy} returns this
 */
proto.common.v1.ConfigImageProxy.prototype.setRemoteImageProxyOptions = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.common.v1.ConfigImageProxy} returns this
 */
proto.common.v1.ConfigImageProxy.prototype.clearRemoteImageProxyOptions = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigImageProxy.prototype.hasRemoteImageProxyOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.Config.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.Config.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.Config} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.Config.toObject = function(includeInstance, msg) {
  var f, obj = {
main: (f = msg.getMain()) && proto.common.v1.ConfigMain.toObject(includeInstance, f),
services: (f = msg.getServices()) && proto.common.v1.ConfigServices.toObject(includeInstance, f),
security: (f = msg.getSecurity()) && proto.common.v1.ConfigSecurity.toObject(includeInstance, f),
cache: (f = msg.getCache()) && proto.common.v1.CacheConfig.toObject(includeInstance, f),
metrics: (f = msg.getMetrics()) && proto.common.v1.ConfigMetrics.toObject(includeInstance, f),
sso: (f = msg.getSso()) && proto.common.v1.ConfigSSO.toObject(includeInstance, f),
sql: (f = msg.getSql()) && proto.common.v1.ConfigSql.toObject(includeInstance, f),
password: (f = msg.getPassword()) && proto.common.v1.ConfigPassword.toObject(includeInstance, f),
file: (f = msg.getFile()) && proto.common.v1.ConfigFile.toObject(includeInstance, f),
email: (f = msg.getEmail()) && proto.common.v1.ConfigEmail.toObject(includeInstance, f),
rateLimit: (f = msg.getRateLimit()) && proto.common.v1.ConfigRateLimit.toObject(includeInstance, f),
privacy: (f = msg.getPrivacy()) && proto.common.v1.ConfigPrivacy.toObject(includeInstance, f),
support: (f = msg.getSupport()) && proto.common.v1.ConfigSupport.toObject(includeInstance, f),
localization: (f = msg.getLocalization()) && proto.common.v1.ConfigLocalization.toObject(includeInstance, f),
ldap: (f = msg.getLdap()) && proto.common.v1.ConfigLdap.toObject(includeInstance, f),
saml: (f = msg.getSaml()) && proto.common.v1.ConfigSaml.toObject(includeInstance, f),
nativeApp: (f = msg.getNativeApp()) && proto.common.v1.ConfigNativeApp.toObject(includeInstance, f),
meilisearch: (f = msg.getMeilisearch()) && proto.common.v1.ConfigMeilisearch.toObject(includeInstance, f),
bleve: (f = msg.getBleve()) && proto.common.v1.ConfigBleve.toObject(includeInstance, f),
dataRetention: (f = msg.getDataRetention()) && proto.common.v1.ConfigDataRetention.toObject(includeInstance, f),
imageProxy: (f = msg.getImageProxy()) && proto.common.v1.ConfigImageProxy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.Config}
 */
proto.common.v1.Config.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.Config;
  return proto.common.v1.Config.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.Config} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.Config}
 */
proto.common.v1.Config.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.common.v1.ConfigMain;
      reader.readMessage(value,proto.common.v1.ConfigMain.deserializeBinaryFromReader);
      msg.setMain(value);
      break;
    case 2:
      var value = new proto.common.v1.ConfigServices;
      reader.readMessage(value,proto.common.v1.ConfigServices.deserializeBinaryFromReader);
      msg.setServices(value);
      break;
    case 3:
      var value = new proto.common.v1.ConfigSecurity;
      reader.readMessage(value,proto.common.v1.ConfigSecurity.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 4:
      var value = new proto.common.v1.CacheConfig;
      reader.readMessage(value,proto.common.v1.CacheConfig.deserializeBinaryFromReader);
      msg.setCache(value);
      break;
    case 5:
      var value = new proto.common.v1.ConfigMetrics;
      reader.readMessage(value,proto.common.v1.ConfigMetrics.deserializeBinaryFromReader);
      msg.setMetrics(value);
      break;
    case 6:
      var value = new proto.common.v1.ConfigSSO;
      reader.readMessage(value,proto.common.v1.ConfigSSO.deserializeBinaryFromReader);
      msg.setSso(value);
      break;
    case 7:
      var value = new proto.common.v1.ConfigSql;
      reader.readMessage(value,proto.common.v1.ConfigSql.deserializeBinaryFromReader);
      msg.setSql(value);
      break;
    case 8:
      var value = new proto.common.v1.ConfigPassword;
      reader.readMessage(value,proto.common.v1.ConfigPassword.deserializeBinaryFromReader);
      msg.setPassword(value);
      break;
    case 9:
      var value = new proto.common.v1.ConfigFile;
      reader.readMessage(value,proto.common.v1.ConfigFile.deserializeBinaryFromReader);
      msg.setFile(value);
      break;
    case 10:
      var value = new proto.common.v1.ConfigEmail;
      reader.readMessage(value,proto.common.v1.ConfigEmail.deserializeBinaryFromReader);
      msg.setEmail(value);
      break;
    case 11:
      var value = new proto.common.v1.ConfigRateLimit;
      reader.readMessage(value,proto.common.v1.ConfigRateLimit.deserializeBinaryFromReader);
      msg.setRateLimit(value);
      break;
    case 12:
      var value = new proto.common.v1.ConfigPrivacy;
      reader.readMessage(value,proto.common.v1.ConfigPrivacy.deserializeBinaryFromReader);
      msg.setPrivacy(value);
      break;
    case 13:
      var value = new proto.common.v1.ConfigSupport;
      reader.readMessage(value,proto.common.v1.ConfigSupport.deserializeBinaryFromReader);
      msg.setSupport(value);
      break;
    case 14:
      var value = new proto.common.v1.ConfigLocalization;
      reader.readMessage(value,proto.common.v1.ConfigLocalization.deserializeBinaryFromReader);
      msg.setLocalization(value);
      break;
    case 15:
      var value = new proto.common.v1.ConfigLdap;
      reader.readMessage(value,proto.common.v1.ConfigLdap.deserializeBinaryFromReader);
      msg.setLdap(value);
      break;
    case 16:
      var value = new proto.common.v1.ConfigSaml;
      reader.readMessage(value,proto.common.v1.ConfigSaml.deserializeBinaryFromReader);
      msg.setSaml(value);
      break;
    case 17:
      var value = new proto.common.v1.ConfigNativeApp;
      reader.readMessage(value,proto.common.v1.ConfigNativeApp.deserializeBinaryFromReader);
      msg.setNativeApp(value);
      break;
    case 18:
      var value = new proto.common.v1.ConfigMeilisearch;
      reader.readMessage(value,proto.common.v1.ConfigMeilisearch.deserializeBinaryFromReader);
      msg.setMeilisearch(value);
      break;
    case 19:
      var value = new proto.common.v1.ConfigBleve;
      reader.readMessage(value,proto.common.v1.ConfigBleve.deserializeBinaryFromReader);
      msg.setBleve(value);
      break;
    case 20:
      var value = new proto.common.v1.ConfigDataRetention;
      reader.readMessage(value,proto.common.v1.ConfigDataRetention.deserializeBinaryFromReader);
      msg.setDataRetention(value);
      break;
    case 21:
      var value = new proto.common.v1.ConfigImageProxy;
      reader.readMessage(value,proto.common.v1.ConfigImageProxy.deserializeBinaryFromReader);
      msg.setImageProxy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.Config.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.Config.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.Config} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.Config.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMain();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.common.v1.ConfigMain.serializeBinaryToWriter
    );
  }
  f = message.getServices();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.common.v1.ConfigServices.serializeBinaryToWriter
    );
  }
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.common.v1.ConfigSecurity.serializeBinaryToWriter
    );
  }
  f = message.getCache();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.common.v1.CacheConfig.serializeBinaryToWriter
    );
  }
  f = message.getMetrics();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.common.v1.ConfigMetrics.serializeBinaryToWriter
    );
  }
  f = message.getSso();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.common.v1.ConfigSSO.serializeBinaryToWriter
    );
  }
  f = message.getSql();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.common.v1.ConfigSql.serializeBinaryToWriter
    );
  }
  f = message.getPassword();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.common.v1.ConfigPassword.serializeBinaryToWriter
    );
  }
  f = message.getFile();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.common.v1.ConfigFile.serializeBinaryToWriter
    );
  }
  f = message.getEmail();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.common.v1.ConfigEmail.serializeBinaryToWriter
    );
  }
  f = message.getRateLimit();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.common.v1.ConfigRateLimit.serializeBinaryToWriter
    );
  }
  f = message.getPrivacy();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.common.v1.ConfigPrivacy.serializeBinaryToWriter
    );
  }
  f = message.getSupport();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.common.v1.ConfigSupport.serializeBinaryToWriter
    );
  }
  f = message.getLocalization();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.common.v1.ConfigLocalization.serializeBinaryToWriter
    );
  }
  f = message.getLdap();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.common.v1.ConfigLdap.serializeBinaryToWriter
    );
  }
  f = message.getSaml();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.common.v1.ConfigSaml.serializeBinaryToWriter
    );
  }
  f = message.getNativeApp();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.common.v1.ConfigNativeApp.serializeBinaryToWriter
    );
  }
  f = message.getMeilisearch();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.common.v1.ConfigMeilisearch.serializeBinaryToWriter
    );
  }
  f = message.getBleve();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.common.v1.ConfigBleve.serializeBinaryToWriter
    );
  }
  f = message.getDataRetention();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.common.v1.ConfigDataRetention.serializeBinaryToWriter
    );
  }
  f = message.getImageProxy();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.common.v1.ConfigImageProxy.serializeBinaryToWriter
    );
  }
};


/**
 * optional ConfigMain main = 1;
 * @return {?proto.common.v1.ConfigMain}
 */
proto.common.v1.Config.prototype.getMain = function() {
  return /** @type{?proto.common.v1.ConfigMain} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigMain, 1));
};


/**
 * @param {?proto.common.v1.ConfigMain|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setMain = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearMain = function() {
  return this.setMain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasMain = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ConfigServices services = 2;
 * @return {?proto.common.v1.ConfigServices}
 */
proto.common.v1.Config.prototype.getServices = function() {
  return /** @type{?proto.common.v1.ConfigServices} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigServices, 2));
};


/**
 * @param {?proto.common.v1.ConfigServices|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setServices = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearServices = function() {
  return this.setServices(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasServices = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ConfigSecurity security = 3;
 * @return {?proto.common.v1.ConfigSecurity}
 */
proto.common.v1.Config.prototype.getSecurity = function() {
  return /** @type{?proto.common.v1.ConfigSecurity} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigSecurity, 3));
};


/**
 * @param {?proto.common.v1.ConfigSecurity|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CacheConfig cache = 4;
 * @return {?proto.common.v1.CacheConfig}
 */
proto.common.v1.Config.prototype.getCache = function() {
  return /** @type{?proto.common.v1.CacheConfig} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.CacheConfig, 4));
};


/**
 * @param {?proto.common.v1.CacheConfig|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setCache = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearCache = function() {
  return this.setCache(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasCache = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ConfigMetrics metrics = 5;
 * @return {?proto.common.v1.ConfigMetrics}
 */
proto.common.v1.Config.prototype.getMetrics = function() {
  return /** @type{?proto.common.v1.ConfigMetrics} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigMetrics, 5));
};


/**
 * @param {?proto.common.v1.ConfigMetrics|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setMetrics = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearMetrics = function() {
  return this.setMetrics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasMetrics = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ConfigSSO sso = 6;
 * @return {?proto.common.v1.ConfigSSO}
 */
proto.common.v1.Config.prototype.getSso = function() {
  return /** @type{?proto.common.v1.ConfigSSO} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigSSO, 6));
};


/**
 * @param {?proto.common.v1.ConfigSSO|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setSso = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearSso = function() {
  return this.setSso(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasSso = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ConfigSql sql = 7;
 * @return {?proto.common.v1.ConfigSql}
 */
proto.common.v1.Config.prototype.getSql = function() {
  return /** @type{?proto.common.v1.ConfigSql} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigSql, 7));
};


/**
 * @param {?proto.common.v1.ConfigSql|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setSql = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearSql = function() {
  return this.setSql(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasSql = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ConfigPassword password = 8;
 * @return {?proto.common.v1.ConfigPassword}
 */
proto.common.v1.Config.prototype.getPassword = function() {
  return /** @type{?proto.common.v1.ConfigPassword} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigPassword, 8));
};


/**
 * @param {?proto.common.v1.ConfigPassword|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setPassword = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearPassword = function() {
  return this.setPassword(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ConfigFile file = 9;
 * @return {?proto.common.v1.ConfigFile}
 */
proto.common.v1.Config.prototype.getFile = function() {
  return /** @type{?proto.common.v1.ConfigFile} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigFile, 9));
};


/**
 * @param {?proto.common.v1.ConfigFile|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setFile = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearFile = function() {
  return this.setFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasFile = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ConfigEmail email = 10;
 * @return {?proto.common.v1.ConfigEmail}
 */
proto.common.v1.Config.prototype.getEmail = function() {
  return /** @type{?proto.common.v1.ConfigEmail} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigEmail, 10));
};


/**
 * @param {?proto.common.v1.ConfigEmail|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setEmail = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearEmail = function() {
  return this.setEmail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ConfigRateLimit rate_limit = 11;
 * @return {?proto.common.v1.ConfigRateLimit}
 */
proto.common.v1.Config.prototype.getRateLimit = function() {
  return /** @type{?proto.common.v1.ConfigRateLimit} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigRateLimit, 11));
};


/**
 * @param {?proto.common.v1.ConfigRateLimit|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setRateLimit = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearRateLimit = function() {
  return this.setRateLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasRateLimit = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ConfigPrivacy privacy = 12;
 * @return {?proto.common.v1.ConfigPrivacy}
 */
proto.common.v1.Config.prototype.getPrivacy = function() {
  return /** @type{?proto.common.v1.ConfigPrivacy} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigPrivacy, 12));
};


/**
 * @param {?proto.common.v1.ConfigPrivacy|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setPrivacy = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearPrivacy = function() {
  return this.setPrivacy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasPrivacy = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional ConfigSupport support = 13;
 * @return {?proto.common.v1.ConfigSupport}
 */
proto.common.v1.Config.prototype.getSupport = function() {
  return /** @type{?proto.common.v1.ConfigSupport} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigSupport, 13));
};


/**
 * @param {?proto.common.v1.ConfigSupport|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setSupport = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearSupport = function() {
  return this.setSupport(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasSupport = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ConfigLocalization localization = 14;
 * @return {?proto.common.v1.ConfigLocalization}
 */
proto.common.v1.Config.prototype.getLocalization = function() {
  return /** @type{?proto.common.v1.ConfigLocalization} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigLocalization, 14));
};


/**
 * @param {?proto.common.v1.ConfigLocalization|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setLocalization = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearLocalization = function() {
  return this.setLocalization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasLocalization = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional ConfigLdap ldap = 15;
 * @return {?proto.common.v1.ConfigLdap}
 */
proto.common.v1.Config.prototype.getLdap = function() {
  return /** @type{?proto.common.v1.ConfigLdap} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigLdap, 15));
};


/**
 * @param {?proto.common.v1.ConfigLdap|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setLdap = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearLdap = function() {
  return this.setLdap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasLdap = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional ConfigSaml saml = 16;
 * @return {?proto.common.v1.ConfigSaml}
 */
proto.common.v1.Config.prototype.getSaml = function() {
  return /** @type{?proto.common.v1.ConfigSaml} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigSaml, 16));
};


/**
 * @param {?proto.common.v1.ConfigSaml|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setSaml = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearSaml = function() {
  return this.setSaml(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasSaml = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional ConfigNativeApp native_app = 17;
 * @return {?proto.common.v1.ConfigNativeApp}
 */
proto.common.v1.Config.prototype.getNativeApp = function() {
  return /** @type{?proto.common.v1.ConfigNativeApp} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigNativeApp, 17));
};


/**
 * @param {?proto.common.v1.ConfigNativeApp|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setNativeApp = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearNativeApp = function() {
  return this.setNativeApp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasNativeApp = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional ConfigMeilisearch meilisearch = 18;
 * @return {?proto.common.v1.ConfigMeilisearch}
 */
proto.common.v1.Config.prototype.getMeilisearch = function() {
  return /** @type{?proto.common.v1.ConfigMeilisearch} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigMeilisearch, 18));
};


/**
 * @param {?proto.common.v1.ConfigMeilisearch|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setMeilisearch = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearMeilisearch = function() {
  return this.setMeilisearch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasMeilisearch = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ConfigBleve bleve = 19;
 * @return {?proto.common.v1.ConfigBleve}
 */
proto.common.v1.Config.prototype.getBleve = function() {
  return /** @type{?proto.common.v1.ConfigBleve} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigBleve, 19));
};


/**
 * @param {?proto.common.v1.ConfigBleve|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setBleve = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearBleve = function() {
  return this.setBleve(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasBleve = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional ConfigDataRetention data_retention = 20;
 * @return {?proto.common.v1.ConfigDataRetention}
 */
proto.common.v1.Config.prototype.getDataRetention = function() {
  return /** @type{?proto.common.v1.ConfigDataRetention} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigDataRetention, 20));
};


/**
 * @param {?proto.common.v1.ConfigDataRetention|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setDataRetention = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearDataRetention = function() {
  return this.setDataRetention(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasDataRetention = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional ConfigImageProxy image_proxy = 21;
 * @return {?proto.common.v1.ConfigImageProxy}
 */
proto.common.v1.Config.prototype.getImageProxy = function() {
  return /** @type{?proto.common.v1.ConfigImageProxy} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ConfigImageProxy, 21));
};


/**
 * @param {?proto.common.v1.ConfigImageProxy|undefined} value
 * @return {!proto.common.v1.Config} returns this
*/
proto.common.v1.Config.prototype.setImageProxy = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.Config} returns this
 */
proto.common.v1.Config.prototype.clearImageProxy = function() {
  return this.setImageProxy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.Config.prototype.hasImageProxy = function() {
  return jspb.Message.getField(this, 21) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigGetRequest}
 */
proto.common.v1.ConfigGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigGetRequest;
  return proto.common.v1.ConfigGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigGetRequest}
 */
proto.common.v1.ConfigGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.common.v1.ConfigGetResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.common.v1.ConfigGetResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.common.v1.ConfigGetResponse.ResponseCase}
 */
proto.common.v1.ConfigGetResponse.prototype.getResponseCase = function() {
  return /** @type {proto.common.v1.ConfigGetResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.common.v1.ConfigGetResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigGetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigGetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigGetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigGetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
data: (f = msg.getData()) && proto.common.v1.Config.toObject(includeInstance, f),
error: (f = msg.getError()) && shared_v1_error_pb.AppError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigGetResponse}
 */
proto.common.v1.ConfigGetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigGetResponse;
  return proto.common.v1.ConfigGetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigGetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigGetResponse}
 */
proto.common.v1.ConfigGetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.common.v1.Config;
      reader.readMessage(value,proto.common.v1.Config.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new shared_v1_error_pb.AppError;
      reader.readMessage(value,shared_v1_error_pb.AppError.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigGetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigGetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigGetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigGetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.common.v1.Config.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      shared_v1_error_pb.AppError.serializeBinaryToWriter
    );
  }
};


/**
 * optional Config data = 1;
 * @return {?proto.common.v1.Config}
 */
proto.common.v1.ConfigGetResponse.prototype.getData = function() {
  return /** @type{?proto.common.v1.Config} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.Config, 1));
};


/**
 * @param {?proto.common.v1.Config|undefined} value
 * @return {!proto.common.v1.ConfigGetResponse} returns this
*/
proto.common.v1.ConfigGetResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.common.v1.ConfigGetResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.ConfigGetResponse} returns this
 */
proto.common.v1.ConfigGetResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigGetResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional shared.v1.AppError error = 2;
 * @return {?proto.shared.v1.AppError}
 */
proto.common.v1.ConfigGetResponse.prototype.getError = function() {
  return /** @type{?proto.shared.v1.AppError} */ (
    jspb.Message.getWrapperField(this, shared_v1_error_pb.AppError, 2));
};


/**
 * @param {?proto.shared.v1.AppError|undefined} value
 * @return {!proto.common.v1.ConfigGetResponse} returns this
*/
proto.common.v1.ConfigGetResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.common.v1.ConfigGetResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.ConfigGetResponse} returns this
 */
proto.common.v1.ConfigGetResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigGetResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
config: (f = msg.getConfig()) && proto.common.v1.Config.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigUpdateRequest}
 */
proto.common.v1.ConfigUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigUpdateRequest;
  return proto.common.v1.ConfigUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigUpdateRequest}
 */
proto.common.v1.ConfigUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.common.v1.Config;
      reader.readMessage(value,proto.common.v1.Config.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.common.v1.Config.serializeBinaryToWriter
    );
  }
};


/**
 * optional Config config = 1;
 * @return {?proto.common.v1.Config}
 */
proto.common.v1.ConfigUpdateRequest.prototype.getConfig = function() {
  return /** @type{?proto.common.v1.Config} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.Config, 1));
};


/**
 * @param {?proto.common.v1.Config|undefined} value
 * @return {!proto.common.v1.ConfigUpdateRequest} returns this
*/
proto.common.v1.ConfigUpdateRequest.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.ConfigUpdateRequest} returns this
 */
proto.common.v1.ConfigUpdateRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigUpdateRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.common.v1.ConfigUpdateResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.common.v1.ConfigUpdateResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.common.v1.ConfigUpdateResponse.ResponseCase}
 */
proto.common.v1.ConfigUpdateResponse.prototype.getResponseCase = function() {
  return /** @type {proto.common.v1.ConfigUpdateResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.common.v1.ConfigUpdateResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
data: (f = msg.getData()) && proto.common.v1.Config.toObject(includeInstance, f),
error: (f = msg.getError()) && shared_v1_error_pb.AppError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigUpdateResponse}
 */
proto.common.v1.ConfigUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigUpdateResponse;
  return proto.common.v1.ConfigUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigUpdateResponse}
 */
proto.common.v1.ConfigUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.common.v1.Config;
      reader.readMessage(value,proto.common.v1.Config.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new shared_v1_error_pb.AppError;
      reader.readMessage(value,shared_v1_error_pb.AppError.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.common.v1.Config.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      shared_v1_error_pb.AppError.serializeBinaryToWriter
    );
  }
};


/**
 * optional Config data = 1;
 * @return {?proto.common.v1.Config}
 */
proto.common.v1.ConfigUpdateResponse.prototype.getData = function() {
  return /** @type{?proto.common.v1.Config} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.Config, 1));
};


/**
 * @param {?proto.common.v1.Config|undefined} value
 * @return {!proto.common.v1.ConfigUpdateResponse} returns this
*/
proto.common.v1.ConfigUpdateResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.common.v1.ConfigUpdateResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.ConfigUpdateResponse} returns this
 */
proto.common.v1.ConfigUpdateResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigUpdateResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional shared.v1.AppError error = 2;
 * @return {?proto.shared.v1.AppError}
 */
proto.common.v1.ConfigUpdateResponse.prototype.getError = function() {
  return /** @type{?proto.shared.v1.AppError} */ (
    jspb.Message.getWrapperField(this, shared_v1_error_pb.AppError, 2));
};


/**
 * @param {?proto.shared.v1.AppError|undefined} value
 * @return {!proto.common.v1.ConfigUpdateResponse} returns this
*/
proto.common.v1.ConfigUpdateResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.common.v1.ConfigUpdateResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.ConfigUpdateResponse} returns this
 */
proto.common.v1.ConfigUpdateResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigUpdateResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.common.v1.ConfigListenerResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.common.v1.ConfigListenerResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.common.v1.ConfigListenerResponse.ResponseCase}
 */
proto.common.v1.ConfigListenerResponse.prototype.getResponseCase = function() {
  return /** @type {proto.common.v1.ConfigListenerResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.common.v1.ConfigListenerResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigListenerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigListenerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigListenerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigListenerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
data: (f = msg.getData()) && proto.common.v1.Config.toObject(includeInstance, f),
error: (f = msg.getError()) && shared_v1_error_pb.AppError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigListenerResponse}
 */
proto.common.v1.ConfigListenerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigListenerResponse;
  return proto.common.v1.ConfigListenerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigListenerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigListenerResponse}
 */
proto.common.v1.ConfigListenerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.common.v1.Config;
      reader.readMessage(value,proto.common.v1.Config.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new shared_v1_error_pb.AppError;
      reader.readMessage(value,shared_v1_error_pb.AppError.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigListenerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigListenerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigListenerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigListenerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.common.v1.Config.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      shared_v1_error_pb.AppError.serializeBinaryToWriter
    );
  }
};


/**
 * optional Config data = 1;
 * @return {?proto.common.v1.Config}
 */
proto.common.v1.ConfigListenerResponse.prototype.getData = function() {
  return /** @type{?proto.common.v1.Config} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.Config, 1));
};


/**
 * @param {?proto.common.v1.Config|undefined} value
 * @return {!proto.common.v1.ConfigListenerResponse} returns this
*/
proto.common.v1.ConfigListenerResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.common.v1.ConfigListenerResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.ConfigListenerResponse} returns this
 */
proto.common.v1.ConfigListenerResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigListenerResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional shared.v1.AppError error = 2;
 * @return {?proto.shared.v1.AppError}
 */
proto.common.v1.ConfigListenerResponse.prototype.getError = function() {
  return /** @type{?proto.shared.v1.AppError} */ (
    jspb.Message.getWrapperField(this, shared_v1_error_pb.AppError, 2));
};


/**
 * @param {?proto.shared.v1.AppError|undefined} value
 * @return {!proto.common.v1.ConfigListenerResponse} returns this
*/
proto.common.v1.ConfigListenerResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.common.v1.ConfigListenerResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.common.v1.ConfigListenerResponse} returns this
 */
proto.common.v1.ConfigListenerResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.common.v1.ConfigListenerResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.v1.ConfigListenerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.common.v1.ConfigListenerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.v1.ConfigListenerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigListenerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
clientId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.v1.ConfigListenerRequest}
 */
proto.common.v1.ConfigListenerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.v1.ConfigListenerRequest;
  return proto.common.v1.ConfigListenerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.v1.ConfigListenerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.v1.ConfigListenerRequest}
 */
proto.common.v1.ConfigListenerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.v1.ConfigListenerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.v1.ConfigListenerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.v1.ConfigListenerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.v1.ConfigListenerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.common.v1.ConfigListenerRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.v1.ConfigListenerRequest} returns this
 */
proto.common.v1.ConfigListenerRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.common.v1);
