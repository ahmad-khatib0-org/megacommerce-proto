// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: user/v1/supplier.proto
// Protobuf C++ Version: 6.31.1

#ifndef user_2fv1_2fsupplier_2eproto_2epb_2eh
#define user_2fv1_2fsupplier_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "shared/v1/error.pb.h"
#include "google/protobuf/empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_user_2fv1_2fsupplier_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_user_2fv1_2fsupplier_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_user_2fv1_2fsupplier_2eproto;
}  // extern "C"
namespace user {
namespace v1 {
class SupplierCreateRequest;
struct SupplierCreateRequestDefaultTypeInternal;
extern SupplierCreateRequestDefaultTypeInternal _SupplierCreateRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SupplierCreateRequest_class_data_;
class SupplierCreateResponse;
struct SupplierCreateResponseDefaultTypeInternal;
extern SupplierCreateResponseDefaultTypeInternal _SupplierCreateResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SupplierCreateResponse_class_data_;
}  // namespace v1
}  // namespace user
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace user {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class SupplierCreateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:user.v1.SupplierCreateRequest) */ {
 public:
  inline SupplierCreateRequest() : SupplierCreateRequest(nullptr) {}
  ~SupplierCreateRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SupplierCreateRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SupplierCreateRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SupplierCreateRequest(::google::protobuf::internal::ConstantInitialized);

  inline SupplierCreateRequest(const SupplierCreateRequest& from) : SupplierCreateRequest(nullptr, from) {}
  inline SupplierCreateRequest(SupplierCreateRequest&& from) noexcept
      : SupplierCreateRequest(nullptr, ::std::move(from)) {}
  inline SupplierCreateRequest& operator=(const SupplierCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SupplierCreateRequest& operator=(SupplierCreateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SupplierCreateRequest& default_instance() {
    return *reinterpret_cast<const SupplierCreateRequest*>(
        &_SupplierCreateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SupplierCreateRequest& a, SupplierCreateRequest& b) { a.Swap(&b); }
  inline void Swap(SupplierCreateRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SupplierCreateRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SupplierCreateRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SupplierCreateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SupplierCreateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SupplierCreateRequest& from) { SupplierCreateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SupplierCreateRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "user.v1.SupplierCreateRequest"; }

 protected:
  explicit SupplierCreateRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SupplierCreateRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SupplierCreateRequest& from);
  SupplierCreateRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SupplierCreateRequest&& from) noexcept
      : SupplierCreateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUsernameFieldNumber = 1,
    kEmailFieldNumber = 2,
    kFirstNameFieldNumber = 3,
    kLastNameFieldNumber = 4,
    kPasswordFieldNumber = 5,
    kMembershipFieldNumber = 6,
  };
  // string username = 1 [json_name = "username"];
  void clear_username() ;
  const ::std::string& username() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_username(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_username();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_username();
  void set_allocated_username(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_username() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_username(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_username();

  public:
  // string email = 2 [json_name = "email"];
  void clear_email() ;
  const ::std::string& email() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_email();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_email();
  void set_allocated_email(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_email() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_email(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_email();

  public:
  // string first_name = 3 [json_name = "firstName"];
  void clear_first_name() ;
  const ::std::string& first_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_first_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_first_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_first_name();
  void set_allocated_first_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_first_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_first_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_first_name();

  public:
  // string last_name = 4 [json_name = "lastName"];
  void clear_last_name() ;
  const ::std::string& last_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_last_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_last_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_last_name();
  void set_allocated_last_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_last_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_last_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_last_name();

  public:
  // string password = 5 [json_name = "password"];
  void clear_password() ;
  const ::std::string& password() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_password();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_password();
  void set_allocated_password(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_password() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_password(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_password();

  public:
  // string membership = 6 [json_name = "membership"];
  void clear_membership() ;
  const ::std::string& membership() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_membership(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_membership();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_membership();
  void set_allocated_membership(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_membership() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_membership(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_membership();

  public:
  // @@protoc_insertion_point(class_scope:user.v1.SupplierCreateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 88,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SupplierCreateRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr username_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr first_name_;
    ::google::protobuf::internal::ArenaStringPtr last_name_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::internal::ArenaStringPtr membership_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2fv1_2fsupplier_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SupplierCreateRequest_class_data_;
// -------------------------------------------------------------------

class SupplierCreateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:user.v1.SupplierCreateResponse) */ {
 public:
  inline SupplierCreateResponse() : SupplierCreateResponse(nullptr) {}
  ~SupplierCreateResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SupplierCreateResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SupplierCreateResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SupplierCreateResponse(::google::protobuf::internal::ConstantInitialized);

  inline SupplierCreateResponse(const SupplierCreateResponse& from) : SupplierCreateResponse(nullptr, from) {}
  inline SupplierCreateResponse(SupplierCreateResponse&& from) noexcept
      : SupplierCreateResponse(nullptr, ::std::move(from)) {}
  inline SupplierCreateResponse& operator=(const SupplierCreateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SupplierCreateResponse& operator=(SupplierCreateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SupplierCreateResponse& default_instance() {
    return *reinterpret_cast<const SupplierCreateResponse*>(
        &_SupplierCreateResponse_default_instance_);
  }
  enum ResponseCase {
    kData = 1,
    kError = 2,
    RESPONSE_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SupplierCreateResponse& a, SupplierCreateResponse& b) { a.Swap(&b); }
  inline void Swap(SupplierCreateResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SupplierCreateResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SupplierCreateResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SupplierCreateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SupplierCreateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SupplierCreateResponse& from) { SupplierCreateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SupplierCreateResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "user.v1.SupplierCreateResponse"; }

 protected:
  explicit SupplierCreateResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SupplierCreateResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SupplierCreateResponse& from);
  SupplierCreateResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SupplierCreateResponse&& from) noexcept
      : SupplierCreateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
    kErrorFieldNumber = 2,
  };
  // .google.protobuf.Empty data = 1 [json_name = "data"];
  bool has_data() const;
  private:
  bool _internal_has_data() const;

  public:
  void clear_data() ;
  const ::google::protobuf::Empty& data() const;
  [[nodiscard]] ::google::protobuf::Empty* PROTOBUF_NULLABLE release_data();
  ::google::protobuf::Empty* PROTOBUF_NONNULL mutable_data();
  void set_allocated_data(::google::protobuf::Empty* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_data(::google::protobuf::Empty* PROTOBUF_NULLABLE value);
  ::google::protobuf::Empty* PROTOBUF_NULLABLE unsafe_arena_release_data();

  private:
  const ::google::protobuf::Empty& _internal_data() const;
  ::google::protobuf::Empty* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // .shared.v1.AppError error = 2 [json_name = "error"];
  bool has_error() const;
  private:
  bool _internal_has_error() const;

  public:
  void clear_error() ;
  const ::shared::v1::AppError& error() const;
  [[nodiscard]] ::shared::v1::AppError* PROTOBUF_NULLABLE release_error();
  ::shared::v1::AppError* PROTOBUF_NONNULL mutable_error();
  void set_allocated_error(::shared::v1::AppError* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_error(::shared::v1::AppError* PROTOBUF_NULLABLE value);
  ::shared::v1::AppError* PROTOBUF_NULLABLE unsafe_arena_release_error();

  private:
  const ::shared::v1::AppError& _internal_error() const;
  ::shared::v1::AppError* PROTOBUF_NONNULL _internal_mutable_error();

  public:
  void clear_response();
  ResponseCase response_case() const;
  // @@protoc_insertion_point(class_scope:user.v1.SupplierCreateResponse)
 private:
  class _Internal;
  void set_has_data();
  void set_has_error();
  inline bool has_response() const;
  inline void clear_has_response();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SupplierCreateResponse& from_msg);
    union ResponseUnion {
      constexpr ResponseUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::Empty* PROTOBUF_NULLABLE data_;
      ::shared::v1::AppError* PROTOBUF_NULLABLE error_;
    } response_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2fv1_2fsupplier_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SupplierCreateResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SupplierCreateRequest

// string username = 1 [json_name = "username"];
inline void SupplierCreateRequest::clear_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SupplierCreateRequest::username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:user.v1.SupplierCreateRequest.username)
  return _internal_username();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SupplierCreateRequest::set_username(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:user.v1.SupplierCreateRequest.username)
}
inline ::std::string* PROTOBUF_NONNULL SupplierCreateRequest::mutable_username()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:user.v1.SupplierCreateRequest.username)
  return _s;
}
inline const ::std::string& SupplierCreateRequest::_internal_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.username_.Get();
}
inline void SupplierCreateRequest::_internal_set_username(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.username_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SupplierCreateRequest::_internal_mutable_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.username_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SupplierCreateRequest::release_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:user.v1.SupplierCreateRequest.username)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.username_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.username_.Set("", GetArena());
  }
  return released;
}
inline void SupplierCreateRequest::set_allocated_username(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.username_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.username_.IsDefault()) {
    _impl_.username_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:user.v1.SupplierCreateRequest.username)
}

// string email = 2 [json_name = "email"];
inline void SupplierCreateRequest::clear_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& SupplierCreateRequest::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:user.v1.SupplierCreateRequest.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SupplierCreateRequest::set_email(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:user.v1.SupplierCreateRequest.email)
}
inline ::std::string* PROTOBUF_NONNULL SupplierCreateRequest::mutable_email()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:user.v1.SupplierCreateRequest.email)
  return _s;
}
inline const ::std::string& SupplierCreateRequest::_internal_email() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.email_.Get();
}
inline void SupplierCreateRequest::_internal_set_email(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.email_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SupplierCreateRequest::_internal_mutable_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.email_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SupplierCreateRequest::release_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:user.v1.SupplierCreateRequest.email)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.email_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.email_.Set("", GetArena());
  }
  return released;
}
inline void SupplierCreateRequest::set_allocated_email(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.email_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.email_.IsDefault()) {
    _impl_.email_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:user.v1.SupplierCreateRequest.email)
}

// string first_name = 3 [json_name = "firstName"];
inline void SupplierCreateRequest::clear_first_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.first_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& SupplierCreateRequest::first_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:user.v1.SupplierCreateRequest.first_name)
  return _internal_first_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SupplierCreateRequest::set_first_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.first_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:user.v1.SupplierCreateRequest.first_name)
}
inline ::std::string* PROTOBUF_NONNULL SupplierCreateRequest::mutable_first_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_first_name();
  // @@protoc_insertion_point(field_mutable:user.v1.SupplierCreateRequest.first_name)
  return _s;
}
inline const ::std::string& SupplierCreateRequest::_internal_first_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.first_name_.Get();
}
inline void SupplierCreateRequest::_internal_set_first_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.first_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SupplierCreateRequest::_internal_mutable_first_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.first_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SupplierCreateRequest::release_first_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:user.v1.SupplierCreateRequest.first_name)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.first_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.first_name_.Set("", GetArena());
  }
  return released;
}
inline void SupplierCreateRequest::set_allocated_first_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.first_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.first_name_.IsDefault()) {
    _impl_.first_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:user.v1.SupplierCreateRequest.first_name)
}

// string last_name = 4 [json_name = "lastName"];
inline void SupplierCreateRequest::clear_last_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& SupplierCreateRequest::last_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:user.v1.SupplierCreateRequest.last_name)
  return _internal_last_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SupplierCreateRequest::set_last_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.last_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:user.v1.SupplierCreateRequest.last_name)
}
inline ::std::string* PROTOBUF_NONNULL SupplierCreateRequest::mutable_last_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_last_name();
  // @@protoc_insertion_point(field_mutable:user.v1.SupplierCreateRequest.last_name)
  return _s;
}
inline const ::std::string& SupplierCreateRequest::_internal_last_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_name_.Get();
}
inline void SupplierCreateRequest::_internal_set_last_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.last_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SupplierCreateRequest::_internal_mutable_last_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.last_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SupplierCreateRequest::release_last_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:user.v1.SupplierCreateRequest.last_name)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.last_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.last_name_.Set("", GetArena());
  }
  return released;
}
inline void SupplierCreateRequest::set_allocated_last_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.last_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_name_.IsDefault()) {
    _impl_.last_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:user.v1.SupplierCreateRequest.last_name)
}

// string password = 5 [json_name = "password"];
inline void SupplierCreateRequest::clear_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::std::string& SupplierCreateRequest::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:user.v1.SupplierCreateRequest.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SupplierCreateRequest::set_password(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:user.v1.SupplierCreateRequest.password)
}
inline ::std::string* PROTOBUF_NONNULL SupplierCreateRequest::mutable_password()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:user.v1.SupplierCreateRequest.password)
  return _s;
}
inline const ::std::string& SupplierCreateRequest::_internal_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.password_.Get();
}
inline void SupplierCreateRequest::_internal_set_password(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.password_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SupplierCreateRequest::_internal_mutable_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.password_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SupplierCreateRequest::release_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:user.v1.SupplierCreateRequest.password)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.password_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.password_.Set("", GetArena());
  }
  return released;
}
inline void SupplierCreateRequest::set_allocated_password(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.password_.IsDefault()) {
    _impl_.password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:user.v1.SupplierCreateRequest.password)
}

// string membership = 6 [json_name = "membership"];
inline void SupplierCreateRequest::clear_membership() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.membership_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::std::string& SupplierCreateRequest::membership() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:user.v1.SupplierCreateRequest.membership)
  return _internal_membership();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SupplierCreateRequest::set_membership(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.membership_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:user.v1.SupplierCreateRequest.membership)
}
inline ::std::string* PROTOBUF_NONNULL SupplierCreateRequest::mutable_membership()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_membership();
  // @@protoc_insertion_point(field_mutable:user.v1.SupplierCreateRequest.membership)
  return _s;
}
inline const ::std::string& SupplierCreateRequest::_internal_membership() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.membership_.Get();
}
inline void SupplierCreateRequest::_internal_set_membership(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.membership_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SupplierCreateRequest::_internal_mutable_membership() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.membership_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SupplierCreateRequest::release_membership() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:user.v1.SupplierCreateRequest.membership)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.membership_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.membership_.Set("", GetArena());
  }
  return released;
}
inline void SupplierCreateRequest::set_allocated_membership(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.membership_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.membership_.IsDefault()) {
    _impl_.membership_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:user.v1.SupplierCreateRequest.membership)
}

// -------------------------------------------------------------------

// SupplierCreateResponse

// .google.protobuf.Empty data = 1 [json_name = "data"];
inline bool SupplierCreateResponse::has_data() const {
  return response_case() == kData;
}
inline bool SupplierCreateResponse::_internal_has_data() const {
  return response_case() == kData;
}
inline void SupplierCreateResponse::set_has_data() {
  _impl_._oneof_case_[0] = kData;
}
inline ::google::protobuf::Empty* PROTOBUF_NULLABLE SupplierCreateResponse::release_data() {
  // @@protoc_insertion_point(field_release:user.v1.SupplierCreateResponse.data)
  if (response_case() == kData) {
    clear_has_response();
    auto* temp = _impl_.response_.data_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.response_.data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::protobuf::Empty& SupplierCreateResponse::_internal_data() const {
  return response_case() == kData ? *_impl_.response_.data_ : reinterpret_cast<::google::protobuf::Empty&>(::google::protobuf::_Empty_default_instance_);
}
inline const ::google::protobuf::Empty& SupplierCreateResponse::data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:user.v1.SupplierCreateResponse.data)
  return _internal_data();
}
inline ::google::protobuf::Empty* PROTOBUF_NULLABLE SupplierCreateResponse::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:user.v1.SupplierCreateResponse.data)
  if (response_case() == kData) {
    clear_has_response();
    auto* temp = _impl_.response_.data_;
    _impl_.response_.data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SupplierCreateResponse::unsafe_arena_set_allocated_data(
    ::google::protobuf::Empty* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_response();
  if (value) {
    set_has_data();
    _impl_.response_.data_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:user.v1.SupplierCreateResponse.data)
}
inline ::google::protobuf::Empty* PROTOBUF_NONNULL SupplierCreateResponse::_internal_mutable_data() {
  if (response_case() != kData) {
    clear_response();
    set_has_data();
    _impl_.response_.data_ = 
        ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Empty>(GetArena());
  }
  return _impl_.response_.data_;
}
inline ::google::protobuf::Empty* PROTOBUF_NONNULL SupplierCreateResponse::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Empty* _msg = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:user.v1.SupplierCreateResponse.data)
  return _msg;
}

// .shared.v1.AppError error = 2 [json_name = "error"];
inline bool SupplierCreateResponse::has_error() const {
  return response_case() == kError;
}
inline bool SupplierCreateResponse::_internal_has_error() const {
  return response_case() == kError;
}
inline void SupplierCreateResponse::set_has_error() {
  _impl_._oneof_case_[0] = kError;
}
inline ::shared::v1::AppError* PROTOBUF_NULLABLE SupplierCreateResponse::release_error() {
  // @@protoc_insertion_point(field_release:user.v1.SupplierCreateResponse.error)
  if (response_case() == kError) {
    clear_has_response();
    auto* temp = _impl_.response_.error_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.response_.error_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::shared::v1::AppError& SupplierCreateResponse::_internal_error() const {
  return response_case() == kError ? *_impl_.response_.error_ : reinterpret_cast<::shared::v1::AppError&>(::shared::v1::_AppError_default_instance_);
}
inline const ::shared::v1::AppError& SupplierCreateResponse::error() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:user.v1.SupplierCreateResponse.error)
  return _internal_error();
}
inline ::shared::v1::AppError* PROTOBUF_NULLABLE SupplierCreateResponse::unsafe_arena_release_error() {
  // @@protoc_insertion_point(field_unsafe_arena_release:user.v1.SupplierCreateResponse.error)
  if (response_case() == kError) {
    clear_has_response();
    auto* temp = _impl_.response_.error_;
    _impl_.response_.error_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SupplierCreateResponse::unsafe_arena_set_allocated_error(
    ::shared::v1::AppError* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_response();
  if (value) {
    set_has_error();
    _impl_.response_.error_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:user.v1.SupplierCreateResponse.error)
}
inline ::shared::v1::AppError* PROTOBUF_NONNULL SupplierCreateResponse::_internal_mutable_error() {
  if (response_case() != kError) {
    clear_response();
    set_has_error();
    _impl_.response_.error_ = 
        ::google::protobuf::Message::DefaultConstruct<::shared::v1::AppError>(GetArena());
  }
  return _impl_.response_.error_;
}
inline ::shared::v1::AppError* PROTOBUF_NONNULL SupplierCreateResponse::mutable_error()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::shared::v1::AppError* _msg = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:user.v1.SupplierCreateResponse.error)
  return _msg;
}

inline bool SupplierCreateResponse::has_response() const {
  return response_case() != RESPONSE_NOT_SET;
}
inline void SupplierCreateResponse::clear_has_response() {
  _impl_._oneof_case_[0] = RESPONSE_NOT_SET;
}
inline SupplierCreateResponse::ResponseCase SupplierCreateResponse::response_case() const {
  return SupplierCreateResponse::ResponseCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace user


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // user_2fv1_2fsupplier_2eproto_2epb_2eh
