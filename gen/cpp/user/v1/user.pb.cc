// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: user/v1/user.proto
// Protobuf C++ Version: 6.31.1

#include "user/v1/user.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace user {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR User_PropsEntry_DoNotUse::User_PropsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : User_PropsEntry_DoNotUse::MapEntry(User_PropsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : User_PropsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct User_PropsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR User_PropsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~User_PropsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    User_PropsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 User_PropsEntry_DoNotUseDefaultTypeInternal _User_PropsEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR User_NotifyPropsEntry_DoNotUse::User_NotifyPropsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : User_NotifyPropsEntry_DoNotUse::MapEntry(User_NotifyPropsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : User_NotifyPropsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct User_NotifyPropsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR User_NotifyPropsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~User_NotifyPropsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    User_NotifyPropsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 User_NotifyPropsEntry_DoNotUseDefaultTypeInternal _User_NotifyPropsEntry_DoNotUse_default_instance_;

inline constexpr User::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        roles_{},
        props_{},
        notify_props_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        first_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        email_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        membership_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        auth_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        auth_service_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        locale_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mfa_secret_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_email_verified_{false},
        mfa_active_{false},
        failed_attempts_{0},
        last_password_update_{::int64_t{0}},
        last_picture_update_{::int64_t{0}},
        last_activity_at_{::int64_t{0}},
        last_login_{::int64_t{0}},
        created_at_{::int64_t{0}},
        updated_at_{::int64_t{0}},
        deleted_at_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR User::User(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(User_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserDefaultTypeInternal() {}
  union {
    User _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserDefaultTypeInternal _User_default_instance_;
}  // namespace v1
}  // namespace user
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_user_2fv1_2fuser_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_user_2fv1_2fuser_2eproto = nullptr;
const ::uint32_t
    TableStruct_user_2fv1_2fuser_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::user::v1::User_PropsEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::user::v1::User_PropsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User_PropsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::user::v1::User_NotifyPropsEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::user::v1::User_NotifyPropsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User_NotifyPropsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_._has_bits_),
        28, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.first_name_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.last_name_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.email_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.user_type_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.membership_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.is_email_verified_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.password_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.auth_data_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.auth_service_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.roles_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.props_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.notify_props_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.last_password_update_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.last_picture_update_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.failed_attempts_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.locale_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.mfa_active_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.mfa_secret_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.last_activity_at_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.last_login_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.updated_at_),
        PROTOBUF_FIELD_OFFSET(::user::v1::User, _impl_.deleted_at_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        12,
        7,
        8,
        9,
        ~0u,
        ~0u,
        ~0u,
        15,
        16,
        14,
        10,
        13,
        11,
        17,
        18,
        19,
        20,
        21,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::user::v1::User_PropsEntry_DoNotUse)},
        {7, sizeof(::user::v1::User_NotifyPropsEntry_DoNotUse)},
        {14, sizeof(::user::v1::User)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::user::v1::_User_PropsEntry_DoNotUse_default_instance_._instance,
    &::user::v1::_User_NotifyPropsEntry_DoNotUse_default_instance_._instance,
    &::user::v1::_User_default_instance_._instance,
};
const char descriptor_table_protodef_user_2fv1_2fuser_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022user/v1/user.proto\022\007user.v1\032\026user/v1/s"
    "upplier.proto\"\232\013\n\004User\022\023\n\002id\030\001 \001(\tH\000R\002id"
    "\210\001\001\022\037\n\010username\030\002 \001(\tH\001R\010username\210\001\001\022\"\n\n"
    "first_name\030\003 \001(\tH\002R\tfirstName\210\001\001\022 \n\tlast"
    "_name\030\004 \001(\tH\003R\010lastName\210\001\001\022\031\n\005email\030\005 \001("
    "\tH\004R\005email\210\001\001\022 \n\tuser_type\030\006 \001(\tH\005R\010user"
    "Type\210\001\001\022#\n\nmembership\030\007 \001(\tH\006R\nmembershi"
    "p\210\001\001\022/\n\021is_email_verified\030\010 \001(\010H\007R\017isEma"
    "ilVerified\210\001\001\022\037\n\010password\030\t \001(\tH\010R\010passw"
    "ord\210\001\001\022 \n\tauth_data\030\n \001(\tH\tR\010authData\210\001\001"
    "\022&\n\014auth_service\030\013 \001(\tH\nR\013authService\210\001\001"
    "\022\024\n\005roles\030\014 \003(\tR\005roles\022.\n\005props\030\r \003(\0132\030."
    "user.v1.User.PropsEntryR\005props\022A\n\014notify"
    "_props\030\016 \003(\0132\036.user.v1.User.NotifyPropsE"
    "ntryR\013notifyProps\0225\n\024last_password_updat"
    "e\030\017 \001(\003H\013R\022lastPasswordUpdate\210\001\001\0223\n\023last"
    "_picture_update\030\020 \001(\003H\014R\021lastPictureUpda"
    "te\210\001\001\022,\n\017failed_attempts\030\021 \001(\005H\rR\016failed"
    "Attempts\210\001\001\022\033\n\006locale\030\022 \001(\tH\016R\006locale\210\001\001"
    "\022\"\n\nmfa_active\030\023 \001(\010H\017R\tmfaActive\210\001\001\022\"\n\n"
    "mfa_secret\030\024 \001(\tH\020R\tmfaSecret\210\001\001\022-\n\020last"
    "_activity_at\030\025 \001(\003H\021R\016lastActivityAt\210\001\001\022"
    "\"\n\nlast_login\030\026 \001(\003H\022R\tlastLogin\210\001\001\022\"\n\nc"
    "reated_at\030\027 \001(\003H\023R\tcreatedAt\210\001\001\022\"\n\nupdat"
    "ed_at\030\030 \001(\003H\024R\tupdatedAt\210\001\001\022\"\n\ndeleted_a"
    "t\030\031 \001(\003H\025R\tdeletedAt\210\001\001\0328\n\nPropsEntry\022\020\n"
    "\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028"
    "\001\032>\n\020NotifyPropsEntry\022\020\n\003key\030\001 \001(\tR\003key\022"
    "\024\n\005value\030\002 \001(\tR\005value:\0028\001B\005\n\003_idB\013\n\t_use"
    "rnameB\r\n\013_first_nameB\014\n\n_last_nameB\010\n\006_e"
    "mailB\014\n\n_user_typeB\r\n\013_membershipB\024\n\022_is"
    "_email_verifiedB\013\n\t_passwordB\014\n\n_auth_da"
    "taB\017\n\r_auth_serviceB\027\n\025_last_password_up"
    "dateB\026\n\024_last_picture_updateB\022\n\020_failed_"
    "attemptsB\t\n\007_localeB\r\n\013_mfa_activeB\r\n\013_m"
    "fa_secretB\023\n\021_last_activity_atB\r\n\013_last_"
    "loginB\r\n\013_created_atB\r\n\013_updated_atB\r\n\013_"
    "deleted_at2`\n\013UserService\022Q\n\016CreateSuppl"
    "ier\022\036.user.v1.SupplierCreateRequest\032\037.us"
    "er.v1.SupplierCreateResponseBk\n\030org.mega"
    "commerce.user.v1B\tUserProtoZAgithub.com/"
    "ahmad-khatib0-org/megacommerce-proto/gen"
    "/go/user/v1;v1\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_user_2fv1_2fuser_2eproto_deps[1] = {
        &::descriptor_table_user_2fv1_2fsupplier_2eproto,
};
static ::absl::once_flag descriptor_table_user_2fv1_2fuser_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_user_2fv1_2fuser_2eproto = {
    false,
    false,
    1705,
    descriptor_table_protodef_user_2fv1_2fuser_2eproto,
    "user/v1/user.proto",
    &descriptor_table_user_2fv1_2fuser_2eproto_once,
    descriptor_table_user_2fv1_2fuser_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_user_2fv1_2fuser_2eproto::offsets,
    file_level_enum_descriptors_user_2fv1_2fuser_2eproto,
    file_level_service_descriptors_user_2fv1_2fuser_2eproto,
};
namespace user {
namespace v1 {
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
User_PropsEntry_DoNotUse::User_PropsEntry_DoNotUse()
    : SuperType(User_PropsEntry_DoNotUse_class_data_.base()) {}
User_PropsEntry_DoNotUse::User_PropsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, User_PropsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
User_PropsEntry_DoNotUse::User_PropsEntry_DoNotUse() : SuperType() {}
User_PropsEntry_DoNotUse::User_PropsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL User_PropsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) User_PropsEntry_DoNotUse(arena);
}
constexpr auto User_PropsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(User_PropsEntry_DoNotUse),
                                            alignof(User_PropsEntry_DoNotUse));
}
constexpr auto User_PropsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_User_PropsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &User_PropsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<User_PropsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &User_PropsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&User_PropsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(User_PropsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &User_PropsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_user_2fv1_2fuser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull User_PropsEntry_DoNotUse_class_data_ =
        User_PropsEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
User_PropsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&User_PropsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(User_PropsEntry_DoNotUse_class_data_.tc_table);
  return User_PropsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 40, 2>
User_PropsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(User_PropsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    User_PropsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::user::v1::User_PropsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(User_PropsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(User_PropsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(User_PropsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(User_PropsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\3\5\0\0\0\0\0"
    "user.v1.User.PropsEntry"
    "key"
    "value"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
User_NotifyPropsEntry_DoNotUse::User_NotifyPropsEntry_DoNotUse()
    : SuperType(User_NotifyPropsEntry_DoNotUse_class_data_.base()) {}
User_NotifyPropsEntry_DoNotUse::User_NotifyPropsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, User_NotifyPropsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
User_NotifyPropsEntry_DoNotUse::User_NotifyPropsEntry_DoNotUse() : SuperType() {}
User_NotifyPropsEntry_DoNotUse::User_NotifyPropsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL User_NotifyPropsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) User_NotifyPropsEntry_DoNotUse(arena);
}
constexpr auto User_NotifyPropsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(User_NotifyPropsEntry_DoNotUse),
                                            alignof(User_NotifyPropsEntry_DoNotUse));
}
constexpr auto User_NotifyPropsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_User_NotifyPropsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &User_NotifyPropsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<User_NotifyPropsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &User_NotifyPropsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&User_NotifyPropsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(User_NotifyPropsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &User_NotifyPropsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_user_2fv1_2fuser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull User_NotifyPropsEntry_DoNotUse_class_data_ =
        User_NotifyPropsEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
User_NotifyPropsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&User_NotifyPropsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(User_NotifyPropsEntry_DoNotUse_class_data_.tc_table);
  return User_NotifyPropsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 46, 2>
User_NotifyPropsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(User_NotifyPropsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    User_NotifyPropsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::user::v1::User_NotifyPropsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(User_NotifyPropsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(User_NotifyPropsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(User_NotifyPropsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(User_NotifyPropsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\3\5\0\0\0\0\0"
    "user.v1.User.NotifyPropsEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class User::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<User>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(User, _impl_._has_bits_);
};

User::User(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, User_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:user.v1.User)
}
PROTOBUF_NDEBUG_INLINE User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::user::v1::User& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        roles_{visibility, arena, from.roles_},
        props_{visibility, arena, from.props_},
        notify_props_{visibility, arena, from.notify_props_},
        id_(arena, from.id_),
        username_(arena, from.username_),
        first_name_(arena, from.first_name_),
        last_name_(arena, from.last_name_),
        email_(arena, from.email_),
        user_type_(arena, from.user_type_),
        membership_(arena, from.membership_),
        password_(arena, from.password_),
        auth_data_(arena, from.auth_data_),
        auth_service_(arena, from.auth_service_),
        locale_(arena, from.locale_),
        mfa_secret_(arena, from.mfa_secret_) {}

User::User(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const User& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, User_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  User* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_email_verified_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_email_verified_),
           offsetof(Impl_, deleted_at_) -
               offsetof(Impl_, is_email_verified_) +
               sizeof(Impl_::deleted_at_));

  // @@protoc_insertion_point(copy_constructor:user.v1.User)
}
PROTOBUF_NDEBUG_INLINE User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        roles_{visibility, arena},
        props_{visibility, arena},
        notify_props_{visibility, arena},
        id_(arena),
        username_(arena),
        first_name_(arena),
        last_name_(arena),
        email_(arena),
        user_type_(arena),
        membership_(arena),
        password_(arena),
        auth_data_(arena),
        auth_service_(arena),
        locale_(arena),
        mfa_secret_(arena) {}

inline void User::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_email_verified_),
           0,
           offsetof(Impl_, deleted_at_) -
               offsetof(Impl_, is_email_verified_) +
               sizeof(Impl_::deleted_at_));
}
User::~User() {
  // @@protoc_insertion_point(destructor:user.v1.User)
  SharedDtor(*this);
}
inline void User::SharedDtor(MessageLite& self) {
  User& this_ = static_cast<User&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.username_.Destroy();
  this_._impl_.first_name_.Destroy();
  this_._impl_.last_name_.Destroy();
  this_._impl_.email_.Destroy();
  this_._impl_.user_type_.Destroy();
  this_._impl_.membership_.Destroy();
  this_._impl_.password_.Destroy();
  this_._impl_.auth_data_.Destroy();
  this_._impl_.auth_service_.Destroy();
  this_._impl_.locale_.Destroy();
  this_._impl_.mfa_secret_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL User::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) User(arena);
}
constexpr auto User::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(User, _impl_.roles_) +
          decltype(User::_impl_.roles_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(User, _impl_.props_) +
          decltype(User::_impl_.props_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(User, _impl_.props_) +
          decltype(User::_impl_.props_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(User, _impl_.notify_props_) +
          decltype(User::_impl_.notify_props_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(User, _impl_.notify_props_) +
          decltype(User::_impl_.notify_props_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(User), alignof(User), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&User::PlacementNew_,
                                 sizeof(User),
                                 alignof(User));
  }
}
constexpr auto User::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_User_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &User::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<User>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &User::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<User>(), &User::ByteSizeLong,
              &User::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(User, _impl_._cached_size_),
          false,
      },
      &User::kDescriptorMethods,
      &descriptor_table_user_2fv1_2fuser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull User_class_data_ =
        User::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
User::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&User_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(User_class_data_.tc_table);
  return User_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 25, 2, 165, 2>
User::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(User, _impl_._has_bits_),
    0, // no _extensions_
    25, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4261412864,  // skipmap
    offsetof(decltype(_table_), field_entries),
    25,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    User_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::user::v1::User>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.id_)}},
    // optional string username = 2 [json_name = "username"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.username_)}},
    // optional string first_name = 3 [json_name = "firstName"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.first_name_)}},
    // optional string last_name = 4 [json_name = "lastName"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.last_name_)}},
    // optional string email = 5 [json_name = "email"];
    {::_pbi::TcParser::FastUS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.email_)}},
    // optional string user_type = 6 [json_name = "userType"];
    {::_pbi::TcParser::FastUS1,
     {50, 5, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.user_type_)}},
    // optional string membership = 7 [json_name = "membership"];
    {::_pbi::TcParser::FastUS1,
     {58, 6, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.membership_)}},
    // optional bool is_email_verified = 8 [json_name = "isEmailVerified"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(User, _impl_.is_email_verified_), 12>(),
     {64, 12, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.is_email_verified_)}},
    // optional string password = 9 [json_name = "password"];
    {::_pbi::TcParser::FastUS1,
     {74, 7, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.password_)}},
    // optional string auth_data = 10 [json_name = "authData"];
    {::_pbi::TcParser::FastUS1,
     {82, 8, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.auth_data_)}},
    // optional string auth_service = 11 [json_name = "authService"];
    {::_pbi::TcParser::FastUS1,
     {90, 9, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.auth_service_)}},
    // repeated string roles = 12 [json_name = "roles"];
    {::_pbi::TcParser::FastUR1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.roles_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 last_password_update = 15 [json_name = "lastPasswordUpdate"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(User, _impl_.last_password_update_), 15>(),
     {120, 15, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.last_password_update_)}},
    // optional int64 last_picture_update = 16 [json_name = "lastPictureUpdate"];
    {::_pbi::TcParser::FastV64S2,
     {384, 16, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.last_picture_update_)}},
    // optional int32 failed_attempts = 17 [json_name = "failedAttempts"];
    {::_pbi::TcParser::FastV32S2,
     {392, 14, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.failed_attempts_)}},
    // optional string locale = 18 [json_name = "locale"];
    {::_pbi::TcParser::FastUS2,
     {402, 10, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.locale_)}},
    // optional bool mfa_active = 19 [json_name = "mfaActive"];
    {::_pbi::TcParser::FastV8S2,
     {408, 13, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.mfa_active_)}},
    // optional string mfa_secret = 20 [json_name = "mfaSecret"];
    {::_pbi::TcParser::FastUS2,
     {418, 11, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.mfa_secret_)}},
    // optional int64 last_activity_at = 21 [json_name = "lastActivityAt"];
    {::_pbi::TcParser::FastV64S2,
     {424, 17, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.last_activity_at_)}},
    // optional int64 last_login = 22 [json_name = "lastLogin"];
    {::_pbi::TcParser::FastV64S2,
     {432, 18, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.last_login_)}},
    // optional int64 created_at = 23 [json_name = "createdAt"];
    {::_pbi::TcParser::FastV64S2,
     {440, 19, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.created_at_)}},
    // optional int64 updated_at = 24 [json_name = "updatedAt"];
    {::_pbi::TcParser::FastV64S2,
     {448, 20, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.updated_at_)}},
    // optional int64 deleted_at = 25 [json_name = "deletedAt"];
    {::_pbi::TcParser::FastV64S2,
     {456, 21, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.deleted_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string username = 2 [json_name = "username"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.username_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string first_name = 3 [json_name = "firstName"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.first_name_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string last_name = 4 [json_name = "lastName"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.last_name_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string email = 5 [json_name = "email"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.email_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string user_type = 6 [json_name = "userType"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.user_type_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string membership = 7 [json_name = "membership"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.membership_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional bool is_email_verified = 8 [json_name = "isEmailVerified"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.is_email_verified_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string password = 9 [json_name = "password"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.password_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string auth_data = 10 [json_name = "authData"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.auth_data_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string auth_service = 11 [json_name = "authService"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.auth_service_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string roles = 12 [json_name = "roles"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.roles_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // map<string, string> props = 13 [json_name = "props"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.props_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> notify_props = 14 [json_name = "notifyProps"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.notify_props_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // optional int64 last_password_update = 15 [json_name = "lastPasswordUpdate"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.last_password_update_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 last_picture_update = 16 [json_name = "lastPictureUpdate"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.last_picture_update_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 failed_attempts = 17 [json_name = "failedAttempts"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.failed_attempts_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string locale = 18 [json_name = "locale"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.locale_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional bool mfa_active = 19 [json_name = "mfaActive"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.mfa_active_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string mfa_secret = 20 [json_name = "mfaSecret"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.mfa_secret_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int64 last_activity_at = 21 [json_name = "lastActivityAt"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.last_activity_at_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 last_login = 22 [json_name = "lastLogin"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.last_login_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 created_at = 23 [json_name = "createdAt"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.created_at_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 updated_at = 24 [json_name = "updatedAt"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.updated_at_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 deleted_at = 25 [json_name = "deletedAt"];
    {PROTOBUF_FIELD_OFFSET(User, _impl_.deleted_at_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\14\2\10\12\11\5\11\12\0\10\11\14\5\5\14\0\0\0\6\0\12\0\0\0\0\0\0\0\0\0\0\0"
    "user.v1.User"
    "id"
    "username"
    "first_name"
    "last_name"
    "email"
    "user_type"
    "membership"
    "password"
    "auth_data"
    "auth_service"
    "roles"
    "props"
    "notify_props"
    "locale"
    "mfa_secret"
  }},
};
PROTOBUF_NOINLINE void User::Clear() {
// @@protoc_insertion_point(message_clear_start:user.v1.User)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.roles_.Clear();
  _impl_.props_.Clear();
  _impl_.notify_props_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.first_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.last_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.email_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _impl_.user_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _impl_.membership_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _impl_.password_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _impl_.auth_data_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _impl_.auth_service_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _impl_.locale_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _impl_.mfa_secret_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000f000u) != 0) {
    ::memset(&_impl_.is_email_verified_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.last_password_update_) -
        reinterpret_cast<char*>(&_impl_.is_email_verified_)) + sizeof(_impl_.last_password_update_));
  }
  if ((cached_has_bits & 0x003f0000u) != 0) {
    ::memset(&_impl_.last_picture_update_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.deleted_at_) -
        reinterpret_cast<char*>(&_impl_.last_picture_update_)) + sizeof(_impl_.deleted_at_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL User::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const User& this_ = static_cast<const User&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL User::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const User& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:user.v1.User)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string id = 1 [json_name = "id"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string username = 2 [json_name = "username"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.username");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string first_name = 3 [json_name = "firstName"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    const ::std::string& _s = this_._internal_first_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.first_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string last_name = 4 [json_name = "lastName"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    const ::std::string& _s = this_._internal_last_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.last_name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string email = 5 [json_name = "email"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    const ::std::string& _s = this_._internal_email();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.email");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string user_type = 6 [json_name = "userType"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    const ::std::string& _s = this_._internal_user_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.user_type");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string membership = 7 [json_name = "membership"];
  if ((cached_has_bits & 0x00000040u) != 0) {
    const ::std::string& _s = this_._internal_membership();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.membership");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional bool is_email_verified = 8 [json_name = "isEmailVerified"];
  if ((cached_has_bits & 0x00001000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this_._internal_is_email_verified(), target);
  }

  // optional string password = 9 [json_name = "password"];
  if ((cached_has_bits & 0x00000080u) != 0) {
    const ::std::string& _s = this_._internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.password");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional string auth_data = 10 [json_name = "authData"];
  if ((cached_has_bits & 0x00000100u) != 0) {
    const ::std::string& _s = this_._internal_auth_data();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.auth_data");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional string auth_service = 11 [json_name = "authService"];
  if ((cached_has_bits & 0x00000200u) != 0) {
    const ::std::string& _s = this_._internal_auth_service();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.auth_service");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // repeated string roles = 12 [json_name = "roles"];
  for (int i = 0, n = this_._internal_roles_size(); i < n; ++i) {
    const auto& s = this_._internal_roles().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.roles");
    target = stream->WriteString(12, s, target);
  }

  // map<string, string> props = 13 [json_name = "props"];
  if (!this_._internal_props().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_props();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            13, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.props");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.props");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            13, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.props");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.props");
      }
    }
  }

  // map<string, string> notify_props = 14 [json_name = "notifyProps"];
  if (!this_._internal_notify_props().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_notify_props();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            14, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.notify_props");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.notify_props");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            14, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.notify_props");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.notify_props");
      }
    }
  }

  // optional int64 last_password_update = 15 [json_name = "lastPasswordUpdate"];
  if ((cached_has_bits & 0x00008000u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<15>(
            stream, this_._internal_last_password_update(), target);
  }

  // optional int64 last_picture_update = 16 [json_name = "lastPictureUpdate"];
  if ((cached_has_bits & 0x00010000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        16, this_._internal_last_picture_update(), target);
  }

  // optional int32 failed_attempts = 17 [json_name = "failedAttempts"];
  if ((cached_has_bits & 0x00004000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        17, this_._internal_failed_attempts(), target);
  }

  // optional string locale = 18 [json_name = "locale"];
  if ((cached_has_bits & 0x00000400u) != 0) {
    const ::std::string& _s = this_._internal_locale();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.locale");
    target = stream->WriteStringMaybeAliased(18, _s, target);
  }

  // optional bool mfa_active = 19 [json_name = "mfaActive"];
  if ((cached_has_bits & 0x00002000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        19, this_._internal_mfa_active(), target);
  }

  // optional string mfa_secret = 20 [json_name = "mfaSecret"];
  if ((cached_has_bits & 0x00000800u) != 0) {
    const ::std::string& _s = this_._internal_mfa_secret();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user.v1.User.mfa_secret");
    target = stream->WriteStringMaybeAliased(20, _s, target);
  }

  // optional int64 last_activity_at = 21 [json_name = "lastActivityAt"];
  if ((cached_has_bits & 0x00020000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        21, this_._internal_last_activity_at(), target);
  }

  // optional int64 last_login = 22 [json_name = "lastLogin"];
  if ((cached_has_bits & 0x00040000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        22, this_._internal_last_login(), target);
  }

  // optional int64 created_at = 23 [json_name = "createdAt"];
  if ((cached_has_bits & 0x00080000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        23, this_._internal_created_at(), target);
  }

  // optional int64 updated_at = 24 [json_name = "updatedAt"];
  if ((cached_has_bits & 0x00100000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        24, this_._internal_updated_at(), target);
  }

  // optional int64 deleted_at = 25 [json_name = "deletedAt"];
  if ((cached_has_bits & 0x00200000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        25, this_._internal_deleted_at(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:user.v1.User)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t User::ByteSizeLong(const MessageLite& base) {
  const User& this_ = static_cast<const User&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t User::ByteSizeLong() const {
  const User& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:user.v1.User)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string roles = 12 [json_name = "roles"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_roles().size());
      for (int i = 0, n = this_._internal_roles().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_roles().Get(i));
      }
    }
    // map<string, string> props = 13 [json_name = "props"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_props_size());
      for (const auto& entry : this_._internal_props()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<string, string> notify_props = 14 [json_name = "notifyProps"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_notify_props_size());
      for (const auto& entry : this_._internal_notify_props()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00002000u & cached_has_bits) * 3;
  total_size += static_cast<bool>(0x00001000u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_id());
    }
    // optional string username = 2 [json_name = "username"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_username());
    }
    // optional string first_name = 3 [json_name = "firstName"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_first_name());
    }
    // optional string last_name = 4 [json_name = "lastName"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_last_name());
    }
    // optional string email = 5 [json_name = "email"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_email());
    }
    // optional string user_type = 6 [json_name = "userType"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_user_type());
    }
    // optional string membership = 7 [json_name = "membership"];
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_membership());
    }
    // optional string password = 9 [json_name = "password"];
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_password());
    }
  }
  if ((cached_has_bits & 0x0000cf00u) != 0) {
    // optional string auth_data = 10 [json_name = "authData"];
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_auth_data());
    }
    // optional string auth_service = 11 [json_name = "authService"];
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_auth_service());
    }
    // optional string locale = 18 [json_name = "locale"];
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_locale());
    }
    // optional string mfa_secret = 20 [json_name = "mfaSecret"];
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_mfa_secret());
    }
    // optional int32 failed_attempts = 17 [json_name = "failedAttempts"];
    if ((cached_has_bits & 0x00004000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this_._internal_failed_attempts());
    }
    // optional int64 last_password_update = 15 [json_name = "lastPasswordUpdate"];
    if ((cached_has_bits & 0x00008000u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_last_password_update());
    }
  }
  if ((cached_has_bits & 0x003f0000u) != 0) {
    // optional int64 last_picture_update = 16 [json_name = "lastPictureUpdate"];
    if ((cached_has_bits & 0x00010000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this_._internal_last_picture_update());
    }
    // optional int64 last_activity_at = 21 [json_name = "lastActivityAt"];
    if ((cached_has_bits & 0x00020000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this_._internal_last_activity_at());
    }
    // optional int64 last_login = 22 [json_name = "lastLogin"];
    if ((cached_has_bits & 0x00040000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this_._internal_last_login());
    }
    // optional int64 created_at = 23 [json_name = "createdAt"];
    if ((cached_has_bits & 0x00080000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this_._internal_created_at());
    }
    // optional int64 updated_at = 24 [json_name = "updatedAt"];
    if ((cached_has_bits & 0x00100000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this_._internal_updated_at());
    }
    // optional int64 deleted_at = 25 [json_name = "deletedAt"];
    if ((cached_has_bits & 0x00200000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this_._internal_deleted_at());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void User::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<User*>(&to_msg);
  auto& from = static_cast<const User&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:user.v1.User)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_roles()->MergeFrom(from._internal_roles());
  _this->_impl_.props_.MergeFrom(from._impl_.props_);
  _this->_impl_.notify_props_.MergeFrom(from._impl_.notify_props_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_id(from._internal_id());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_username(from._internal_username());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_first_name(from._internal_first_name());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_internal_set_last_name(from._internal_last_name());
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_internal_set_email(from._internal_email());
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_internal_set_user_type(from._internal_user_type());
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_internal_set_membership(from._internal_membership());
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_internal_set_password(from._internal_password());
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_internal_set_auth_data(from._internal_auth_data());
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_internal_set_auth_service(from._internal_auth_service());
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_internal_set_locale(from._internal_locale());
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_internal_set_mfa_secret(from._internal_mfa_secret());
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _this->_impl_.is_email_verified_ = from._impl_.is_email_verified_;
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      _this->_impl_.mfa_active_ = from._impl_.mfa_active_;
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      _this->_impl_.failed_attempts_ = from._impl_.failed_attempts_;
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      _this->_impl_.last_password_update_ = from._impl_.last_password_update_;
    }
  }
  if ((cached_has_bits & 0x003f0000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      _this->_impl_.last_picture_update_ = from._impl_.last_picture_update_;
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      _this->_impl_.last_activity_at_ = from._impl_.last_activity_at_;
    }
    if ((cached_has_bits & 0x00040000u) != 0) {
      _this->_impl_.last_login_ = from._impl_.last_login_;
    }
    if ((cached_has_bits & 0x00080000u) != 0) {
      _this->_impl_.created_at_ = from._impl_.created_at_;
    }
    if ((cached_has_bits & 0x00100000u) != 0) {
      _this->_impl_.updated_at_ = from._impl_.updated_at_;
    }
    if ((cached_has_bits & 0x00200000u) != 0) {
      _this->_impl_.deleted_at_ = from._impl_.deleted_at_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:user.v1.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void User::InternalSwap(User* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.roles_.InternalSwap(&other->_impl_.roles_);
  _impl_.props_.InternalSwap(&other->_impl_.props_);
  _impl_.notify_props_.InternalSwap(&other->_impl_.notify_props_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.first_name_, &other->_impl_.first_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_name_, &other->_impl_.last_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, &other->_impl_.email_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_type_, &other->_impl_.user_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.membership_, &other->_impl_.membership_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.auth_data_, &other->_impl_.auth_data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.auth_service_, &other->_impl_.auth_service_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.locale_, &other->_impl_.locale_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mfa_secret_, &other->_impl_.mfa_secret_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(User, _impl_.deleted_at_)
      + sizeof(User::_impl_.deleted_at_)
      - PROTOBUF_FIELD_OFFSET(User, _impl_.is_email_verified_)>(
          reinterpret_cast<char*>(&_impl_.is_email_verified_),
          reinterpret_cast<char*>(&other->_impl_.is_email_verified_));
}

::google::protobuf::Metadata User::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace user
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_user_2fv1_2fuser_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
