// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: products/v1/product.proto
// Protobuf C++ Version: 6.31.1

#ifndef products_2fv1_2fproduct_2eproto_2epb_2eh
#define products_2fv1_2fproduct_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_products_2fv1_2fproduct_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_products_2fv1_2fproduct_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_products_2fv1_2fproduct_2eproto;
}  // extern "C"
namespace products {
namespace v1 {
class Product;
struct ProductDefaultTypeInternal;
extern ProductDefaultTypeInternal _Product_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Product_class_data_;
class ProductMetadata;
struct ProductMetadataDefaultTypeInternal;
extern ProductMetadataDefaultTypeInternal _ProductMetadata_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProductMetadata_class_data_;
class ProductTag;
struct ProductTagDefaultTypeInternal;
extern ProductTagDefaultTypeInternal _ProductTag_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProductTag_class_data_;
}  // namespace v1
}  // namespace products
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace products {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class ProductTag final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:products.v1.ProductTag) */ {
 public:
  inline ProductTag() : ProductTag(nullptr) {}
  ~ProductTag() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProductTag* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProductTag));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProductTag(::google::protobuf::internal::ConstantInitialized);

  inline ProductTag(const ProductTag& from) : ProductTag(nullptr, from) {}
  inline ProductTag(ProductTag&& from) noexcept
      : ProductTag(nullptr, ::std::move(from)) {}
  inline ProductTag& operator=(const ProductTag& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductTag& operator=(ProductTag&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProductTag& default_instance() {
    return *reinterpret_cast<const ProductTag*>(
        &_ProductTag_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ProductTag& a, ProductTag& b) { a.Swap(&b); }
  inline void Swap(ProductTag* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductTag* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProductTag* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProductTag>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProductTag& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProductTag& from) { ProductTag::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProductTag* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "products.v1.ProductTag"; }

 protected:
  explicit ProductTag(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProductTag(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProductTag& from);
  ProductTag(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProductTag&& from) noexcept
      : ProductTag(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // optional string name = 2 [json_name = "name"];
  bool has_name() const;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // optional uint32 id = 1 [json_name = "id"];
  bool has_id() const;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:products.v1.ProductTag)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 35,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProductTag& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::uint32_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_products_2fv1_2fproduct_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProductTag_class_data_;
// -------------------------------------------------------------------

class ProductMetadata final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:products.v1.ProductMetadata) */ {
 public:
  inline ProductMetadata() : ProductMetadata(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProductMetadata* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProductMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProductMetadata(::google::protobuf::internal::ConstantInitialized);

  inline ProductMetadata(const ProductMetadata& from) : ProductMetadata(nullptr, from) {}
  inline ProductMetadata(ProductMetadata&& from) noexcept
      : ProductMetadata(nullptr, ::std::move(from)) {}
  inline ProductMetadata& operator=(const ProductMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductMetadata& operator=(ProductMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProductMetadata& default_instance() {
    return *reinterpret_cast<const ProductMetadata*>(
        &_ProductMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ProductMetadata& a, ProductMetadata& b) { a.Swap(&b); }
  inline void Swap(ProductMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProductMetadata* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ProductMetadata>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ProductMetadata& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ProductMetadata& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "products.v1.ProductMetadata"; }

 protected:
  explicit ProductMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProductMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProductMetadata& from);
  ProductMetadata(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProductMetadata&& from) noexcept
      : ProductMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:products.v1.ProductMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProductMetadata& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_products_2fv1_2fproduct_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProductMetadata_class_data_;
// -------------------------------------------------------------------

class Product final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:products.v1.Product) */ {
 public:
  inline Product() : Product(nullptr) {}
  ~Product() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Product* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Product));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Product(::google::protobuf::internal::ConstantInitialized);

  inline Product(const Product& from) : Product(nullptr, from) {}
  inline Product(Product&& from) noexcept
      : Product(nullptr, ::std::move(from)) {}
  inline Product& operator=(const Product& from) {
    CopyFrom(from);
    return *this;
  }
  inline Product& operator=(Product&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Product& default_instance() {
    return *reinterpret_cast<const Product*>(
        &_Product_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Product& a, Product& b) { a.Swap(&b); }
  inline void Swap(Product* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Product* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Product* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Product>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Product& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Product& from) { Product::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Product* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "products.v1.Product"; }

 protected:
  explicit Product(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Product(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Product& from);
  Product(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Product&& from) noexcept
      : Product(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTagsFieldNumber = 11,
    kIdFieldNumber = 1,
    kUserIdFieldNumber = 2,
    kSkuFieldNumber = 3,
    kStatusFieldNumber = 5,
    kTitleFieldNumber = 6,
    kDescriptionFieldNumber = 7,
    kSlugFieldNumber = 8,
    kPriceFieldNumber = 9,
    kCurrencyCodeFieldNumber = 10,
    kMetadataFieldNumber = 12,
    kVersionFieldNumber = 4,
    kArEnabledFieldNumber = 13,
    kCreatedAtFieldNumber = 14,
    kPublishedAtFieldNumber = 15,
    kUpdatedAtFieldNumber = 16,
  };
  // repeated .products.v1.ProductTag tags = 11 [json_name = "tags"];
  int tags_size() const;
  private:
  int _internal_tags_size() const;

  public:
  void clear_tags() ;
  ::products::v1::ProductTag* PROTOBUF_NONNULL mutable_tags(int index);
  ::google::protobuf::RepeatedPtrField<::products::v1::ProductTag>* PROTOBUF_NONNULL mutable_tags();

  private:
  const ::google::protobuf::RepeatedPtrField<::products::v1::ProductTag>& _internal_tags() const;
  ::google::protobuf::RepeatedPtrField<::products::v1::ProductTag>* PROTOBUF_NONNULL _internal_mutable_tags();
  public:
  const ::products::v1::ProductTag& tags(int index) const;
  ::products::v1::ProductTag* PROTOBUF_NONNULL add_tags();
  const ::google::protobuf::RepeatedPtrField<::products::v1::ProductTag>& tags() const;
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // string user_id = 2 [json_name = "userId"];
  void clear_user_id() ;
  const ::std::string& user_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_user_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_user_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_user_id();
  void set_allocated_user_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_user_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_user_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_user_id();

  public:
  // string sku = 3 [json_name = "sku"];
  void clear_sku() ;
  const ::std::string& sku() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_sku(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_sku();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_sku();
  void set_allocated_sku(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_sku() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_sku(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_sku();

  public:
  // string status = 5 [json_name = "status"];
  void clear_status() ;
  const ::std::string& status() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_status();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_status();
  void set_allocated_status(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_status() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_status(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // string title = 6 [json_name = "title"];
  void clear_title() ;
  const ::std::string& title() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_title();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_title();
  void set_allocated_title(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_title() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_title(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_title();

  public:
  // string description = 7 [json_name = "description"];
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // string slug = 8 [json_name = "slug"];
  void clear_slug() ;
  const ::std::string& slug() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_slug(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_slug();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_slug();
  void set_allocated_slug(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_slug() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_slug(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_slug();

  public:
  // string price = 9 [json_name = "price"];
  void clear_price() ;
  const ::std::string& price() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_price(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_price();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_price();
  void set_allocated_price(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_price() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_price(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_price();

  public:
  // string currency_code = 10 [json_name = "currencyCode"];
  void clear_currency_code() ;
  const ::std::string& currency_code() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_currency_code(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_currency_code();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_currency_code();
  void set_allocated_currency_code(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_currency_code() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_currency_code(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_currency_code();

  public:
  // optional .products.v1.ProductMetadata metadata = 12 [json_name = "metadata"];
  bool has_metadata() const;
  void clear_metadata() ;
  const ::products::v1::ProductMetadata& metadata() const;
  [[nodiscard]] ::products::v1::ProductMetadata* PROTOBUF_NULLABLE release_metadata();
  ::products::v1::ProductMetadata* PROTOBUF_NONNULL mutable_metadata();
  void set_allocated_metadata(::products::v1::ProductMetadata* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_metadata(::products::v1::ProductMetadata* PROTOBUF_NULLABLE value);
  ::products::v1::ProductMetadata* PROTOBUF_NULLABLE unsafe_arena_release_metadata();

  private:
  const ::products::v1::ProductMetadata& _internal_metadata() const;
  ::products::v1::ProductMetadata* PROTOBUF_NONNULL _internal_mutable_metadata();

  public:
  // uint32 version = 4 [json_name = "version"];
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // bool ar_enabled = 13 [json_name = "arEnabled"];
  void clear_ar_enabled() ;
  bool ar_enabled() const;
  void set_ar_enabled(bool value);

  private:
  bool _internal_ar_enabled() const;
  void _internal_set_ar_enabled(bool value);

  public:
  // uint64 created_at = 14 [json_name = "createdAt"];
  void clear_created_at() ;
  ::uint64_t created_at() const;
  void set_created_at(::uint64_t value);

  private:
  ::uint64_t _internal_created_at() const;
  void _internal_set_created_at(::uint64_t value);

  public:
  // optional uint64 published_at = 15 [json_name = "publishedAt"];
  bool has_published_at() const;
  void clear_published_at() ;
  ::uint64_t published_at() const;
  void set_published_at(::uint64_t value);

  private:
  ::uint64_t _internal_published_at() const;
  void _internal_set_published_at(::uint64_t value);

  public:
  // optional uint64 updated_at = 16 [json_name = "updatedAt"];
  bool has_updated_at() const;
  void clear_updated_at() ;
  ::uint64_t updated_at() const;
  void set_updated_at(::uint64_t value);

  private:
  ::uint64_t _internal_updated_at() const;
  void _internal_set_updated_at(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:products.v1.Product)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 16,
                                   2, 100,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Product& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::products::v1::ProductTag > tags_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr user_id_;
    ::google::protobuf::internal::ArenaStringPtr sku_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr slug_;
    ::google::protobuf::internal::ArenaStringPtr price_;
    ::google::protobuf::internal::ArenaStringPtr currency_code_;
    ::products::v1::ProductMetadata* PROTOBUF_NULLABLE metadata_;
    ::uint32_t version_;
    bool ar_enabled_;
    ::uint64_t created_at_;
    ::uint64_t published_at_;
    ::uint64_t updated_at_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_products_2fv1_2fproduct_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Product_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ProductTag

// optional uint32 id = 1 [json_name = "id"];
inline bool ProductTag::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ProductTag::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t ProductTag::id() const {
  // @@protoc_insertion_point(field_get:products.v1.ProductTag.id)
  return _internal_id();
}
inline void ProductTag::set_id(::uint32_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:products.v1.ProductTag.id)
}
inline ::uint32_t ProductTag::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void ProductTag::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional string name = 2 [json_name = "name"];
inline bool ProductTag::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ProductTag::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ProductTag::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductTag.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProductTag::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.ProductTag.name)
}
inline ::std::string* PROTOBUF_NONNULL ProductTag::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductTag.name)
  return _s;
}
inline const ::std::string& ProductTag::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ProductTag::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProductTag::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProductTag::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ProductTag.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void ProductTag::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.ProductTag.name)
}

// -------------------------------------------------------------------

// ProductMetadata

// -------------------------------------------------------------------

// Product

// string id = 1 [json_name = "id"];
inline void Product::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Product::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Product.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Product::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.Product.id)
}
inline ::std::string* PROTOBUF_NONNULL Product::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:products.v1.Product.id)
  return _s;
}
inline const ::std::string& Product::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Product::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Product::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Product::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.Product.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.Product.id)
}

// string user_id = 2 [json_name = "userId"];
inline void Product::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Product::user_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Product.user_id)
  return _internal_user_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Product::set_user_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.user_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.Product.user_id)
}
inline ::std::string* PROTOBUF_NONNULL Product::mutable_user_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_user_id();
  // @@protoc_insertion_point(field_mutable:products.v1.Product.user_id)
  return _s;
}
inline const ::std::string& Product::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_.Get();
}
inline void Product::_internal_set_user_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.user_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Product::_internal_mutable_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.user_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Product::release_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.Product.user_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.user_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.user_id_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_user_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.user_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.user_id_.IsDefault()) {
    _impl_.user_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.Product.user_id)
}

// string sku = 3 [json_name = "sku"];
inline void Product::clear_sku() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sku_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& Product::sku() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Product.sku)
  return _internal_sku();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Product::set_sku(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.sku_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.Product.sku)
}
inline ::std::string* PROTOBUF_NONNULL Product::mutable_sku()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_sku();
  // @@protoc_insertion_point(field_mutable:products.v1.Product.sku)
  return _s;
}
inline const ::std::string& Product::_internal_sku() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sku_.Get();
}
inline void Product::_internal_set_sku(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.sku_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Product::_internal_mutable_sku() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.sku_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Product::release_sku() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.Product.sku)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.sku_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.sku_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_sku(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.sku_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sku_.IsDefault()) {
    _impl_.sku_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.Product.sku)
}

// uint32 version = 4 [json_name = "version"];
inline void Product::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t Product::version() const {
  // @@protoc_insertion_point(field_get:products.v1.Product.version)
  return _internal_version();
}
inline void Product::set_version(::uint32_t value) {
  _internal_set_version(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:products.v1.Product.version)
}
inline ::uint32_t Product::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void Product::_internal_set_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// string status = 5 [json_name = "status"];
inline void Product::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& Product::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Product.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Product::set_status(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.Product.status)
}
inline ::std::string* PROTOBUF_NONNULL Product::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:products.v1.Product.status)
  return _s;
}
inline const ::std::string& Product::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void Product::_internal_set_status(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.status_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Product::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.status_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Product::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.Product.status)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.status_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.status_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_status(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.Product.status)
}

// string title = 6 [json_name = "title"];
inline void Product::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::std::string& Product::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Product.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Product::set_title(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.Product.title)
}
inline ::std::string* PROTOBUF_NONNULL Product::mutable_title()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:products.v1.Product.title)
  return _s;
}
inline const ::std::string& Product::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void Product::_internal_set_title(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.title_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Product::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.title_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Product::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.Product.title)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.title_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.title_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_title(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.title_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.Product.title)
}

// string description = 7 [json_name = "description"];
inline void Product::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::std::string& Product::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Product.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Product::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.Product.description)
}
inline ::std::string* PROTOBUF_NONNULL Product::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:products.v1.Product.description)
  return _s;
}
inline const ::std::string& Product::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Product::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Product::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Product::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.Product.description)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.Product.description)
}

// string slug = 8 [json_name = "slug"];
inline void Product::clear_slug() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slug_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::std::string& Product::slug() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Product.slug)
  return _internal_slug();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Product::set_slug(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.slug_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.Product.slug)
}
inline ::std::string* PROTOBUF_NONNULL Product::mutable_slug()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_slug();
  // @@protoc_insertion_point(field_mutable:products.v1.Product.slug)
  return _s;
}
inline const ::std::string& Product::_internal_slug() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.slug_.Get();
}
inline void Product::_internal_set_slug(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.slug_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Product::_internal_mutable_slug() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.slug_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Product::release_slug() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.Product.slug)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.slug_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.slug_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_slug(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.slug_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.slug_.IsDefault()) {
    _impl_.slug_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.Product.slug)
}

// string price = 9 [json_name = "price"];
inline void Product::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const ::std::string& Product::price() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Product.price)
  return _internal_price();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Product::set_price(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.price_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.Product.price)
}
inline ::std::string* PROTOBUF_NONNULL Product::mutable_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_price();
  // @@protoc_insertion_point(field_mutable:products.v1.Product.price)
  return _s;
}
inline const ::std::string& Product::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_.Get();
}
inline void Product::_internal_set_price(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.price_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Product::_internal_mutable_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  return _impl_.price_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Product::release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.Product.price)
  if ((_impl_._has_bits_[0] & 0x00000080u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000080u;
  auto* released = _impl_.price_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.price_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_price(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.price_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.price_.IsDefault()) {
    _impl_.price_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.Product.price)
}

// string currency_code = 10 [json_name = "currencyCode"];
inline void Product::clear_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const ::std::string& Product::currency_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Product.currency_code)
  return _internal_currency_code();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Product::set_currency_code(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.currency_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.Product.currency_code)
}
inline ::std::string* PROTOBUF_NONNULL Product::mutable_currency_code()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_currency_code();
  // @@protoc_insertion_point(field_mutable:products.v1.Product.currency_code)
  return _s;
}
inline const ::std::string& Product::_internal_currency_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currency_code_.Get();
}
inline void Product::_internal_set_currency_code(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.currency_code_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Product::_internal_mutable_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  return _impl_.currency_code_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Product::release_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.Product.currency_code)
  if ((_impl_._has_bits_[0] & 0x00000100u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000100u;
  auto* released = _impl_.currency_code_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.currency_code_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_currency_code(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  _impl_.currency_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.currency_code_.IsDefault()) {
    _impl_.currency_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.Product.currency_code)
}

// repeated .products.v1.ProductTag tags = 11 [json_name = "tags"];
inline int Product::_internal_tags_size() const {
  return _internal_tags().size();
}
inline int Product::tags_size() const {
  return _internal_tags_size();
}
inline void Product::clear_tags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tags_.Clear();
}
inline ::products::v1::ProductTag* PROTOBUF_NONNULL Product::mutable_tags(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:products.v1.Product.tags)
  return _internal_mutable_tags()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::products::v1::ProductTag>* PROTOBUF_NONNULL Product::mutable_tags()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:products.v1.Product.tags)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tags();
}
inline const ::products::v1::ProductTag& Product::tags(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Product.tags)
  return _internal_tags().Get(index);
}
inline ::products::v1::ProductTag* PROTOBUF_NONNULL Product::add_tags()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::products::v1::ProductTag* _add = _internal_mutable_tags()->Add();
  // @@protoc_insertion_point(field_add:products.v1.Product.tags)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::products::v1::ProductTag>& Product::tags() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:products.v1.Product.tags)
  return _internal_tags();
}
inline const ::google::protobuf::RepeatedPtrField<::products::v1::ProductTag>&
Product::_internal_tags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tags_;
}
inline ::google::protobuf::RepeatedPtrField<::products::v1::ProductTag>* PROTOBUF_NONNULL
Product::_internal_mutable_tags() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tags_;
}

// optional .products.v1.ProductMetadata metadata = 12 [json_name = "metadata"];
inline bool Product::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline void Product::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline const ::products::v1::ProductMetadata& Product::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::products::v1::ProductMetadata* p = _impl_.metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::products::v1::ProductMetadata&>(::products::v1::_ProductMetadata_default_instance_);
}
inline const ::products::v1::ProductMetadata& Product::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Product.metadata)
  return _internal_metadata();
}
inline void Product::unsafe_arena_set_allocated_metadata(
    ::products::v1::ProductMetadata* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::products::v1::ProductMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:products.v1.Product.metadata)
}
inline ::products::v1::ProductMetadata* PROTOBUF_NULLABLE Product::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::products::v1::ProductMetadata* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::products::v1::ProductMetadata* PROTOBUF_NULLABLE Product::unsafe_arena_release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.Product.metadata)

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::products::v1::ProductMetadata* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::products::v1::ProductMetadata* PROTOBUF_NONNULL Product::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::products::v1::ProductMetadata>(GetArena());
    _impl_.metadata_ = reinterpret_cast<::products::v1::ProductMetadata*>(p);
  }
  return _impl_.metadata_;
}
inline ::products::v1::ProductMetadata* PROTOBUF_NONNULL Product::mutable_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000200u;
  ::products::v1::ProductMetadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:products.v1.Product.metadata)
  return _msg;
}
inline void Product::set_allocated_metadata(::products::v1::ProductMetadata* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }

  _impl_.metadata_ = reinterpret_cast<::products::v1::ProductMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:products.v1.Product.metadata)
}

// bool ar_enabled = 13 [json_name = "arEnabled"];
inline void Product::clear_ar_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ar_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline bool Product::ar_enabled() const {
  // @@protoc_insertion_point(field_get:products.v1.Product.ar_enabled)
  return _internal_ar_enabled();
}
inline void Product::set_ar_enabled(bool value) {
  _internal_set_ar_enabled(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:products.v1.Product.ar_enabled)
}
inline bool Product::_internal_ar_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ar_enabled_;
}
inline void Product::_internal_set_ar_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ar_enabled_ = value;
}

// uint64 created_at = 14 [json_name = "createdAt"];
inline void Product::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::uint64_t Product::created_at() const {
  // @@protoc_insertion_point(field_get:products.v1.Product.created_at)
  return _internal_created_at();
}
inline void Product::set_created_at(::uint64_t value) {
  _internal_set_created_at(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:products.v1.Product.created_at)
}
inline ::uint64_t Product::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_;
}
inline void Product::_internal_set_created_at(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_ = value;
}

// optional uint64 published_at = 15 [json_name = "publishedAt"];
inline bool Product::has_published_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void Product::clear_published_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.published_at_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::uint64_t Product::published_at() const {
  // @@protoc_insertion_point(field_get:products.v1.Product.published_at)
  return _internal_published_at();
}
inline void Product::set_published_at(::uint64_t value) {
  _internal_set_published_at(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:products.v1.Product.published_at)
}
inline ::uint64_t Product::_internal_published_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.published_at_;
}
inline void Product::_internal_set_published_at(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.published_at_ = value;
}

// optional uint64 updated_at = 16 [json_name = "updatedAt"];
inline bool Product::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void Product::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::uint64_t Product::updated_at() const {
  // @@protoc_insertion_point(field_get:products.v1.Product.updated_at)
  return _internal_updated_at();
}
inline void Product::set_updated_at(::uint64_t value) {
  _internal_set_updated_at(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:products.v1.Product.updated_at)
}
inline ::uint64_t Product::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_;
}
inline void Product::_internal_set_updated_at(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace products


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // products_2fv1_2fproduct_2eproto_2epb_2eh
