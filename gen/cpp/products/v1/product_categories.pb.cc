// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: products/v1/product_categories.proto
// Protobuf C++ Version: 6.31.1

#include "products/v1/product_categories.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace products {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR SubcategoryTranslations_AttributesEntry_DoNotUse::SubcategoryTranslations_AttributesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SubcategoryTranslations_AttributesEntry_DoNotUse::MapEntry(SubcategoryTranslations_AttributesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SubcategoryTranslations_AttributesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubcategoryTranslations_AttributesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubcategoryTranslations_AttributesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubcategoryTranslations_AttributesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SubcategoryTranslations_AttributesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubcategoryTranslations_AttributesEntry_DoNotUseDefaultTypeInternal _SubcategoryTranslations_AttributesEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SubcategoryTranslations_DataEntry_DoNotUse::SubcategoryTranslations_DataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SubcategoryTranslations_DataEntry_DoNotUse::MapEntry(SubcategoryTranslations_DataEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SubcategoryTranslations_DataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubcategoryTranslations_DataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubcategoryTranslations_DataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubcategoryTranslations_DataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SubcategoryTranslations_DataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubcategoryTranslations_DataEntry_DoNotUseDefaultTypeInternal _SubcategoryTranslations_DataEntry_DoNotUse_default_instance_;

inline constexpr SubcategoryTranslations::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        attributes_{},
        data_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR SubcategoryTranslations::SubcategoryTranslations(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubcategoryTranslations_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubcategoryTranslationsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubcategoryTranslationsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubcategoryTranslationsDefaultTypeInternal() {}
  union {
    SubcategoryTranslations _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubcategoryTranslationsDefaultTypeInternal _SubcategoryTranslations_default_instance_;

inline constexpr SubcategoryAttribute::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        string_array_{},
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reference_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validation_{nullptr},
        required_{false},
        include_in_variants_{false},
        is_multiple_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SubcategoryAttribute::SubcategoryAttribute(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubcategoryAttribute_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubcategoryAttributeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubcategoryAttributeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubcategoryAttributeDefaultTypeInternal() {}
  union {
    SubcategoryAttribute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubcategoryAttributeDefaultTypeInternal _SubcategoryAttribute_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Subcategory_AttributesEntry_DoNotUse::Subcategory_AttributesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Subcategory_AttributesEntry_DoNotUse::MapEntry(Subcategory_AttributesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Subcategory_AttributesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Subcategory_AttributesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Subcategory_AttributesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Subcategory_AttributesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Subcategory_AttributesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Subcategory_AttributesEntry_DoNotUseDefaultTypeInternal _Subcategory_AttributesEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CategoryTranslations_SubcategoriesEntry_DoNotUse::CategoryTranslations_SubcategoriesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : CategoryTranslations_SubcategoriesEntry_DoNotUse::MapEntry(CategoryTranslations_SubcategoriesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : CategoryTranslations_SubcategoriesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CategoryTranslations_SubcategoriesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CategoryTranslations_SubcategoriesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CategoryTranslations_SubcategoriesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CategoryTranslations_SubcategoriesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CategoryTranslations_SubcategoriesEntry_DoNotUseDefaultTypeInternal _CategoryTranslations_SubcategoriesEntry_DoNotUse_default_instance_;

inline constexpr Subcategory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        attributes_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Subcategory::Subcategory(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Subcategory_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubcategoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubcategoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubcategoryDefaultTypeInternal() {}
  union {
    Subcategory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubcategoryDefaultTypeInternal _Subcategory_default_instance_;

inline constexpr CategoryTranslations::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subcategories_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        language_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CategoryTranslations::CategoryTranslations(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CategoryTranslations_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CategoryTranslationsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CategoryTranslationsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CategoryTranslationsDefaultTypeInternal() {}
  union {
    CategoryTranslations _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CategoryTranslationsDefaultTypeInternal _CategoryTranslations_default_instance_;

inline constexpr Category::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        translations_{},
        subcategories_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        image_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Category::Category(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Category_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CategoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CategoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CategoryDefaultTypeInternal() {}
  union {
    Category _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CategoryDefaultTypeInternal _Category_default_instance_;
}  // namespace v1
}  // namespace products
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_products_2fv1_2fproduct_5fcategories_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_products_2fv1_2fproduct_5fcategories_2eproto = nullptr;
const ::uint32_t
    TableStruct_products_2fv1_2fproduct_5fcategories_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::products::v1::Category, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::products::v1::Category, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::products::v1::Category, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::products::v1::Category, _impl_.image_),
        PROTOBUF_FIELD_OFFSET(::products::v1::Category, _impl_.translations_),
        PROTOBUF_FIELD_OFFSET(::products::v1::Category, _impl_.subcategories_),
        0,
        1,
        2,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::products::v1::CategoryTranslations_SubcategoriesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::products::v1::CategoryTranslations_SubcategoriesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::products::v1::CategoryTranslations_SubcategoriesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::products::v1::CategoryTranslations, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::products::v1::CategoryTranslations, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::products::v1::CategoryTranslations, _impl_.language_),
        PROTOBUF_FIELD_OFFSET(::products::v1::CategoryTranslations, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::products::v1::CategoryTranslations, _impl_.subcategories_),
        0,
        1,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryTranslations_AttributesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryTranslations_AttributesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryTranslations_AttributesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryTranslations_DataEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryTranslations_DataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryTranslations_DataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryTranslations, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryTranslations, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryTranslations, _impl_.attributes_),
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryTranslations, _impl_.data_),
        0,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::products::v1::Subcategory_AttributesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::products::v1::Subcategory_AttributesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::products::v1::Subcategory_AttributesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::products::v1::Subcategory, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::products::v1::Subcategory, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::products::v1::Subcategory, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::products::v1::Subcategory, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::products::v1::Subcategory, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::products::v1::Subcategory, _impl_.attributes_),
        0,
        1,
        3,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryAttribute, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryAttribute, _impl_.required_),
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryAttribute, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryAttribute, _impl_.include_in_variants_),
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryAttribute, _impl_.reference_),
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryAttribute, _impl_.string_array_),
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryAttribute, _impl_.is_multiple_),
        PROTOBUF_FIELD_OFFSET(::products::v1::SubcategoryAttribute, _impl_.validation_),
        3,
        0,
        4,
        1,
        ~0u,
        5,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::products::v1::Category)},
        {13, sizeof(::products::v1::CategoryTranslations_SubcategoriesEntry_DoNotUse)},
        {20, sizeof(::products::v1::CategoryTranslations)},
        {31, sizeof(::products::v1::SubcategoryTranslations_AttributesEntry_DoNotUse)},
        {38, sizeof(::products::v1::SubcategoryTranslations_DataEntry_DoNotUse)},
        {45, sizeof(::products::v1::SubcategoryTranslations)},
        {54, sizeof(::products::v1::Subcategory_AttributesEntry_DoNotUse)},
        {61, sizeof(::products::v1::Subcategory)},
        {74, sizeof(::products::v1::SubcategoryAttribute)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::products::v1::_Category_default_instance_._instance,
    &::products::v1::_CategoryTranslations_SubcategoriesEntry_DoNotUse_default_instance_._instance,
    &::products::v1::_CategoryTranslations_default_instance_._instance,
    &::products::v1::_SubcategoryTranslations_AttributesEntry_DoNotUse_default_instance_._instance,
    &::products::v1::_SubcategoryTranslations_DataEntry_DoNotUse_default_instance_._instance,
    &::products::v1::_SubcategoryTranslations_default_instance_._instance,
    &::products::v1::_Subcategory_AttributesEntry_DoNotUse_default_instance_._instance,
    &::products::v1::_Subcategory_default_instance_._instance,
    &::products::v1::_SubcategoryAttribute_default_instance_._instance,
};
const char descriptor_table_protodef_products_2fv1_2fproduct_5fcategories_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n$products/v1/product_categories.proto\022\013"
    "products.v1\032\025shared/v1/types.proto\032\032shar"
    "ed/v1/validation.proto\"\313\001\n\010Category\022\016\n\002i"
    "d\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\022\024\n\005image"
    "\030\003 \001(\tR\005image\022E\n\014translations\030\004 \003(\0132!.pr"
    "oducts.v1.CategoryTranslationsR\014translat"
    "ions\022>\n\rsubcategories\030\005 \003(\0132\030.products.v"
    "1.SubcategoryR\rsubcategories\"\244\002\n\024Categor"
    "yTranslations\022\022\n\004name\030\001 \001(\tR\004name\022\032\n\010lan"
    "guage\030\002 \001(\tR\010language\022\030\n\007version\030\003 \001(\005R\007"
    "version\022Z\n\rsubcategories\030\004 \003(\01324.product"
    "s.v1.CategoryTranslations.SubcategoriesE"
    "ntryR\rsubcategories\032f\n\022SubcategoriesEntr"
    "y\022\020\n\003key\030\001 \001(\tR\003key\022:\n\005value\030\002 \001(\0132$.pro"
    "ducts.v1.SubcategoryTranslationsR\005value:"
    "\0028\001\"\325\002\n\027SubcategoryTranslations\022\022\n\004name\030"
    "\001 \001(\tR\004name\022T\n\nattributes\030\002 \003(\01324.produc"
    "ts.v1.SubcategoryTranslations.Attributes"
    "EntryR\nattributes\022B\n\004data\030\003 \003(\0132..produc"
    "ts.v1.SubcategoryTranslations.DataEntryR"
    "\004data\032=\n\017AttributesEntry\022\020\n\003key\030\001 \001(\tR\003k"
    "ey\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\032M\n\tDataEntr"
    "y\022\020\n\003key\030\001 \001(\tR\003key\022*\n\005value\030\002 \001(\0132\024.sha"
    "red.v1.StringMapR\005value:\0028\001\"\226\002\n\013Subcateg"
    "ory\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\022"
    "\030\n\007version\030\003 \001(\005R\007version\022\035\n\ncreated_at\030"
    "\004 \001(\tR\tcreatedAt\022H\n\nattributes\030\005 \003(\0132(.p"
    "roducts.v1.Subcategory.AttributesEntryR\n"
    "attributes\032`\n\017AttributesEntry\022\020\n\003key\030\001 \001"
    "(\tR\003key\0227\n\005value\030\002 \001(\0132!.products.v1.Sub"
    "categoryAttributeR\005value:\0028\001\"\274\002\n\024Subcate"
    "goryAttribute\022\032\n\010required\030\001 \001(\010R\010require"
    "d\022\022\n\004type\030\002 \001(\tR\004type\022.\n\023include_in_vari"
    "ants\030\003 \001(\010R\021includeInVariants\022!\n\treferen"
    "ce\030\004 \001(\tH\000R\treference\210\001\001\022!\n\014string_array"
    "\030\005 \003(\tR\013stringArray\022$\n\013is_multiple\030\006 \001(\010"
    "H\001R\nisMultiple\210\001\001\022:\n\nvalidation\030\007 \001(\0132\032."
    "shared.v1.ValidationFieldR\nvalidationB\014\n"
    "\n_referenceB\016\n\014_is_multipleB\200\001\n\034org.mega"
    "commerce.products.v1B\026ProductCategoriesP"
    "rotoZEgithub.com/ahmad-khatib0-org/megac"
    "ommerce-proto/gen/go/products/v1;v1\370\001\001b\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto_deps[2] = {
        &::descriptor_table_shared_2fv1_2ftypes_2eproto,
        &::descriptor_table_shared_2fv1_2fvalidation_2eproto,
};
static ::absl::once_flag descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto = {
    false,
    false,
    1686,
    descriptor_table_protodef_products_2fv1_2fproduct_5fcategories_2eproto,
    "products/v1/product_categories.proto",
    &descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto_once,
    descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto_deps,
    2,
    9,
    schemas,
    file_default_instances,
    TableStruct_products_2fv1_2fproduct_5fcategories_2eproto::offsets,
    file_level_enum_descriptors_products_2fv1_2fproduct_5fcategories_2eproto,
    file_level_service_descriptors_products_2fv1_2fproduct_5fcategories_2eproto,
};
namespace products {
namespace v1 {
// ===================================================================

class Category::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Category>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Category, _impl_._has_bits_);
};

Category::Category(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Category_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:products.v1.Category)
}
PROTOBUF_NDEBUG_INLINE Category::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::products::v1::Category& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        translations_{visibility, arena, from.translations_},
        subcategories_{visibility, arena, from.subcategories_},
        id_(arena, from.id_),
        name_(arena, from.name_),
        image_(arena, from.image_) {}

Category::Category(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Category& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Category_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Category* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:products.v1.Category)
}
PROTOBUF_NDEBUG_INLINE Category::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        translations_{visibility, arena},
        subcategories_{visibility, arena},
        id_(arena),
        name_(arena),
        image_(arena) {}

inline void Category::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Category::~Category() {
  // @@protoc_insertion_point(destructor:products.v1.Category)
  SharedDtor(*this);
}
inline void Category::SharedDtor(MessageLite& self) {
  Category& this_ = static_cast<Category&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.image_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Category::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Category(arena);
}
constexpr auto Category::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Category, _impl_.translations_) +
          decltype(Category::_impl_.translations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Category, _impl_.subcategories_) +
          decltype(Category::_impl_.subcategories_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Category), alignof(Category), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Category::PlacementNew_,
                                 sizeof(Category),
                                 alignof(Category));
  }
}
constexpr auto Category::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Category_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Category::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Category>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Category::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Category>(), &Category::ByteSizeLong,
              &Category::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Category, _impl_._cached_size_),
          false,
      },
      &Category::kDescriptorMethods,
      &descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Category_class_data_ =
        Category::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Category::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Category_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Category_class_data_.tc_table);
  return Category_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 40, 2>
Category::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Category, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Category_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::products::v1::Category>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Category, _impl_.id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Category, _impl_.name_)}},
    // string image = 3 [json_name = "image"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(Category, _impl_.image_)}},
    // repeated .products.v1.CategoryTranslations translations = 4 [json_name = "translations"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Category, _impl_.translations_)}},
    // repeated .products.v1.Subcategory subcategories = 5 [json_name = "subcategories"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(Category, _impl_.subcategories_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Category, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Category, _impl_.name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string image = 3 [json_name = "image"];
    {PROTOBUF_FIELD_OFFSET(Category, _impl_.image_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .products.v1.CategoryTranslations translations = 4 [json_name = "translations"];
    {PROTOBUF_FIELD_OFFSET(Category, _impl_.translations_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .products.v1.Subcategory subcategories = 5 [json_name = "subcategories"];
    {PROTOBUF_FIELD_OFFSET(Category, _impl_.subcategories_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::products::v1::CategoryTranslations>()},
      {::_pbi::TcParser::GetTable<::products::v1::Subcategory>()},
  }},
  {{
    "\24\2\4\5\0\0\0\0"
    "products.v1.Category"
    "id"
    "name"
    "image"
  }},
};
PROTOBUF_NOINLINE void Category::Clear() {
// @@protoc_insertion_point(message_clear_start:products.v1.Category)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.translations_.Clear();
  _impl_.subcategories_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.image_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Category::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Category& this_ = static_cast<const Category&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Category::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Category& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:products.v1.Category)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.Category.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.Category.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string image = 3 [json_name = "image"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_image().empty()) {
      const ::std::string& _s = this_._internal_image();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.Category.image");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // repeated .products.v1.CategoryTranslations translations = 4 [json_name = "translations"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_translations_size());
       i < n; i++) {
    const auto& repfield = this_._internal_translations().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .products.v1.Subcategory subcategories = 5 [json_name = "subcategories"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_subcategories_size());
       i < n; i++) {
    const auto& repfield = this_._internal_subcategories().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:products.v1.Category)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Category::ByteSizeLong(const MessageLite& base) {
  const Category& this_ = static_cast<const Category&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Category::ByteSizeLong() const {
  const Category& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:products.v1.Category)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .products.v1.CategoryTranslations translations = 4 [json_name = "translations"];
    {
      total_size += 1UL * this_._internal_translations_size();
      for (const auto& msg : this_._internal_translations()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .products.v1.Subcategory subcategories = 5 [json_name = "subcategories"];
    {
      total_size += 1UL * this_._internal_subcategories_size();
      for (const auto& msg : this_._internal_subcategories()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string image = 3 [json_name = "image"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_image().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_image());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Category::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Category*>(&to_msg);
  auto& from = static_cast<const Category&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:products.v1.Category)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_translations()->MergeFrom(
      from._internal_translations());
  _this->_internal_mutable_subcategories()->MergeFrom(
      from._internal_subcategories());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_image().empty()) {
        _this->_internal_set_image(from._internal_image());
      } else {
        if (_this->_impl_.image_.IsDefault()) {
          _this->_internal_set_image("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Category::CopyFrom(const Category& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:products.v1.Category)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Category::InternalSwap(Category* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.translations_.InternalSwap(&other->_impl_.translations_);
  _impl_.subcategories_.InternalSwap(&other->_impl_.subcategories_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.image_, &other->_impl_.image_, arena);
}

::google::protobuf::Metadata Category::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
CategoryTranslations_SubcategoriesEntry_DoNotUse::CategoryTranslations_SubcategoriesEntry_DoNotUse()
    : SuperType(CategoryTranslations_SubcategoriesEntry_DoNotUse_class_data_.base()) {}
CategoryTranslations_SubcategoriesEntry_DoNotUse::CategoryTranslations_SubcategoriesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, CategoryTranslations_SubcategoriesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
CategoryTranslations_SubcategoriesEntry_DoNotUse::CategoryTranslations_SubcategoriesEntry_DoNotUse() : SuperType() {}
CategoryTranslations_SubcategoriesEntry_DoNotUse::CategoryTranslations_SubcategoriesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL CategoryTranslations_SubcategoriesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CategoryTranslations_SubcategoriesEntry_DoNotUse(arena);
}
constexpr auto CategoryTranslations_SubcategoriesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CategoryTranslations_SubcategoriesEntry_DoNotUse),
                                            alignof(CategoryTranslations_SubcategoriesEntry_DoNotUse));
}
constexpr auto CategoryTranslations_SubcategoriesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CategoryTranslations_SubcategoriesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CategoryTranslations_SubcategoriesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CategoryTranslations_SubcategoriesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CategoryTranslations_SubcategoriesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&CategoryTranslations_SubcategoriesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CategoryTranslations_SubcategoriesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &CategoryTranslations_SubcategoriesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CategoryTranslations_SubcategoriesEntry_DoNotUse_class_data_ =
        CategoryTranslations_SubcategoriesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CategoryTranslations_SubcategoriesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CategoryTranslations_SubcategoriesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CategoryTranslations_SubcategoriesEntry_DoNotUse_class_data_.tc_table);
  return CategoryTranslations_SubcategoriesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 63, 2>
CategoryTranslations_SubcategoriesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CategoryTranslations_SubcategoriesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CategoryTranslations_SubcategoriesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::products::v1::CategoryTranslations_SubcategoriesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .products.v1.SubcategoryTranslations value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CategoryTranslations_SubcategoriesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CategoryTranslations_SubcategoriesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(CategoryTranslations_SubcategoriesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .products.v1.SubcategoryTranslations value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(CategoryTranslations_SubcategoriesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::products::v1::SubcategoryTranslations>()},
  }},
  {{
    "\63\3\0\0\0\0\0\0"
    "products.v1.CategoryTranslations.SubcategoriesEntry"
    "key"
  }},
};
// ===================================================================

class CategoryTranslations::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CategoryTranslations>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CategoryTranslations, _impl_._has_bits_);
};

CategoryTranslations::CategoryTranslations(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CategoryTranslations_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:products.v1.CategoryTranslations)
}
PROTOBUF_NDEBUG_INLINE CategoryTranslations::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::products::v1::CategoryTranslations& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        subcategories_{visibility, arena, from.subcategories_},
        name_(arena, from.name_),
        language_(arena, from.language_) {}

CategoryTranslations::CategoryTranslations(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CategoryTranslations& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CategoryTranslations_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CategoryTranslations* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.version_ = from._impl_.version_;

  // @@protoc_insertion_point(copy_constructor:products.v1.CategoryTranslations)
}
PROTOBUF_NDEBUG_INLINE CategoryTranslations::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        subcategories_{visibility, arena},
        name_(arena),
        language_(arena) {}

inline void CategoryTranslations::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.version_ = {};
}
CategoryTranslations::~CategoryTranslations() {
  // @@protoc_insertion_point(destructor:products.v1.CategoryTranslations)
  SharedDtor(*this);
}
inline void CategoryTranslations::SharedDtor(MessageLite& self) {
  CategoryTranslations& this_ = static_cast<CategoryTranslations&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.language_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CategoryTranslations::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CategoryTranslations(arena);
}
constexpr auto CategoryTranslations::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CategoryTranslations, _impl_.subcategories_) +
          decltype(CategoryTranslations::_impl_.subcategories_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CategoryTranslations, _impl_.subcategories_) +
          decltype(CategoryTranslations::_impl_.subcategories_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CategoryTranslations), alignof(CategoryTranslations), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CategoryTranslations::PlacementNew_,
                                 sizeof(CategoryTranslations),
                                 alignof(CategoryTranslations));
  }
}
constexpr auto CategoryTranslations::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CategoryTranslations_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CategoryTranslations::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CategoryTranslations>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CategoryTranslations::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CategoryTranslations>(), &CategoryTranslations::ByteSizeLong,
              &CategoryTranslations::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CategoryTranslations, _impl_._cached_size_),
          false,
      },
      &CategoryTranslations::kDescriptorMethods,
      &descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CategoryTranslations_class_data_ =
        CategoryTranslations::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CategoryTranslations::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CategoryTranslations_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CategoryTranslations_class_data_.tc_table);
  return CategoryTranslations_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 66, 2>
CategoryTranslations::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CategoryTranslations, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CategoryTranslations_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::products::v1::CategoryTranslations>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CategoryTranslations, _impl_.name_)}},
    // string language = 2 [json_name = "language"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CategoryTranslations, _impl_.language_)}},
    // int32 version = 3 [json_name = "version"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CategoryTranslations, _impl_.version_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CategoryTranslations, _impl_.version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(CategoryTranslations, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string language = 2 [json_name = "language"];
    {PROTOBUF_FIELD_OFFSET(CategoryTranslations, _impl_.language_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 version = 3 [json_name = "version"];
    {PROTOBUF_FIELD_OFFSET(CategoryTranslations, _impl_.version_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // map<string, .products.v1.SubcategoryTranslations> subcategories = 4 [json_name = "subcategories"];
    {PROTOBUF_FIELD_OFFSET(CategoryTranslations, _impl_.subcategories_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::products::v1::SubcategoryTranslations>()},
  }},
  {{
    "\40\4\10\0\15\0\0\0"
    "products.v1.CategoryTranslations"
    "name"
    "language"
    "subcategories"
  }},
};
PROTOBUF_NOINLINE void CategoryTranslations::Clear() {
// @@protoc_insertion_point(message_clear_start:products.v1.CategoryTranslations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subcategories_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.language_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.version_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CategoryTranslations::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CategoryTranslations& this_ = static_cast<const CategoryTranslations&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CategoryTranslations::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CategoryTranslations& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:products.v1.CategoryTranslations)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.CategoryTranslations.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string language = 2 [json_name = "language"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_language().empty()) {
      const ::std::string& _s = this_._internal_language();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.CategoryTranslations.language");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 version = 3 [json_name = "version"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_version() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_version(), target);
    }
  }

  // map<string, .products.v1.SubcategoryTranslations> subcategories = 4 [json_name = "subcategories"];
  if (!this_._internal_subcategories().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::products::v1::SubcategoryTranslations>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::products::v1::SubcategoryTranslations,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_subcategories();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.CategoryTranslations.subcategories");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.CategoryTranslations.subcategories");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:products.v1.CategoryTranslations)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CategoryTranslations::ByteSizeLong(const MessageLite& base) {
  const CategoryTranslations& this_ = static_cast<const CategoryTranslations&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CategoryTranslations::ByteSizeLong() const {
  const CategoryTranslations& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:products.v1.CategoryTranslations)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, .products.v1.SubcategoryTranslations> subcategories = 4 [json_name = "subcategories"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_subcategories_size());
      for (const auto& entry : this_._internal_subcategories()) {
        total_size += _pbi::MapEntryFuncs<std::string, ::products::v1::SubcategoryTranslations,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string name = 1 [json_name = "name"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string language = 2 [json_name = "language"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_language().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_language());
      }
    }
    // int32 version = 3 [json_name = "version"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_version() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_version());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CategoryTranslations::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CategoryTranslations*>(&to_msg);
  auto& from = static_cast<const CategoryTranslations&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:products.v1.CategoryTranslations)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.subcategories_.MergeFrom(from._impl_.subcategories_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_language().empty()) {
        _this->_internal_set_language(from._internal_language());
      } else {
        if (_this->_impl_.language_.IsDefault()) {
          _this->_internal_set_language("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_version() != 0) {
        _this->_impl_.version_ = from._impl_.version_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CategoryTranslations::CopyFrom(const CategoryTranslations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:products.v1.CategoryTranslations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CategoryTranslations::InternalSwap(CategoryTranslations* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.subcategories_.InternalSwap(&other->_impl_.subcategories_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.language_, &other->_impl_.language_, arena);
  swap(_impl_.version_, other->_impl_.version_);
}

::google::protobuf::Metadata CategoryTranslations::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
SubcategoryTranslations_AttributesEntry_DoNotUse::SubcategoryTranslations_AttributesEntry_DoNotUse()
    : SuperType(SubcategoryTranslations_AttributesEntry_DoNotUse_class_data_.base()) {}
SubcategoryTranslations_AttributesEntry_DoNotUse::SubcategoryTranslations_AttributesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, SubcategoryTranslations_AttributesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
SubcategoryTranslations_AttributesEntry_DoNotUse::SubcategoryTranslations_AttributesEntry_DoNotUse() : SuperType() {}
SubcategoryTranslations_AttributesEntry_DoNotUse::SubcategoryTranslations_AttributesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL SubcategoryTranslations_AttributesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubcategoryTranslations_AttributesEntry_DoNotUse(arena);
}
constexpr auto SubcategoryTranslations_AttributesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubcategoryTranslations_AttributesEntry_DoNotUse),
                                            alignof(SubcategoryTranslations_AttributesEntry_DoNotUse));
}
constexpr auto SubcategoryTranslations_AttributesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubcategoryTranslations_AttributesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubcategoryTranslations_AttributesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubcategoryTranslations_AttributesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubcategoryTranslations_AttributesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&SubcategoryTranslations_AttributesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubcategoryTranslations_AttributesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &SubcategoryTranslations_AttributesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubcategoryTranslations_AttributesEntry_DoNotUse_class_data_ =
        SubcategoryTranslations_AttributesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubcategoryTranslations_AttributesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubcategoryTranslations_AttributesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubcategoryTranslations_AttributesEntry_DoNotUse_class_data_.tc_table);
  return SubcategoryTranslations_AttributesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 68, 2>
SubcategoryTranslations_AttributesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubcategoryTranslations_AttributesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubcategoryTranslations_AttributesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::products::v1::SubcategoryTranslations_AttributesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SubcategoryTranslations_AttributesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubcategoryTranslations_AttributesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(SubcategoryTranslations_AttributesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(SubcategoryTranslations_AttributesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\63\3\5\0\0\0\0\0"
    "products.v1.SubcategoryTranslations.AttributesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
SubcategoryTranslations_DataEntry_DoNotUse::SubcategoryTranslations_DataEntry_DoNotUse()
    : SuperType(SubcategoryTranslations_DataEntry_DoNotUse_class_data_.base()) {}
SubcategoryTranslations_DataEntry_DoNotUse::SubcategoryTranslations_DataEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, SubcategoryTranslations_DataEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
SubcategoryTranslations_DataEntry_DoNotUse::SubcategoryTranslations_DataEntry_DoNotUse() : SuperType() {}
SubcategoryTranslations_DataEntry_DoNotUse::SubcategoryTranslations_DataEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL SubcategoryTranslations_DataEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubcategoryTranslations_DataEntry_DoNotUse(arena);
}
constexpr auto SubcategoryTranslations_DataEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubcategoryTranslations_DataEntry_DoNotUse),
                                            alignof(SubcategoryTranslations_DataEntry_DoNotUse));
}
constexpr auto SubcategoryTranslations_DataEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubcategoryTranslations_DataEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubcategoryTranslations_DataEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubcategoryTranslations_DataEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubcategoryTranslations_DataEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&SubcategoryTranslations_DataEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubcategoryTranslations_DataEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &SubcategoryTranslations_DataEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubcategoryTranslations_DataEntry_DoNotUse_class_data_ =
        SubcategoryTranslations_DataEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubcategoryTranslations_DataEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubcategoryTranslations_DataEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubcategoryTranslations_DataEntry_DoNotUse_class_data_.tc_table);
  return SubcategoryTranslations_DataEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 57, 2>
SubcategoryTranslations_DataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubcategoryTranslations_DataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubcategoryTranslations_DataEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::products::v1::SubcategoryTranslations_DataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .shared.v1.StringMap value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SubcategoryTranslations_DataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubcategoryTranslations_DataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(SubcategoryTranslations_DataEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .shared.v1.StringMap value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(SubcategoryTranslations_DataEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::shared::v1::StringMap>()},
  }},
  {{
    "\55\3\0\0\0\0\0\0"
    "products.v1.SubcategoryTranslations.DataEntry"
    "key"
  }},
};
// ===================================================================

class SubcategoryTranslations::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubcategoryTranslations>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubcategoryTranslations, _impl_._has_bits_);
};

void SubcategoryTranslations::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Clear();
}
SubcategoryTranslations::SubcategoryTranslations(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubcategoryTranslations_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:products.v1.SubcategoryTranslations)
}
PROTOBUF_NDEBUG_INLINE SubcategoryTranslations::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::products::v1::SubcategoryTranslations& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        attributes_{visibility, arena, from.attributes_},
        data_{visibility, arena, from.data_},
        name_(arena, from.name_) {}

SubcategoryTranslations::SubcategoryTranslations(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubcategoryTranslations& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubcategoryTranslations_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubcategoryTranslations* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:products.v1.SubcategoryTranslations)
}
PROTOBUF_NDEBUG_INLINE SubcategoryTranslations::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        attributes_{visibility, arena},
        data_{visibility, arena},
        name_(arena) {}

inline void SubcategoryTranslations::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SubcategoryTranslations::~SubcategoryTranslations() {
  // @@protoc_insertion_point(destructor:products.v1.SubcategoryTranslations)
  SharedDtor(*this);
}
inline void SubcategoryTranslations::SharedDtor(MessageLite& self) {
  SubcategoryTranslations& this_ = static_cast<SubcategoryTranslations&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubcategoryTranslations::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubcategoryTranslations(arena);
}
constexpr auto SubcategoryTranslations::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubcategoryTranslations, _impl_.attributes_) +
          decltype(SubcategoryTranslations::_impl_.attributes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubcategoryTranslations, _impl_.attributes_) +
          decltype(SubcategoryTranslations::_impl_.attributes_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubcategoryTranslations, _impl_.data_) +
          decltype(SubcategoryTranslations::_impl_.data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubcategoryTranslations, _impl_.data_) +
          decltype(SubcategoryTranslations::_impl_.data_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubcategoryTranslations), alignof(SubcategoryTranslations), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubcategoryTranslations::PlacementNew_,
                                 sizeof(SubcategoryTranslations),
                                 alignof(SubcategoryTranslations));
  }
}
constexpr auto SubcategoryTranslations::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubcategoryTranslations_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubcategoryTranslations::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubcategoryTranslations>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubcategoryTranslations::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubcategoryTranslations>(), &SubcategoryTranslations::ByteSizeLong,
              &SubcategoryTranslations::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubcategoryTranslations, _impl_._cached_size_),
          false,
      },
      &SubcategoryTranslations::kDescriptorMethods,
      &descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubcategoryTranslations_class_data_ =
        SubcategoryTranslations::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubcategoryTranslations::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubcategoryTranslations_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubcategoryTranslations_class_data_.tc_table);
  return SubcategoryTranslations_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 62, 2>
SubcategoryTranslations::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubcategoryTranslations, _impl_._has_bits_),
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubcategoryTranslations_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::products::v1::SubcategoryTranslations>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubcategoryTranslations, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(SubcategoryTranslations, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> attributes = 2 [json_name = "attributes"];
    {PROTOBUF_FIELD_OFFSET(SubcategoryTranslations, _impl_.attributes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, .shared.v1.StringMap> data = 3 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(SubcategoryTranslations, _impl_.data_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::shared::v1::StringMap>()},
  }},
  {{
    "\43\4\12\4\0\0\0\0"
    "products.v1.SubcategoryTranslations"
    "name"
    "attributes"
    "data"
  }},
};
PROTOBUF_NOINLINE void SubcategoryTranslations::Clear() {
// @@protoc_insertion_point(message_clear_start:products.v1.SubcategoryTranslations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.attributes_.Clear();
  _impl_.data_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubcategoryTranslations::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubcategoryTranslations& this_ = static_cast<const SubcategoryTranslations&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubcategoryTranslations::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubcategoryTranslations& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:products.v1.SubcategoryTranslations)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.SubcategoryTranslations.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // map<string, string> attributes = 2 [json_name = "attributes"];
  if (!this_._internal_attributes().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_attributes();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.SubcategoryTranslations.attributes");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.SubcategoryTranslations.attributes");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.SubcategoryTranslations.attributes");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.SubcategoryTranslations.attributes");
      }
    }
  }

  // map<string, .shared.v1.StringMap> data = 3 [json_name = "data"];
  if (!this_._internal_data().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::shared::v1::StringMap>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::shared::v1::StringMap,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_data();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.SubcategoryTranslations.data");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.SubcategoryTranslations.data");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:products.v1.SubcategoryTranslations)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubcategoryTranslations::ByteSizeLong(const MessageLite& base) {
  const SubcategoryTranslations& this_ = static_cast<const SubcategoryTranslations&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubcategoryTranslations::ByteSizeLong() const {
  const SubcategoryTranslations& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:products.v1.SubcategoryTranslations)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> attributes = 2 [json_name = "attributes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_attributes_size());
      for (const auto& entry : this_._internal_attributes()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<string, .shared.v1.StringMap> data = 3 [json_name = "data"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_data_size());
      for (const auto& entry : this_._internal_data()) {
        total_size += _pbi::MapEntryFuncs<std::string, ::shared::v1::StringMap,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
   {
    // string name = 1 [json_name = "name"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubcategoryTranslations::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubcategoryTranslations*>(&to_msg);
  auto& from = static_cast<const SubcategoryTranslations&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:products.v1.SubcategoryTranslations)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.attributes_.MergeFrom(from._impl_.attributes_);
  _this->_impl_.data_.MergeFrom(from._impl_.data_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_name().empty()) {
      _this->_internal_set_name(from._internal_name());
    } else {
      if (_this->_impl_.name_.IsDefault()) {
        _this->_internal_set_name("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubcategoryTranslations::CopyFrom(const SubcategoryTranslations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:products.v1.SubcategoryTranslations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubcategoryTranslations::InternalSwap(SubcategoryTranslations* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata SubcategoryTranslations::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
Subcategory_AttributesEntry_DoNotUse::Subcategory_AttributesEntry_DoNotUse()
    : SuperType(Subcategory_AttributesEntry_DoNotUse_class_data_.base()) {}
Subcategory_AttributesEntry_DoNotUse::Subcategory_AttributesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, Subcategory_AttributesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
Subcategory_AttributesEntry_DoNotUse::Subcategory_AttributesEntry_DoNotUse() : SuperType() {}
Subcategory_AttributesEntry_DoNotUse::Subcategory_AttributesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL Subcategory_AttributesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Subcategory_AttributesEntry_DoNotUse(arena);
}
constexpr auto Subcategory_AttributesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Subcategory_AttributesEntry_DoNotUse),
                                            alignof(Subcategory_AttributesEntry_DoNotUse));
}
constexpr auto Subcategory_AttributesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Subcategory_AttributesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Subcategory_AttributesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Subcategory_AttributesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Subcategory_AttributesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&Subcategory_AttributesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Subcategory_AttributesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &Subcategory_AttributesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Subcategory_AttributesEntry_DoNotUse_class_data_ =
        Subcategory_AttributesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Subcategory_AttributesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Subcategory_AttributesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Subcategory_AttributesEntry_DoNotUse_class_data_.tc_table);
  return Subcategory_AttributesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 51, 2>
Subcategory_AttributesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Subcategory_AttributesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Subcategory_AttributesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::products::v1::Subcategory_AttributesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .products.v1.SubcategoryAttribute value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Subcategory_AttributesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Subcategory_AttributesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(Subcategory_AttributesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .products.v1.SubcategoryAttribute value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Subcategory_AttributesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::products::v1::SubcategoryAttribute>()},
  }},
  {{
    "\47\3\0\0\0\0\0\0"
    "products.v1.Subcategory.AttributesEntry"
    "key"
  }},
};
// ===================================================================

class Subcategory::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Subcategory>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Subcategory, _impl_._has_bits_);
};

Subcategory::Subcategory(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Subcategory_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:products.v1.Subcategory)
}
PROTOBUF_NDEBUG_INLINE Subcategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::products::v1::Subcategory& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        attributes_{visibility, arena, from.attributes_},
        id_(arena, from.id_),
        name_(arena, from.name_),
        created_at_(arena, from.created_at_) {}

Subcategory::Subcategory(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Subcategory& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Subcategory_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Subcategory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.version_ = from._impl_.version_;

  // @@protoc_insertion_point(copy_constructor:products.v1.Subcategory)
}
PROTOBUF_NDEBUG_INLINE Subcategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        attributes_{visibility, arena},
        id_(arena),
        name_(arena),
        created_at_(arena) {}

inline void Subcategory::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.version_ = {};
}
Subcategory::~Subcategory() {
  // @@protoc_insertion_point(destructor:products.v1.Subcategory)
  SharedDtor(*this);
}
inline void Subcategory::SharedDtor(MessageLite& self) {
  Subcategory& this_ = static_cast<Subcategory&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.created_at_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Subcategory::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Subcategory(arena);
}
constexpr auto Subcategory::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Subcategory, _impl_.attributes_) +
          decltype(Subcategory::_impl_.attributes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Subcategory, _impl_.attributes_) +
          decltype(Subcategory::_impl_.attributes_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Subcategory), alignof(Subcategory), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Subcategory::PlacementNew_,
                                 sizeof(Subcategory),
                                 alignof(Subcategory));
  }
}
constexpr auto Subcategory::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Subcategory_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Subcategory::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Subcategory>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Subcategory::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Subcategory>(), &Subcategory::ByteSizeLong,
              &Subcategory::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Subcategory, _impl_._cached_size_),
          false,
      },
      &Subcategory::kDescriptorMethods,
      &descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Subcategory_class_data_ =
        Subcategory::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Subcategory::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Subcategory_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Subcategory_class_data_.tc_table);
  return Subcategory_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 2, 58, 2>
Subcategory::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Subcategory, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Subcategory_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::products::v1::Subcategory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string created_at = 4 [json_name = "createdAt"];
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(Subcategory, _impl_.created_at_)}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Subcategory, _impl_.id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Subcategory, _impl_.name_)}},
    // int32 version = 3 [json_name = "version"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Subcategory, _impl_.version_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(Subcategory, _impl_.version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Subcategory, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Subcategory, _impl_.name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 version = 3 [json_name = "version"];
    {PROTOBUF_FIELD_OFFSET(Subcategory, _impl_.version_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string created_at = 4 [json_name = "createdAt"];
    {PROTOBUF_FIELD_OFFSET(Subcategory, _impl_.created_at_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, .products.v1.SubcategoryAttribute> attributes = 5 [json_name = "attributes"];
    {PROTOBUF_FIELD_OFFSET(Subcategory, _impl_.attributes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::products::v1::SubcategoryAttribute>()},
  }},
  {{
    "\27\2\4\0\12\12\0\0"
    "products.v1.Subcategory"
    "id"
    "name"
    "created_at"
    "attributes"
  }},
};
PROTOBUF_NOINLINE void Subcategory::Clear() {
// @@protoc_insertion_point(message_clear_start:products.v1.Subcategory)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.attributes_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.created_at_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.version_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Subcategory::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Subcategory& this_ = static_cast<const Subcategory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Subcategory::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Subcategory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:products.v1.Subcategory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.Subcategory.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.Subcategory.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 version = 3 [json_name = "version"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_version() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_version(), target);
    }
  }

  // string created_at = 4 [json_name = "createdAt"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_created_at().empty()) {
      const ::std::string& _s = this_._internal_created_at();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.Subcategory.created_at");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // map<string, .products.v1.SubcategoryAttribute> attributes = 5 [json_name = "attributes"];
  if (!this_._internal_attributes().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::products::v1::SubcategoryAttribute>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::products::v1::SubcategoryAttribute,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_attributes();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.Subcategory.attributes");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.Subcategory.attributes");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:products.v1.Subcategory)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Subcategory::ByteSizeLong(const MessageLite& base) {
  const Subcategory& this_ = static_cast<const Subcategory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Subcategory::ByteSizeLong() const {
  const Subcategory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:products.v1.Subcategory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, .products.v1.SubcategoryAttribute> attributes = 5 [json_name = "attributes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_attributes_size());
      for (const auto& entry : this_._internal_attributes()) {
        total_size += _pbi::MapEntryFuncs<std::string, ::products::v1::SubcategoryAttribute,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string created_at = 4 [json_name = "createdAt"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_created_at().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_created_at());
      }
    }
    // int32 version = 3 [json_name = "version"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_version() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_version());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Subcategory::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Subcategory*>(&to_msg);
  auto& from = static_cast<const Subcategory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:products.v1.Subcategory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.attributes_.MergeFrom(from._impl_.attributes_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_created_at().empty()) {
        _this->_internal_set_created_at(from._internal_created_at());
      } else {
        if (_this->_impl_.created_at_.IsDefault()) {
          _this->_internal_set_created_at("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_version() != 0) {
        _this->_impl_.version_ = from._impl_.version_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Subcategory::CopyFrom(const Subcategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:products.v1.Subcategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Subcategory::InternalSwap(Subcategory* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_at_, &other->_impl_.created_at_, arena);
  swap(_impl_.version_, other->_impl_.version_);
}

::google::protobuf::Metadata Subcategory::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubcategoryAttribute::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubcategoryAttribute>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_._has_bits_);
};

void SubcategoryAttribute::clear_validation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.validation_ != nullptr) _impl_.validation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
SubcategoryAttribute::SubcategoryAttribute(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubcategoryAttribute_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:products.v1.SubcategoryAttribute)
}
PROTOBUF_NDEBUG_INLINE SubcategoryAttribute::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::products::v1::SubcategoryAttribute& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        string_array_{visibility, arena, from.string_array_},
        type_(arena, from.type_),
        reference_(arena, from.reference_) {}

SubcategoryAttribute::SubcategoryAttribute(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubcategoryAttribute& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubcategoryAttribute_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubcategoryAttribute* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.validation_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, required_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, required_),
           offsetof(Impl_, is_multiple_) -
               offsetof(Impl_, required_) +
               sizeof(Impl_::is_multiple_));

  // @@protoc_insertion_point(copy_constructor:products.v1.SubcategoryAttribute)
}
PROTOBUF_NDEBUG_INLINE SubcategoryAttribute::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        string_array_{visibility, arena},
        type_(arena),
        reference_(arena) {}

inline void SubcategoryAttribute::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, validation_),
           0,
           offsetof(Impl_, is_multiple_) -
               offsetof(Impl_, validation_) +
               sizeof(Impl_::is_multiple_));
}
SubcategoryAttribute::~SubcategoryAttribute() {
  // @@protoc_insertion_point(destructor:products.v1.SubcategoryAttribute)
  SharedDtor(*this);
}
inline void SubcategoryAttribute::SharedDtor(MessageLite& self) {
  SubcategoryAttribute& this_ = static_cast<SubcategoryAttribute&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.type_.Destroy();
  this_._impl_.reference_.Destroy();
  delete this_._impl_.validation_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubcategoryAttribute::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubcategoryAttribute(arena);
}
constexpr auto SubcategoryAttribute::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.string_array_) +
          decltype(SubcategoryAttribute::_impl_.string_array_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubcategoryAttribute), alignof(SubcategoryAttribute), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubcategoryAttribute::PlacementNew_,
                                 sizeof(SubcategoryAttribute),
                                 alignof(SubcategoryAttribute));
  }
}
constexpr auto SubcategoryAttribute::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubcategoryAttribute_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubcategoryAttribute::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubcategoryAttribute>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubcategoryAttribute::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubcategoryAttribute>(), &SubcategoryAttribute::ByteSizeLong,
              &SubcategoryAttribute::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_._cached_size_),
          false,
      },
      &SubcategoryAttribute::kDescriptorMethods,
      &descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubcategoryAttribute_class_data_ =
        SubcategoryAttribute::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubcategoryAttribute::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubcategoryAttribute_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubcategoryAttribute_class_data_.tc_table);
  return SubcategoryAttribute_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 66, 2>
SubcategoryAttribute::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubcategoryAttribute_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::products::v1::SubcategoryAttribute>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool required = 1 [json_name = "required"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubcategoryAttribute, _impl_.required_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.required_)}},
    // string type = 2 [json_name = "type"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.type_)}},
    // bool include_in_variants = 3 [json_name = "includeInVariants"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubcategoryAttribute, _impl_.include_in_variants_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.include_in_variants_)}},
    // optional string reference = 4 [json_name = "reference"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.reference_)}},
    // repeated string string_array = 5 [json_name = "stringArray"];
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.string_array_)}},
    // optional bool is_multiple = 6 [json_name = "isMultiple"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubcategoryAttribute, _impl_.is_multiple_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.is_multiple_)}},
    // .shared.v1.ValidationField validation = 7 [json_name = "validation"];
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.validation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool required = 1 [json_name = "required"];
    {PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.required_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string type = 2 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool include_in_variants = 3 [json_name = "includeInVariants"];
    {PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.include_in_variants_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string reference = 4 [json_name = "reference"];
    {PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.reference_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string string_array = 5 [json_name = "stringArray"];
    {PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.string_array_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // optional bool is_multiple = 6 [json_name = "isMultiple"];
    {PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.is_multiple_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .shared.v1.ValidationField validation = 7 [json_name = "validation"];
    {PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.validation_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::shared::v1::ValidationField>()},
  }},
  {{
    "\40\0\4\0\11\14\0\0"
    "products.v1.SubcategoryAttribute"
    "type"
    "reference"
    "string_array"
  }},
};
PROTOBUF_NOINLINE void SubcategoryAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:products.v1.SubcategoryAttribute)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.string_array_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.reference_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.validation_ != nullptr);
      _impl_.validation_->Clear();
    }
  }
  ::memset(&_impl_.required_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_multiple_) -
      reinterpret_cast<char*>(&_impl_.required_)) + sizeof(_impl_.is_multiple_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubcategoryAttribute::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubcategoryAttribute& this_ = static_cast<const SubcategoryAttribute&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubcategoryAttribute::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubcategoryAttribute& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:products.v1.SubcategoryAttribute)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool required = 1 [json_name = "required"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_required() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_required(), target);
    }
  }

  // string type = 2 [json_name = "type"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_type().empty()) {
      const ::std::string& _s = this_._internal_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.SubcategoryAttribute.type");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // bool include_in_variants = 3 [json_name = "includeInVariants"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_include_in_variants() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_include_in_variants(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string reference = 4 [json_name = "reference"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_reference();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.SubcategoryAttribute.reference");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // repeated string string_array = 5 [json_name = "stringArray"];
  for (int i = 0, n = this_._internal_string_array_size(); i < n; ++i) {
    const auto& s = this_._internal_string_array().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "products.v1.SubcategoryAttribute.string_array");
    target = stream->WriteString(5, s, target);
  }

  // optional bool is_multiple = 6 [json_name = "isMultiple"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this_._internal_is_multiple(), target);
  }

  // .shared.v1.ValidationField validation = 7 [json_name = "validation"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.validation_, this_._impl_.validation_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:products.v1.SubcategoryAttribute)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubcategoryAttribute::ByteSizeLong(const MessageLite& base) {
  const SubcategoryAttribute& this_ = static_cast<const SubcategoryAttribute&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubcategoryAttribute::ByteSizeLong() const {
  const SubcategoryAttribute& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:products.v1.SubcategoryAttribute)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string string_array = 5 [json_name = "stringArray"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_string_array().size());
      for (int i = 0, n = this_._internal_string_array().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_string_array().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000020u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // string type = 2 [json_name = "type"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_type());
      }
    }
    // optional string reference = 4 [json_name = "reference"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_reference());
    }
    // .shared.v1.ValidationField validation = 7 [json_name = "validation"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.validation_);
    }
    // bool required = 1 [json_name = "required"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_required() != 0) {
        total_size += 2;
      }
    }
    // bool include_in_variants = 3 [json_name = "includeInVariants"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_include_in_variants() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubcategoryAttribute::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubcategoryAttribute*>(&to_msg);
  auto& from = static_cast<const SubcategoryAttribute&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:products.v1.SubcategoryAttribute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_string_array()->MergeFrom(from._internal_string_array());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_type().empty()) {
        _this->_internal_set_type(from._internal_type());
      } else {
        if (_this->_impl_.type_.IsDefault()) {
          _this->_internal_set_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_reference(from._internal_reference());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.validation_ != nullptr);
      if (_this->_impl_.validation_ == nullptr) {
        _this->_impl_.validation_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_);
      } else {
        _this->_impl_.validation_->MergeFrom(*from._impl_.validation_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_required() != 0) {
        _this->_impl_.required_ = from._impl_.required_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_include_in_variants() != 0) {
        _this->_impl_.include_in_variants_ = from._impl_.include_in_variants_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.is_multiple_ = from._impl_.is_multiple_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubcategoryAttribute::CopyFrom(const SubcategoryAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:products.v1.SubcategoryAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubcategoryAttribute::InternalSwap(SubcategoryAttribute* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.string_array_.InternalSwap(&other->_impl_.string_array_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reference_, &other->_impl_.reference_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.is_multiple_)
      + sizeof(SubcategoryAttribute::_impl_.is_multiple_)
      - PROTOBUF_FIELD_OFFSET(SubcategoryAttribute, _impl_.validation_)>(
          reinterpret_cast<char*>(&_impl_.validation_),
          reinterpret_cast<char*>(&other->_impl_.validation_));
}

::google::protobuf::Metadata SubcategoryAttribute::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace products
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
