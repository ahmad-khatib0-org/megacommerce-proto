// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: products/v1/product_categories.proto
// Protobuf C++ Version: 6.31.1

#ifndef products_2fv1_2fproduct_5fcategories_2eproto_2epb_2eh
#define products_2fv1_2fproduct_5fcategories_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field.h"
#include "google/protobuf/unknown_field_set.h"
#include "shared/v1/types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_products_2fv1_2fproduct_5fcategories_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_products_2fv1_2fproduct_5fcategories_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto;
}  // extern "C"
namespace products {
namespace v1 {
class ProductCategories;
struct ProductCategoriesDefaultTypeInternal;
extern ProductCategoriesDefaultTypeInternal _ProductCategories_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProductCategories_class_data_;
class ProductCategory;
struct ProductCategoryDefaultTypeInternal;
extern ProductCategoryDefaultTypeInternal _ProductCategory_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProductCategory_class_data_;
class ProductSubcategory;
struct ProductSubcategoryDefaultTypeInternal;
extern ProductSubcategoryDefaultTypeInternal _ProductSubcategory_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProductSubcategory_class_data_;
class ProductSubcategoryAttribute;
struct ProductSubcategoryAttributeDefaultTypeInternal;
extern ProductSubcategoryAttributeDefaultTypeInternal _ProductSubcategoryAttribute_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProductSubcategoryAttribute_class_data_;
class ProductSubcategory_AttributesEntry_DoNotUse;
struct ProductSubcategory_AttributesEntry_DoNotUseDefaultTypeInternal;
extern ProductSubcategory_AttributesEntry_DoNotUseDefaultTypeInternal _ProductSubcategory_AttributesEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProductSubcategory_AttributesEntry_DoNotUse_class_data_;
}  // namespace v1
}  // namespace products
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace products {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class ProductSubcategoryAttribute final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:products.v1.ProductSubcategoryAttribute) */ {
 public:
  inline ProductSubcategoryAttribute() : ProductSubcategoryAttribute(nullptr) {}
  ~ProductSubcategoryAttribute() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProductSubcategoryAttribute* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProductSubcategoryAttribute));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProductSubcategoryAttribute(::google::protobuf::internal::ConstantInitialized);

  inline ProductSubcategoryAttribute(const ProductSubcategoryAttribute& from) : ProductSubcategoryAttribute(nullptr, from) {}
  inline ProductSubcategoryAttribute(ProductSubcategoryAttribute&& from) noexcept
      : ProductSubcategoryAttribute(nullptr, ::std::move(from)) {}
  inline ProductSubcategoryAttribute& operator=(const ProductSubcategoryAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductSubcategoryAttribute& operator=(ProductSubcategoryAttribute&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProductSubcategoryAttribute& default_instance() {
    return *reinterpret_cast<const ProductSubcategoryAttribute*>(
        &_ProductSubcategoryAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ProductSubcategoryAttribute& a, ProductSubcategoryAttribute& b) { a.Swap(&b); }
  inline void Swap(ProductSubcategoryAttribute* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductSubcategoryAttribute* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProductSubcategoryAttribute* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProductSubcategoryAttribute>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProductSubcategoryAttribute& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProductSubcategoryAttribute& from) { ProductSubcategoryAttribute::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProductSubcategoryAttribute* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "products.v1.ProductSubcategoryAttribute"; }

 protected:
  explicit ProductSubcategoryAttribute(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProductSubcategoryAttribute(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProductSubcategoryAttribute& from);
  ProductSubcategoryAttribute(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProductSubcategoryAttribute&& from) noexcept
      : ProductSubcategoryAttribute(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 2,
    kDataFieldNumber = 3,
    kRequiredFieldNumber = 1,
  };
  // string type = 2 [json_name = "type"];
  void clear_type() ;
  const ::std::string& type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_type();
  void set_allocated_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_type();

  public:
  // optional .shared.v1.Any data = 3 [json_name = "data"];
  bool has_data() const;
  void clear_data() ;
  const ::shared::v1::Any& data() const;
  [[nodiscard]] ::shared::v1::Any* PROTOBUF_NULLABLE release_data();
  ::shared::v1::Any* PROTOBUF_NONNULL mutable_data();
  void set_allocated_data(::shared::v1::Any* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_data(::shared::v1::Any* PROTOBUF_NULLABLE value);
  ::shared::v1::Any* PROTOBUF_NULLABLE unsafe_arena_release_data();

  private:
  const ::shared::v1::Any& _internal_data() const;
  ::shared::v1::Any* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // bool required = 1 [json_name = "required"];
  void clear_required() ;
  bool required() const;
  void set_required(bool value);

  private:
  bool _internal_required() const;
  void _internal_set_required(bool value);

  public:
  // @@protoc_insertion_point(class_scope:products.v1.ProductSubcategoryAttribute)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 52,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProductSubcategoryAttribute& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::shared::v1::Any* PROTOBUF_NULLABLE data_;
    bool required_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_products_2fv1_2fproduct_5fcategories_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProductSubcategoryAttribute_class_data_;
// -------------------------------------------------------------------

class ProductSubcategory_AttributesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ProductSubcategory_AttributesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProductSubcategory_AttributesEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit ProductSubcategory_AttributesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_ProductSubcategory_AttributesEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_products_2fv1_2fproduct_5fcategories_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 58,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull ProductSubcategory_AttributesEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class ProductSubcategory final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:products.v1.ProductSubcategory) */ {
 public:
  inline ProductSubcategory() : ProductSubcategory(nullptr) {}
  ~ProductSubcategory() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProductSubcategory* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProductSubcategory));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProductSubcategory(::google::protobuf::internal::ConstantInitialized);

  inline ProductSubcategory(const ProductSubcategory& from) : ProductSubcategory(nullptr, from) {}
  inline ProductSubcategory(ProductSubcategory&& from) noexcept
      : ProductSubcategory(nullptr, ::std::move(from)) {}
  inline ProductSubcategory& operator=(const ProductSubcategory& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductSubcategory& operator=(ProductSubcategory&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProductSubcategory& default_instance() {
    return *reinterpret_cast<const ProductSubcategory*>(
        &_ProductSubcategory_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ProductSubcategory& a, ProductSubcategory& b) { a.Swap(&b); }
  inline void Swap(ProductSubcategory* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductSubcategory* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProductSubcategory* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProductSubcategory>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProductSubcategory& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProductSubcategory& from) { ProductSubcategory::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProductSubcategory* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "products.v1.ProductSubcategory"; }

 protected:
  explicit ProductSubcategory(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProductSubcategory(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProductSubcategory& from);
  ProductSubcategory(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProductSubcategory&& from) noexcept
      : ProductSubcategory(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAttributesFieldNumber = 3,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
  };
  // map<string, .products.v1.ProductSubcategoryAttribute> attributes = 3 [json_name = "attributes"];
  int attributes_size() const;
  private:
  int _internal_attributes_size() const;

  public:
  void clear_attributes() ;
  const ::google::protobuf::Map<std::string, ::products::v1::ProductSubcategoryAttribute>& attributes() const;
  ::google::protobuf::Map<std::string, ::products::v1::ProductSubcategoryAttribute>* PROTOBUF_NONNULL mutable_attributes();

  private:
  const ::google::protobuf::Map<std::string, ::products::v1::ProductSubcategoryAttribute>& _internal_attributes() const;
  ::google::protobuf::Map<std::string, ::products::v1::ProductSubcategoryAttribute>* PROTOBUF_NONNULL _internal_mutable_attributes();

  public:
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:products.v1.ProductSubcategory)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 3,
                                   2, 55,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProductSubcategory& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<ProductSubcategory_AttributesEntry_DoNotUse, std::string, ::products::v1::ProductSubcategoryAttribute,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        attributes_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_products_2fv1_2fproduct_5fcategories_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProductSubcategory_class_data_;
// -------------------------------------------------------------------

class ProductCategory final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:products.v1.ProductCategory) */ {
 public:
  inline ProductCategory() : ProductCategory(nullptr) {}
  ~ProductCategory() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProductCategory* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProductCategory));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProductCategory(::google::protobuf::internal::ConstantInitialized);

  inline ProductCategory(const ProductCategory& from) : ProductCategory(nullptr, from) {}
  inline ProductCategory(ProductCategory&& from) noexcept
      : ProductCategory(nullptr, ::std::move(from)) {}
  inline ProductCategory& operator=(const ProductCategory& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductCategory& operator=(ProductCategory&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProductCategory& default_instance() {
    return *reinterpret_cast<const ProductCategory*>(
        &_ProductCategory_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ProductCategory& a, ProductCategory& b) { a.Swap(&b); }
  inline void Swap(ProductCategory* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductCategory* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProductCategory* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProductCategory>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProductCategory& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProductCategory& from) { ProductCategory::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProductCategory* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "products.v1.ProductCategory"; }

 protected:
  explicit ProductCategory(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProductCategory(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProductCategory& from);
  ProductCategory(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProductCategory&& from) noexcept
      : ProductCategory(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubcategoriesFieldNumber = 3,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
  };
  // repeated .products.v1.ProductSubcategory subcategories = 3 [json_name = "subcategories"];
  int subcategories_size() const;
  private:
  int _internal_subcategories_size() const;

  public:
  void clear_subcategories() ;
  ::products::v1::ProductSubcategory* PROTOBUF_NONNULL mutable_subcategories(int index);
  ::google::protobuf::RepeatedPtrField<::products::v1::ProductSubcategory>* PROTOBUF_NONNULL mutable_subcategories();

  private:
  const ::google::protobuf::RepeatedPtrField<::products::v1::ProductSubcategory>& _internal_subcategories() const;
  ::google::protobuf::RepeatedPtrField<::products::v1::ProductSubcategory>* PROTOBUF_NONNULL _internal_mutable_subcategories();
  public:
  const ::products::v1::ProductSubcategory& subcategories(int index) const;
  ::products::v1::ProductSubcategory* PROTOBUF_NONNULL add_subcategories();
  const ::google::protobuf::RepeatedPtrField<::products::v1::ProductSubcategory>& subcategories() const;
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:products.v1.ProductCategory)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 42,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProductCategory& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::products::v1::ProductSubcategory > subcategories_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_products_2fv1_2fproduct_5fcategories_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProductCategory_class_data_;
// -------------------------------------------------------------------

class ProductCategories final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:products.v1.ProductCategories) */ {
 public:
  inline ProductCategories() : ProductCategories(nullptr) {}
  ~ProductCategories() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProductCategories* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProductCategories));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProductCategories(::google::protobuf::internal::ConstantInitialized);

  inline ProductCategories(const ProductCategories& from) : ProductCategories(nullptr, from) {}
  inline ProductCategories(ProductCategories&& from) noexcept
      : ProductCategories(nullptr, ::std::move(from)) {}
  inline ProductCategories& operator=(const ProductCategories& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductCategories& operator=(ProductCategories&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProductCategories& default_instance() {
    return *reinterpret_cast<const ProductCategories*>(
        &_ProductCategories_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ProductCategories& a, ProductCategories& b) { a.Swap(&b); }
  inline void Swap(ProductCategories* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductCategories* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProductCategories* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProductCategories>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProductCategories& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProductCategories& from) { ProductCategories::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProductCategories* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "products.v1.ProductCategories"; }

 protected:
  explicit ProductCategories(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProductCategories(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProductCategories& from);
  ProductCategories(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProductCategories&& from) noexcept
      : ProductCategories(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoriesFieldNumber = 1,
  };
  // repeated .products.v1.ProductCategory categories = 1 [json_name = "categories"];
  int categories_size() const;
  private:
  int _internal_categories_size() const;

  public:
  void clear_categories() ;
  ::products::v1::ProductCategory* PROTOBUF_NONNULL mutable_categories(int index);
  ::google::protobuf::RepeatedPtrField<::products::v1::ProductCategory>* PROTOBUF_NONNULL mutable_categories();

  private:
  const ::google::protobuf::RepeatedPtrField<::products::v1::ProductCategory>& _internal_categories() const;
  ::google::protobuf::RepeatedPtrField<::products::v1::ProductCategory>* PROTOBUF_NONNULL _internal_mutable_categories();
  public:
  const ::products::v1::ProductCategory& categories(int index) const;
  ::products::v1::ProductCategory* PROTOBUF_NONNULL add_categories();
  const ::google::protobuf::RepeatedPtrField<::products::v1::ProductCategory>& categories() const;
  // @@protoc_insertion_point(class_scope:products.v1.ProductCategories)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProductCategories& from_msg);
    ::google::protobuf::RepeatedPtrField< ::products::v1::ProductCategory > categories_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_products_2fv1_2fproduct_5fcategories_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProductCategories_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ProductCategory

// string id = 1 [json_name = "id"];
inline void ProductCategory::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ProductCategory::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductCategory.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProductCategory::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.ProductCategory.id)
}
inline ::std::string* PROTOBUF_NONNULL ProductCategory::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductCategory.id)
  return _s;
}
inline const ::std::string& ProductCategory::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void ProductCategory::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProductCategory::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProductCategory::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ProductCategory.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void ProductCategory::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.ProductCategory.id)
}

// string name = 2 [json_name = "name"];
inline void ProductCategory::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ProductCategory::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductCategory.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProductCategory::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.ProductCategory.name)
}
inline ::std::string* PROTOBUF_NONNULL ProductCategory::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductCategory.name)
  return _s;
}
inline const ::std::string& ProductCategory::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ProductCategory::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProductCategory::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProductCategory::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ProductCategory.name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void ProductCategory::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.ProductCategory.name)
}

// repeated .products.v1.ProductSubcategory subcategories = 3 [json_name = "subcategories"];
inline int ProductCategory::_internal_subcategories_size() const {
  return _internal_subcategories().size();
}
inline int ProductCategory::subcategories_size() const {
  return _internal_subcategories_size();
}
inline void ProductCategory::clear_subcategories() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subcategories_.Clear();
}
inline ::products::v1::ProductSubcategory* PROTOBUF_NONNULL ProductCategory::mutable_subcategories(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:products.v1.ProductCategory.subcategories)
  return _internal_mutable_subcategories()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::products::v1::ProductSubcategory>* PROTOBUF_NONNULL ProductCategory::mutable_subcategories()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:products.v1.ProductCategory.subcategories)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_subcategories();
}
inline const ::products::v1::ProductSubcategory& ProductCategory::subcategories(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductCategory.subcategories)
  return _internal_subcategories().Get(index);
}
inline ::products::v1::ProductSubcategory* PROTOBUF_NONNULL ProductCategory::add_subcategories()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::products::v1::ProductSubcategory* _add = _internal_mutable_subcategories()->Add();
  // @@protoc_insertion_point(field_add:products.v1.ProductCategory.subcategories)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::products::v1::ProductSubcategory>& ProductCategory::subcategories() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:products.v1.ProductCategory.subcategories)
  return _internal_subcategories();
}
inline const ::google::protobuf::RepeatedPtrField<::products::v1::ProductSubcategory>&
ProductCategory::_internal_subcategories() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subcategories_;
}
inline ::google::protobuf::RepeatedPtrField<::products::v1::ProductSubcategory>* PROTOBUF_NONNULL
ProductCategory::_internal_mutable_subcategories() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.subcategories_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ProductSubcategory

// string id = 1 [json_name = "id"];
inline void ProductSubcategory::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ProductSubcategory::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductSubcategory.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProductSubcategory::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.ProductSubcategory.id)
}
inline ::std::string* PROTOBUF_NONNULL ProductSubcategory::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductSubcategory.id)
  return _s;
}
inline const ::std::string& ProductSubcategory::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void ProductSubcategory::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProductSubcategory::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProductSubcategory::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ProductSubcategory.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void ProductSubcategory::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.ProductSubcategory.id)
}

// string name = 2 [json_name = "name"];
inline void ProductSubcategory::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ProductSubcategory::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductSubcategory.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProductSubcategory::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.ProductSubcategory.name)
}
inline ::std::string* PROTOBUF_NONNULL ProductSubcategory::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductSubcategory.name)
  return _s;
}
inline const ::std::string& ProductSubcategory::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ProductSubcategory::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProductSubcategory::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProductSubcategory::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ProductSubcategory.name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void ProductSubcategory::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.ProductSubcategory.name)
}

// map<string, .products.v1.ProductSubcategoryAttribute> attributes = 3 [json_name = "attributes"];
inline int ProductSubcategory::_internal_attributes_size() const {
  return _internal_attributes().size();
}
inline int ProductSubcategory::attributes_size() const {
  return _internal_attributes_size();
}
inline void ProductSubcategory::clear_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributes_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::products::v1::ProductSubcategoryAttribute>& ProductSubcategory::_internal_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributes_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::products::v1::ProductSubcategoryAttribute>& ProductSubcategory::attributes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:products.v1.ProductSubcategory.attributes)
  return _internal_attributes();
}
inline ::google::protobuf::Map<std::string, ::products::v1::ProductSubcategoryAttribute>* PROTOBUF_NONNULL ProductSubcategory::_internal_mutable_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.attributes_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::products::v1::ProductSubcategoryAttribute>* PROTOBUF_NONNULL ProductSubcategory::mutable_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:products.v1.ProductSubcategory.attributes)
  return _internal_mutable_attributes();
}

// -------------------------------------------------------------------

// ProductSubcategoryAttribute

// bool required = 1 [json_name = "required"];
inline void ProductSubcategoryAttribute::clear_required() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool ProductSubcategoryAttribute::required() const {
  // @@protoc_insertion_point(field_get:products.v1.ProductSubcategoryAttribute.required)
  return _internal_required();
}
inline void ProductSubcategoryAttribute::set_required(bool value) {
  _internal_set_required(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:products.v1.ProductSubcategoryAttribute.required)
}
inline bool ProductSubcategoryAttribute::_internal_required() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.required_;
}
inline void ProductSubcategoryAttribute::_internal_set_required(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_ = value;
}

// string type = 2 [json_name = "type"];
inline void ProductSubcategoryAttribute::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ProductSubcategoryAttribute::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductSubcategoryAttribute.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProductSubcategoryAttribute::set_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.ProductSubcategoryAttribute.type)
}
inline ::std::string* PROTOBUF_NONNULL ProductSubcategoryAttribute::mutable_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductSubcategoryAttribute.type)
  return _s;
}
inline const ::std::string& ProductSubcategoryAttribute::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void ProductSubcategoryAttribute::_internal_set_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProductSubcategoryAttribute::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProductSubcategoryAttribute::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ProductSubcategoryAttribute.type)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.type_.Set("", GetArena());
  }
  return released;
}
inline void ProductSubcategoryAttribute::set_allocated_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.ProductSubcategoryAttribute.type)
}

// optional .shared.v1.Any data = 3 [json_name = "data"];
inline bool ProductSubcategoryAttribute::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_ != nullptr);
  return value;
}
inline const ::shared::v1::Any& ProductSubcategoryAttribute::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::shared::v1::Any* p = _impl_.data_;
  return p != nullptr ? *p : reinterpret_cast<const ::shared::v1::Any&>(::shared::v1::_Any_default_instance_);
}
inline const ::shared::v1::Any& ProductSubcategoryAttribute::data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductSubcategoryAttribute.data)
  return _internal_data();
}
inline void ProductSubcategoryAttribute::unsafe_arena_set_allocated_data(
    ::shared::v1::Any* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_);
  }
  _impl_.data_ = reinterpret_cast<::shared::v1::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:products.v1.ProductSubcategoryAttribute.data)
}
inline ::shared::v1::Any* PROTOBUF_NULLABLE ProductSubcategoryAttribute::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::shared::v1::Any* released = _impl_.data_;
  _impl_.data_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::shared::v1::Any* PROTOBUF_NULLABLE ProductSubcategoryAttribute::unsafe_arena_release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ProductSubcategoryAttribute.data)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::shared::v1::Any* temp = _impl_.data_;
  _impl_.data_ = nullptr;
  return temp;
}
inline ::shared::v1::Any* PROTOBUF_NONNULL ProductSubcategoryAttribute::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.data_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::shared::v1::Any>(GetArena());
    _impl_.data_ = reinterpret_cast<::shared::v1::Any*>(p);
  }
  return _impl_.data_;
}
inline ::shared::v1::Any* PROTOBUF_NONNULL ProductSubcategoryAttribute::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::shared::v1::Any* _msg = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductSubcategoryAttribute.data)
  return _msg;
}
inline void ProductSubcategoryAttribute::set_allocated_data(::shared::v1::Any* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.data_ = reinterpret_cast<::shared::v1::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:products.v1.ProductSubcategoryAttribute.data)
}

// -------------------------------------------------------------------

// ProductCategories

// repeated .products.v1.ProductCategory categories = 1 [json_name = "categories"];
inline int ProductCategories::_internal_categories_size() const {
  return _internal_categories().size();
}
inline int ProductCategories::categories_size() const {
  return _internal_categories_size();
}
inline void ProductCategories::clear_categories() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.categories_.Clear();
}
inline ::products::v1::ProductCategory* PROTOBUF_NONNULL ProductCategories::mutable_categories(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:products.v1.ProductCategories.categories)
  return _internal_mutable_categories()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::products::v1::ProductCategory>* PROTOBUF_NONNULL ProductCategories::mutable_categories()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:products.v1.ProductCategories.categories)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_categories();
}
inline const ::products::v1::ProductCategory& ProductCategories::categories(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductCategories.categories)
  return _internal_categories().Get(index);
}
inline ::products::v1::ProductCategory* PROTOBUF_NONNULL ProductCategories::add_categories()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::products::v1::ProductCategory* _add = _internal_mutable_categories()->Add();
  // @@protoc_insertion_point(field_add:products.v1.ProductCategories.categories)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::products::v1::ProductCategory>& ProductCategories::categories() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:products.v1.ProductCategories.categories)
  return _internal_categories();
}
inline const ::google::protobuf::RepeatedPtrField<::products::v1::ProductCategory>&
ProductCategories::_internal_categories() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.categories_;
}
inline ::google::protobuf::RepeatedPtrField<::products::v1::ProductCategory>* PROTOBUF_NONNULL
ProductCategories::_internal_mutable_categories() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.categories_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace products


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // products_2fv1_2fproduct_5fcategories_2eproto_2epb_2eh
