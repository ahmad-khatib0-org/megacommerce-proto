// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: products/v1/product_categories.proto
// Protobuf C++ Version: 6.31.1

#ifndef products_2fv1_2fproduct_5fcategories_2eproto_2epb_2eh
#define products_2fv1_2fproduct_5fcategories_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field.h"
#include "google/protobuf/unknown_field_set.h"
#include "shared/v1/types.pb.h"
#include "shared/v1/validation.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_products_2fv1_2fproduct_5fcategories_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_products_2fv1_2fproduct_5fcategories_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_products_2fv1_2fproduct_5fcategories_2eproto;
}  // extern "C"
namespace products {
namespace v1 {
class Category;
struct CategoryDefaultTypeInternal;
extern CategoryDefaultTypeInternal _Category_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Category_class_data_;
class CategoryTranslations;
struct CategoryTranslationsDefaultTypeInternal;
extern CategoryTranslationsDefaultTypeInternal _CategoryTranslations_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CategoryTranslations_class_data_;
class CategoryTranslations_SubcategoriesEntry_DoNotUse;
struct CategoryTranslations_SubcategoriesEntry_DoNotUseDefaultTypeInternal;
extern CategoryTranslations_SubcategoriesEntry_DoNotUseDefaultTypeInternal _CategoryTranslations_SubcategoriesEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CategoryTranslations_SubcategoriesEntry_DoNotUse_class_data_;
class Subcategory;
struct SubcategoryDefaultTypeInternal;
extern SubcategoryDefaultTypeInternal _Subcategory_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Subcategory_class_data_;
class SubcategoryAttribute;
struct SubcategoryAttributeDefaultTypeInternal;
extern SubcategoryAttributeDefaultTypeInternal _SubcategoryAttribute_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubcategoryAttribute_class_data_;
class SubcategoryTranslations;
struct SubcategoryTranslationsDefaultTypeInternal;
extern SubcategoryTranslationsDefaultTypeInternal _SubcategoryTranslations_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubcategoryTranslations_class_data_;
class SubcategoryTranslations_AttributesEntry_DoNotUse;
struct SubcategoryTranslations_AttributesEntry_DoNotUseDefaultTypeInternal;
extern SubcategoryTranslations_AttributesEntry_DoNotUseDefaultTypeInternal _SubcategoryTranslations_AttributesEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubcategoryTranslations_AttributesEntry_DoNotUse_class_data_;
class SubcategoryTranslations_DataEntry_DoNotUse;
struct SubcategoryTranslations_DataEntry_DoNotUseDefaultTypeInternal;
extern SubcategoryTranslations_DataEntry_DoNotUseDefaultTypeInternal _SubcategoryTranslations_DataEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubcategoryTranslations_DataEntry_DoNotUse_class_data_;
class Subcategory_AttributesEntry_DoNotUse;
struct Subcategory_AttributesEntry_DoNotUseDefaultTypeInternal;
extern Subcategory_AttributesEntry_DoNotUseDefaultTypeInternal _Subcategory_AttributesEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Subcategory_AttributesEntry_DoNotUse_class_data_;
}  // namespace v1
}  // namespace products
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace products {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class SubcategoryTranslations_AttributesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  SubcategoryTranslations_AttributesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubcategoryTranslations_AttributesEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit SubcategoryTranslations_AttributesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_SubcategoryTranslations_AttributesEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_products_2fv1_2fproduct_5fcategories_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 68,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull SubcategoryTranslations_AttributesEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class SubcategoryTranslations_DataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  SubcategoryTranslations_DataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubcategoryTranslations_DataEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit SubcategoryTranslations_DataEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_SubcategoryTranslations_DataEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_products_2fv1_2fproduct_5fcategories_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 57,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull SubcategoryTranslations_DataEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class SubcategoryTranslations final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:products.v1.SubcategoryTranslations) */ {
 public:
  inline SubcategoryTranslations() : SubcategoryTranslations(nullptr) {}
  ~SubcategoryTranslations() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubcategoryTranslations* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubcategoryTranslations));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubcategoryTranslations(::google::protobuf::internal::ConstantInitialized);

  inline SubcategoryTranslations(const SubcategoryTranslations& from) : SubcategoryTranslations(nullptr, from) {}
  inline SubcategoryTranslations(SubcategoryTranslations&& from) noexcept
      : SubcategoryTranslations(nullptr, ::std::move(from)) {}
  inline SubcategoryTranslations& operator=(const SubcategoryTranslations& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubcategoryTranslations& operator=(SubcategoryTranslations&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubcategoryTranslations& default_instance() {
    return *reinterpret_cast<const SubcategoryTranslations*>(
        &_SubcategoryTranslations_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SubcategoryTranslations& a, SubcategoryTranslations& b) { a.Swap(&b); }
  inline void Swap(SubcategoryTranslations* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubcategoryTranslations* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubcategoryTranslations* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubcategoryTranslations>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubcategoryTranslations& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubcategoryTranslations& from) { SubcategoryTranslations::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubcategoryTranslations* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "products.v1.SubcategoryTranslations"; }

 protected:
  explicit SubcategoryTranslations(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubcategoryTranslations(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubcategoryTranslations& from);
  SubcategoryTranslations(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubcategoryTranslations&& from) noexcept
      : SubcategoryTranslations(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAttributesFieldNumber = 2,
    kDataFieldNumber = 3,
    kNameFieldNumber = 1,
  };
  // map<string, string> attributes = 2 [json_name = "attributes"];
  int attributes_size() const;
  private:
  int _internal_attributes_size() const;

  public:
  void clear_attributes() ;
  const ::google::protobuf::Map<std::string, std::string>& attributes() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_attributes();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_attributes() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_attributes();

  public:
  // map<string, .shared.v1.StringArray> data = 3 [json_name = "data"];
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  const ::google::protobuf::Map<std::string, ::shared::v1::StringArray>& data() const;
  ::google::protobuf::Map<std::string, ::shared::v1::StringArray>* PROTOBUF_NONNULL mutable_data();

  private:
  const ::google::protobuf::Map<std::string, ::shared::v1::StringArray>& _internal_data() const;
  ::google::protobuf::Map<std::string, ::shared::v1::StringArray>* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:products.v1.SubcategoryTranslations)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 3,
                                   3, 62,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubcategoryTranslations& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<SubcategoryTranslations_AttributesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        attributes_;
    ::google::protobuf::internal::MapField<SubcategoryTranslations_DataEntry_DoNotUse, std::string, ::shared::v1::StringArray,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        data_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_products_2fv1_2fproduct_5fcategories_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubcategoryTranslations_class_data_;
// -------------------------------------------------------------------

class SubcategoryAttribute final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:products.v1.SubcategoryAttribute) */ {
 public:
  inline SubcategoryAttribute() : SubcategoryAttribute(nullptr) {}
  ~SubcategoryAttribute() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubcategoryAttribute* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubcategoryAttribute));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubcategoryAttribute(::google::protobuf::internal::ConstantInitialized);

  inline SubcategoryAttribute(const SubcategoryAttribute& from) : SubcategoryAttribute(nullptr, from) {}
  inline SubcategoryAttribute(SubcategoryAttribute&& from) noexcept
      : SubcategoryAttribute(nullptr, ::std::move(from)) {}
  inline SubcategoryAttribute& operator=(const SubcategoryAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubcategoryAttribute& operator=(SubcategoryAttribute&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubcategoryAttribute& default_instance() {
    return *reinterpret_cast<const SubcategoryAttribute*>(
        &_SubcategoryAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SubcategoryAttribute& a, SubcategoryAttribute& b) { a.Swap(&b); }
  inline void Swap(SubcategoryAttribute* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubcategoryAttribute* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubcategoryAttribute* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubcategoryAttribute>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubcategoryAttribute& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubcategoryAttribute& from) { SubcategoryAttribute::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubcategoryAttribute* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "products.v1.SubcategoryAttribute"; }

 protected:
  explicit SubcategoryAttribute(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubcategoryAttribute(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubcategoryAttribute& from);
  SubcategoryAttribute(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubcategoryAttribute&& from) noexcept
      : SubcategoryAttribute(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStringArrayFieldNumber = 4,
    kTypeFieldNumber = 2,
    kReferenceFieldNumber = 3,
    kValidationFieldNumber = 6,
    kRequiredFieldNumber = 1,
    kIsMultipleFieldNumber = 5,
  };
  // repeated string string_array = 4 [json_name = "stringArray"];
  int string_array_size() const;
  private:
  int _internal_string_array_size() const;

  public:
  void clear_string_array() ;
  const ::std::string& string_array(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_string_array(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_string_array(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_string_array();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_string_array(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& string_array() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_string_array();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_string_array() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_string_array();

  public:
  // string type = 2 [json_name = "type"];
  void clear_type() ;
  const ::std::string& type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_type();
  void set_allocated_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_type();

  public:
  // optional string reference = 3 [json_name = "reference"];
  bool has_reference() const;
  void clear_reference() ;
  const ::std::string& reference() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_reference(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_reference();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_reference();
  void set_allocated_reference(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_reference() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_reference(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_reference();

  public:
  // .shared.v1.ValidationField validation = 6 [json_name = "validation"];
  bool has_validation() const;
  void clear_validation() ;
  const ::shared::v1::ValidationField& validation() const;
  [[nodiscard]] ::shared::v1::ValidationField* PROTOBUF_NULLABLE release_validation();
  ::shared::v1::ValidationField* PROTOBUF_NONNULL mutable_validation();
  void set_allocated_validation(::shared::v1::ValidationField* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_validation(::shared::v1::ValidationField* PROTOBUF_NULLABLE value);
  ::shared::v1::ValidationField* PROTOBUF_NULLABLE unsafe_arena_release_validation();

  private:
  const ::shared::v1::ValidationField& _internal_validation() const;
  ::shared::v1::ValidationField* PROTOBUF_NONNULL _internal_mutable_validation();

  public:
  // bool required = 1 [json_name = "required"];
  void clear_required() ;
  bool required() const;
  void set_required(bool value);

  private:
  bool _internal_required() const;
  void _internal_set_required(bool value);

  public:
  // optional bool is_multiple = 5 [json_name = "isMultiple"];
  bool has_is_multiple() const;
  void clear_is_multiple() ;
  bool is_multiple() const;
  void set_is_multiple(bool value);

  private:
  bool _internal_is_multiple() const;
  void _internal_set_is_multiple(bool value);

  public:
  // @@protoc_insertion_point(class_scope:products.v1.SubcategoryAttribute)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 66,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubcategoryAttribute& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> string_array_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr reference_;
    ::shared::v1::ValidationField* PROTOBUF_NULLABLE validation_;
    bool required_;
    bool is_multiple_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_products_2fv1_2fproduct_5fcategories_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubcategoryAttribute_class_data_;
// -------------------------------------------------------------------

class CategoryTranslations_SubcategoriesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  CategoryTranslations_SubcategoriesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CategoryTranslations_SubcategoriesEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit CategoryTranslations_SubcategoriesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_CategoryTranslations_SubcategoriesEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_products_2fv1_2fproduct_5fcategories_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 63,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull CategoryTranslations_SubcategoriesEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class Subcategory_AttributesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  Subcategory_AttributesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Subcategory_AttributesEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit Subcategory_AttributesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_Subcategory_AttributesEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_products_2fv1_2fproduct_5fcategories_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 51,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull Subcategory_AttributesEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class CategoryTranslations final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:products.v1.CategoryTranslations) */ {
 public:
  inline CategoryTranslations() : CategoryTranslations(nullptr) {}
  ~CategoryTranslations() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CategoryTranslations* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CategoryTranslations));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CategoryTranslations(::google::protobuf::internal::ConstantInitialized);

  inline CategoryTranslations(const CategoryTranslations& from) : CategoryTranslations(nullptr, from) {}
  inline CategoryTranslations(CategoryTranslations&& from) noexcept
      : CategoryTranslations(nullptr, ::std::move(from)) {}
  inline CategoryTranslations& operator=(const CategoryTranslations& from) {
    CopyFrom(from);
    return *this;
  }
  inline CategoryTranslations& operator=(CategoryTranslations&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CategoryTranslations& default_instance() {
    return *reinterpret_cast<const CategoryTranslations*>(
        &_CategoryTranslations_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CategoryTranslations& a, CategoryTranslations& b) { a.Swap(&b); }
  inline void Swap(CategoryTranslations* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CategoryTranslations* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CategoryTranslations* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CategoryTranslations>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CategoryTranslations& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CategoryTranslations& from) { CategoryTranslations::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CategoryTranslations* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "products.v1.CategoryTranslations"; }

 protected:
  explicit CategoryTranslations(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CategoryTranslations(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CategoryTranslations& from);
  CategoryTranslations(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CategoryTranslations&& from) noexcept
      : CategoryTranslations(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubcategoriesFieldNumber = 4,
    kNameFieldNumber = 1,
    kLanguageFieldNumber = 2,
    kVersionFieldNumber = 3,
  };
  // map<string, .products.v1.SubcategoryTranslations> subcategories = 4 [json_name = "subcategories"];
  int subcategories_size() const;
  private:
  int _internal_subcategories_size() const;

  public:
  void clear_subcategories() ;
  const ::google::protobuf::Map<std::string, ::products::v1::SubcategoryTranslations>& subcategories() const;
  ::google::protobuf::Map<std::string, ::products::v1::SubcategoryTranslations>* PROTOBUF_NONNULL mutable_subcategories();

  private:
  const ::google::protobuf::Map<std::string, ::products::v1::SubcategoryTranslations>& _internal_subcategories() const;
  ::google::protobuf::Map<std::string, ::products::v1::SubcategoryTranslations>* PROTOBUF_NONNULL _internal_mutable_subcategories();

  public:
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string language = 2 [json_name = "language"];
  void clear_language() ;
  const ::std::string& language() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_language(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_language();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_language();
  void set_allocated_language(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_language() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_language(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_language();

  public:
  // int32 version = 3 [json_name = "version"];
  void clear_version() ;
  ::int32_t version() const;
  void set_version(::int32_t value);

  private:
  ::int32_t _internal_version() const;
  void _internal_set_version(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:products.v1.CategoryTranslations)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   2, 66,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CategoryTranslations& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<CategoryTranslations_SubcategoriesEntry_DoNotUse, std::string, ::products::v1::SubcategoryTranslations,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        subcategories_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr language_;
    ::int32_t version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_products_2fv1_2fproduct_5fcategories_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CategoryTranslations_class_data_;
// -------------------------------------------------------------------

class Subcategory final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:products.v1.Subcategory) */ {
 public:
  inline Subcategory() : Subcategory(nullptr) {}
  ~Subcategory() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Subcategory* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Subcategory));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Subcategory(::google::protobuf::internal::ConstantInitialized);

  inline Subcategory(const Subcategory& from) : Subcategory(nullptr, from) {}
  inline Subcategory(Subcategory&& from) noexcept
      : Subcategory(nullptr, ::std::move(from)) {}
  inline Subcategory& operator=(const Subcategory& from) {
    CopyFrom(from);
    return *this;
  }
  inline Subcategory& operator=(Subcategory&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Subcategory& default_instance() {
    return *reinterpret_cast<const Subcategory*>(
        &_Subcategory_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(Subcategory& a, Subcategory& b) { a.Swap(&b); }
  inline void Swap(Subcategory* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Subcategory* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Subcategory* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Subcategory>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Subcategory& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Subcategory& from) { Subcategory::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Subcategory* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "products.v1.Subcategory"; }

 protected:
  explicit Subcategory(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Subcategory(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Subcategory& from);
  Subcategory(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Subcategory&& from) noexcept
      : Subcategory(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAttributesFieldNumber = 5,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kCreatedAtFieldNumber = 4,
    kVersionFieldNumber = 3,
  };
  // map<string, .products.v1.SubcategoryAttribute> attributes = 5 [json_name = "attributes"];
  int attributes_size() const;
  private:
  int _internal_attributes_size() const;

  public:
  void clear_attributes() ;
  const ::google::protobuf::Map<std::string, ::products::v1::SubcategoryAttribute>& attributes() const;
  ::google::protobuf::Map<std::string, ::products::v1::SubcategoryAttribute>* PROTOBUF_NONNULL mutable_attributes();

  private:
  const ::google::protobuf::Map<std::string, ::products::v1::SubcategoryAttribute>& _internal_attributes() const;
  ::google::protobuf::Map<std::string, ::products::v1::SubcategoryAttribute>* PROTOBUF_NONNULL _internal_mutable_attributes();

  public:
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string created_at = 4 [json_name = "createdAt"];
  void clear_created_at() ;
  const ::std::string& created_at() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_created_at();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_created_at();
  void set_allocated_created_at(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_created_at() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_created_at();

  public:
  // int32 version = 3 [json_name = "version"];
  void clear_version() ;
  ::int32_t version() const;
  void set_version(::int32_t value);

  private:
  ::int32_t _internal_version() const;
  void _internal_set_version(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:products.v1.Subcategory)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 5,
                                   2, 58,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Subcategory& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<Subcategory_AttributesEntry_DoNotUse, std::string, ::products::v1::SubcategoryAttribute,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        attributes_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::int32_t version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_products_2fv1_2fproduct_5fcategories_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Subcategory_class_data_;
// -------------------------------------------------------------------

class Category final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:products.v1.Category) */ {
 public:
  inline Category() : Category(nullptr) {}
  ~Category() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Category* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Category));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Category(::google::protobuf::internal::ConstantInitialized);

  inline Category(const Category& from) : Category(nullptr, from) {}
  inline Category(Category&& from) noexcept
      : Category(nullptr, ::std::move(from)) {}
  inline Category& operator=(const Category& from) {
    CopyFrom(from);
    return *this;
  }
  inline Category& operator=(Category&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Category& default_instance() {
    return *reinterpret_cast<const Category*>(
        &_Category_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Category& a, Category& b) { a.Swap(&b); }
  inline void Swap(Category* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Category* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Category* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Category>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Category& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Category& from) { Category::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Category* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "products.v1.Category"; }

 protected:
  explicit Category(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Category(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Category& from);
  Category(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Category&& from) noexcept
      : Category(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTranslationsFieldNumber = 4,
    kSubcategoriesFieldNumber = 5,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kImageFieldNumber = 3,
  };
  // repeated .products.v1.CategoryTranslations translations = 4 [json_name = "translations"];
  int translations_size() const;
  private:
  int _internal_translations_size() const;

  public:
  void clear_translations() ;
  ::products::v1::CategoryTranslations* PROTOBUF_NONNULL mutable_translations(int index);
  ::google::protobuf::RepeatedPtrField<::products::v1::CategoryTranslations>* PROTOBUF_NONNULL mutable_translations();

  private:
  const ::google::protobuf::RepeatedPtrField<::products::v1::CategoryTranslations>& _internal_translations() const;
  ::google::protobuf::RepeatedPtrField<::products::v1::CategoryTranslations>* PROTOBUF_NONNULL _internal_mutable_translations();
  public:
  const ::products::v1::CategoryTranslations& translations(int index) const;
  ::products::v1::CategoryTranslations* PROTOBUF_NONNULL add_translations();
  const ::google::protobuf::RepeatedPtrField<::products::v1::CategoryTranslations>& translations() const;
  // repeated .products.v1.Subcategory subcategories = 5 [json_name = "subcategories"];
  int subcategories_size() const;
  private:
  int _internal_subcategories_size() const;

  public:
  void clear_subcategories() ;
  ::products::v1::Subcategory* PROTOBUF_NONNULL mutable_subcategories(int index);
  ::google::protobuf::RepeatedPtrField<::products::v1::Subcategory>* PROTOBUF_NONNULL mutable_subcategories();

  private:
  const ::google::protobuf::RepeatedPtrField<::products::v1::Subcategory>& _internal_subcategories() const;
  ::google::protobuf::RepeatedPtrField<::products::v1::Subcategory>* PROTOBUF_NONNULL _internal_mutable_subcategories();
  public:
  const ::products::v1::Subcategory& subcategories(int index) const;
  ::products::v1::Subcategory* PROTOBUF_NONNULL add_subcategories();
  const ::google::protobuf::RepeatedPtrField<::products::v1::Subcategory>& subcategories() const;
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string image = 3 [json_name = "image"];
  void clear_image() ;
  const ::std::string& image() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_image(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_image();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_image();
  void set_allocated_image(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_image() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_image(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_image();

  public:
  // @@protoc_insertion_point(class_scope:products.v1.Category)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   2, 40,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Category& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::products::v1::CategoryTranslations > translations_;
    ::google::protobuf::RepeatedPtrField< ::products::v1::Subcategory > subcategories_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr image_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_products_2fv1_2fproduct_5fcategories_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Category_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Category

// string id = 1 [json_name = "id"];
inline void Category::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Category::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Category.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Category::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.Category.id)
}
inline ::std::string* PROTOBUF_NONNULL Category::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:products.v1.Category.id)
  return _s;
}
inline const ::std::string& Category::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Category::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Category::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Category::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.Category.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void Category::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.Category.id)
}

// string name = 2 [json_name = "name"];
inline void Category::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Category::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Category.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Category::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.Category.name)
}
inline ::std::string* PROTOBUF_NONNULL Category::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:products.v1.Category.name)
  return _s;
}
inline const ::std::string& Category::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Category::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Category::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Category::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.Category.name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Category::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.Category.name)
}

// string image = 3 [json_name = "image"];
inline void Category::clear_image() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& Category::image() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Category.image)
  return _internal_image();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Category::set_image(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.image_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.Category.image)
}
inline ::std::string* PROTOBUF_NONNULL Category::mutable_image()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_image();
  // @@protoc_insertion_point(field_mutable:products.v1.Category.image)
  return _s;
}
inline const ::std::string& Category::_internal_image() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.image_.Get();
}
inline void Category::_internal_set_image(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.image_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Category::_internal_mutable_image() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.image_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Category::release_image() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.Category.image)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.image_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.image_.Set("", GetArena());
  }
  return released;
}
inline void Category::set_allocated_image(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.image_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.image_.IsDefault()) {
    _impl_.image_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.Category.image)
}

// repeated .products.v1.CategoryTranslations translations = 4 [json_name = "translations"];
inline int Category::_internal_translations_size() const {
  return _internal_translations().size();
}
inline int Category::translations_size() const {
  return _internal_translations_size();
}
inline void Category::clear_translations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.translations_.Clear();
}
inline ::products::v1::CategoryTranslations* PROTOBUF_NONNULL Category::mutable_translations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:products.v1.Category.translations)
  return _internal_mutable_translations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::products::v1::CategoryTranslations>* PROTOBUF_NONNULL Category::mutable_translations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:products.v1.Category.translations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_translations();
}
inline const ::products::v1::CategoryTranslations& Category::translations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Category.translations)
  return _internal_translations().Get(index);
}
inline ::products::v1::CategoryTranslations* PROTOBUF_NONNULL Category::add_translations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::products::v1::CategoryTranslations* _add = _internal_mutable_translations()->Add();
  // @@protoc_insertion_point(field_add:products.v1.Category.translations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::products::v1::CategoryTranslations>& Category::translations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:products.v1.Category.translations)
  return _internal_translations();
}
inline const ::google::protobuf::RepeatedPtrField<::products::v1::CategoryTranslations>&
Category::_internal_translations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.translations_;
}
inline ::google::protobuf::RepeatedPtrField<::products::v1::CategoryTranslations>* PROTOBUF_NONNULL
Category::_internal_mutable_translations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.translations_;
}

// repeated .products.v1.Subcategory subcategories = 5 [json_name = "subcategories"];
inline int Category::_internal_subcategories_size() const {
  return _internal_subcategories().size();
}
inline int Category::subcategories_size() const {
  return _internal_subcategories_size();
}
inline void Category::clear_subcategories() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subcategories_.Clear();
}
inline ::products::v1::Subcategory* PROTOBUF_NONNULL Category::mutable_subcategories(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:products.v1.Category.subcategories)
  return _internal_mutable_subcategories()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::products::v1::Subcategory>* PROTOBUF_NONNULL Category::mutable_subcategories()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:products.v1.Category.subcategories)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_subcategories();
}
inline const ::products::v1::Subcategory& Category::subcategories(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Category.subcategories)
  return _internal_subcategories().Get(index);
}
inline ::products::v1::Subcategory* PROTOBUF_NONNULL Category::add_subcategories()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::products::v1::Subcategory* _add = _internal_mutable_subcategories()->Add();
  // @@protoc_insertion_point(field_add:products.v1.Category.subcategories)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::products::v1::Subcategory>& Category::subcategories() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:products.v1.Category.subcategories)
  return _internal_subcategories();
}
inline const ::google::protobuf::RepeatedPtrField<::products::v1::Subcategory>&
Category::_internal_subcategories() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subcategories_;
}
inline ::google::protobuf::RepeatedPtrField<::products::v1::Subcategory>* PROTOBUF_NONNULL
Category::_internal_mutable_subcategories() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.subcategories_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CategoryTranslations

// string name = 1 [json_name = "name"];
inline void CategoryTranslations::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CategoryTranslations::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.CategoryTranslations.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CategoryTranslations::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.CategoryTranslations.name)
}
inline ::std::string* PROTOBUF_NONNULL CategoryTranslations::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:products.v1.CategoryTranslations.name)
  return _s;
}
inline const ::std::string& CategoryTranslations::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void CategoryTranslations::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CategoryTranslations::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CategoryTranslations::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.CategoryTranslations.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void CategoryTranslations::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.CategoryTranslations.name)
}

// string language = 2 [json_name = "language"];
inline void CategoryTranslations::clear_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.language_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CategoryTranslations::language() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.CategoryTranslations.language)
  return _internal_language();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CategoryTranslations::set_language(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.language_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.CategoryTranslations.language)
}
inline ::std::string* PROTOBUF_NONNULL CategoryTranslations::mutable_language()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_language();
  // @@protoc_insertion_point(field_mutable:products.v1.CategoryTranslations.language)
  return _s;
}
inline const ::std::string& CategoryTranslations::_internal_language() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.language_.Get();
}
inline void CategoryTranslations::_internal_set_language(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.language_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CategoryTranslations::_internal_mutable_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.language_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CategoryTranslations::release_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.CategoryTranslations.language)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.language_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.language_.Set("", GetArena());
  }
  return released;
}
inline void CategoryTranslations::set_allocated_language(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.language_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.language_.IsDefault()) {
    _impl_.language_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.CategoryTranslations.language)
}

// int32 version = 3 [json_name = "version"];
inline void CategoryTranslations::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t CategoryTranslations::version() const {
  // @@protoc_insertion_point(field_get:products.v1.CategoryTranslations.version)
  return _internal_version();
}
inline void CategoryTranslations::set_version(::int32_t value) {
  _internal_set_version(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:products.v1.CategoryTranslations.version)
}
inline ::int32_t CategoryTranslations::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void CategoryTranslations::_internal_set_version(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// map<string, .products.v1.SubcategoryTranslations> subcategories = 4 [json_name = "subcategories"];
inline int CategoryTranslations::_internal_subcategories_size() const {
  return _internal_subcategories().size();
}
inline int CategoryTranslations::subcategories_size() const {
  return _internal_subcategories_size();
}
inline void CategoryTranslations::clear_subcategories() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subcategories_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::products::v1::SubcategoryTranslations>& CategoryTranslations::_internal_subcategories() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subcategories_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::products::v1::SubcategoryTranslations>& CategoryTranslations::subcategories() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:products.v1.CategoryTranslations.subcategories)
  return _internal_subcategories();
}
inline ::google::protobuf::Map<std::string, ::products::v1::SubcategoryTranslations>* PROTOBUF_NONNULL CategoryTranslations::_internal_mutable_subcategories() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.subcategories_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::products::v1::SubcategoryTranslations>* PROTOBUF_NONNULL CategoryTranslations::mutable_subcategories()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:products.v1.CategoryTranslations.subcategories)
  return _internal_mutable_subcategories();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SubcategoryTranslations

// string name = 1 [json_name = "name"];
inline void SubcategoryTranslations::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SubcategoryTranslations::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.SubcategoryTranslations.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SubcategoryTranslations::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.SubcategoryTranslations.name)
}
inline ::std::string* PROTOBUF_NONNULL SubcategoryTranslations::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:products.v1.SubcategoryTranslations.name)
  return _s;
}
inline const ::std::string& SubcategoryTranslations::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void SubcategoryTranslations::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SubcategoryTranslations::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SubcategoryTranslations::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.SubcategoryTranslations.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void SubcategoryTranslations::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.SubcategoryTranslations.name)
}

// map<string, string> attributes = 2 [json_name = "attributes"];
inline int SubcategoryTranslations::_internal_attributes_size() const {
  return _internal_attributes().size();
}
inline int SubcategoryTranslations::attributes_size() const {
  return _internal_attributes_size();
}
inline void SubcategoryTranslations::clear_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributes_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SubcategoryTranslations::_internal_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributes_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SubcategoryTranslations::attributes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:products.v1.SubcategoryTranslations.attributes)
  return _internal_attributes();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL SubcategoryTranslations::_internal_mutable_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.attributes_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL SubcategoryTranslations::mutable_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:products.v1.SubcategoryTranslations.attributes)
  return _internal_mutable_attributes();
}

// map<string, .shared.v1.StringArray> data = 3 [json_name = "data"];
inline int SubcategoryTranslations::_internal_data_size() const {
  return _internal_data().size();
}
inline int SubcategoryTranslations::data_size() const {
  return _internal_data_size();
}
inline const ::google::protobuf::Map<std::string, ::shared::v1::StringArray>& SubcategoryTranslations::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::shared::v1::StringArray>& SubcategoryTranslations::data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:products.v1.SubcategoryTranslations.data)
  return _internal_data();
}
inline ::google::protobuf::Map<std::string, ::shared::v1::StringArray>* PROTOBUF_NONNULL SubcategoryTranslations::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::shared::v1::StringArray>* PROTOBUF_NONNULL SubcategoryTranslations::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:products.v1.SubcategoryTranslations.data)
  return _internal_mutable_data();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Subcategory

// string id = 1 [json_name = "id"];
inline void Subcategory::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Subcategory::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Subcategory.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Subcategory::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.Subcategory.id)
}
inline ::std::string* PROTOBUF_NONNULL Subcategory::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:products.v1.Subcategory.id)
  return _s;
}
inline const ::std::string& Subcategory::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Subcategory::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Subcategory::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Subcategory::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.Subcategory.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void Subcategory::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.Subcategory.id)
}

// string name = 2 [json_name = "name"];
inline void Subcategory::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Subcategory::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Subcategory.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Subcategory::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.Subcategory.name)
}
inline ::std::string* PROTOBUF_NONNULL Subcategory::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:products.v1.Subcategory.name)
  return _s;
}
inline const ::std::string& Subcategory::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Subcategory::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Subcategory::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Subcategory::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.Subcategory.name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Subcategory::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.Subcategory.name)
}

// int32 version = 3 [json_name = "version"];
inline void Subcategory::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t Subcategory::version() const {
  // @@protoc_insertion_point(field_get:products.v1.Subcategory.version)
  return _internal_version();
}
inline void Subcategory::set_version(::int32_t value) {
  _internal_set_version(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:products.v1.Subcategory.version)
}
inline ::int32_t Subcategory::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void Subcategory::_internal_set_version(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// string created_at = 4 [json_name = "createdAt"];
inline void Subcategory::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& Subcategory::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.Subcategory.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Subcategory::set_created_at(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.Subcategory.created_at)
}
inline ::std::string* PROTOBUF_NONNULL Subcategory::mutable_created_at()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:products.v1.Subcategory.created_at)
  return _s;
}
inline const ::std::string& Subcategory::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void Subcategory::_internal_set_created_at(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.created_at_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Subcategory::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.created_at_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Subcategory::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.Subcategory.created_at)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.created_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.created_at_.Set("", GetArena());
  }
  return released;
}
inline void Subcategory::set_allocated_created_at(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.Subcategory.created_at)
}

// map<string, .products.v1.SubcategoryAttribute> attributes = 5 [json_name = "attributes"];
inline int Subcategory::_internal_attributes_size() const {
  return _internal_attributes().size();
}
inline int Subcategory::attributes_size() const {
  return _internal_attributes_size();
}
inline void Subcategory::clear_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributes_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::products::v1::SubcategoryAttribute>& Subcategory::_internal_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributes_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::products::v1::SubcategoryAttribute>& Subcategory::attributes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:products.v1.Subcategory.attributes)
  return _internal_attributes();
}
inline ::google::protobuf::Map<std::string, ::products::v1::SubcategoryAttribute>* PROTOBUF_NONNULL Subcategory::_internal_mutable_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.attributes_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::products::v1::SubcategoryAttribute>* PROTOBUF_NONNULL Subcategory::mutable_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:products.v1.Subcategory.attributes)
  return _internal_mutable_attributes();
}

// -------------------------------------------------------------------

// SubcategoryAttribute

// bool required = 1 [json_name = "required"];
inline void SubcategoryAttribute::clear_required() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool SubcategoryAttribute::required() const {
  // @@protoc_insertion_point(field_get:products.v1.SubcategoryAttribute.required)
  return _internal_required();
}
inline void SubcategoryAttribute::set_required(bool value) {
  _internal_set_required(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:products.v1.SubcategoryAttribute.required)
}
inline bool SubcategoryAttribute::_internal_required() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.required_;
}
inline void SubcategoryAttribute::_internal_set_required(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_ = value;
}

// string type = 2 [json_name = "type"];
inline void SubcategoryAttribute::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SubcategoryAttribute::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.SubcategoryAttribute.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SubcategoryAttribute::set_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.SubcategoryAttribute.type)
}
inline ::std::string* PROTOBUF_NONNULL SubcategoryAttribute::mutable_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:products.v1.SubcategoryAttribute.type)
  return _s;
}
inline const ::std::string& SubcategoryAttribute::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void SubcategoryAttribute::_internal_set_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SubcategoryAttribute::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SubcategoryAttribute::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.SubcategoryAttribute.type)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.type_.Set("", GetArena());
  }
  return released;
}
inline void SubcategoryAttribute::set_allocated_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.SubcategoryAttribute.type)
}

// optional string reference = 3 [json_name = "reference"];
inline bool SubcategoryAttribute::has_reference() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void SubcategoryAttribute::clear_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reference_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& SubcategoryAttribute::reference() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.SubcategoryAttribute.reference)
  return _internal_reference();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SubcategoryAttribute::set_reference(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.reference_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.SubcategoryAttribute.reference)
}
inline ::std::string* PROTOBUF_NONNULL SubcategoryAttribute::mutable_reference()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_reference();
  // @@protoc_insertion_point(field_mutable:products.v1.SubcategoryAttribute.reference)
  return _s;
}
inline const ::std::string& SubcategoryAttribute::_internal_reference() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reference_.Get();
}
inline void SubcategoryAttribute::_internal_set_reference(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.reference_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SubcategoryAttribute::_internal_mutable_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.reference_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SubcategoryAttribute::release_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.SubcategoryAttribute.reference)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.reference_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.reference_.Set("", GetArena());
  }
  return released;
}
inline void SubcategoryAttribute::set_allocated_reference(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.reference_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.reference_.IsDefault()) {
    _impl_.reference_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.SubcategoryAttribute.reference)
}

// repeated string string_array = 4 [json_name = "stringArray"];
inline int SubcategoryAttribute::_internal_string_array_size() const {
  return _internal_string_array().size();
}
inline int SubcategoryAttribute::string_array_size() const {
  return _internal_string_array_size();
}
inline void SubcategoryAttribute::clear_string_array() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_array_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL SubcategoryAttribute::add_string_array()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_string_array()->Add();
  // @@protoc_insertion_point(field_add_mutable:products.v1.SubcategoryAttribute.string_array)
  return _s;
}
inline const ::std::string& SubcategoryAttribute::string_array(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.SubcategoryAttribute.string_array)
  return _internal_string_array().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL SubcategoryAttribute::mutable_string_array(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:products.v1.SubcategoryAttribute.string_array)
  return _internal_mutable_string_array()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SubcategoryAttribute::set_string_array(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_string_array()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:products.v1.SubcategoryAttribute.string_array)
}
template <typename Arg_, typename... Args_>
inline void SubcategoryAttribute::add_string_array(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_string_array(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:products.v1.SubcategoryAttribute.string_array)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& SubcategoryAttribute::string_array()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:products.v1.SubcategoryAttribute.string_array)
  return _internal_string_array();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SubcategoryAttribute::mutable_string_array() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:products.v1.SubcategoryAttribute.string_array)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_string_array();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
SubcategoryAttribute::_internal_string_array() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.string_array_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SubcategoryAttribute::_internal_mutable_string_array() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.string_array_;
}

// optional bool is_multiple = 5 [json_name = "isMultiple"];
inline bool SubcategoryAttribute::has_is_multiple() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void SubcategoryAttribute::clear_is_multiple() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_multiple_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool SubcategoryAttribute::is_multiple() const {
  // @@protoc_insertion_point(field_get:products.v1.SubcategoryAttribute.is_multiple)
  return _internal_is_multiple();
}
inline void SubcategoryAttribute::set_is_multiple(bool value) {
  _internal_set_is_multiple(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:products.v1.SubcategoryAttribute.is_multiple)
}
inline bool SubcategoryAttribute::_internal_is_multiple() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_multiple_;
}
inline void SubcategoryAttribute::_internal_set_is_multiple(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_multiple_ = value;
}

// .shared.v1.ValidationField validation = 6 [json_name = "validation"];
inline bool SubcategoryAttribute::has_validation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.validation_ != nullptr);
  return value;
}
inline const ::shared::v1::ValidationField& SubcategoryAttribute::_internal_validation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::shared::v1::ValidationField* p = _impl_.validation_;
  return p != nullptr ? *p : reinterpret_cast<const ::shared::v1::ValidationField&>(::shared::v1::_ValidationField_default_instance_);
}
inline const ::shared::v1::ValidationField& SubcategoryAttribute::validation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.SubcategoryAttribute.validation)
  return _internal_validation();
}
inline void SubcategoryAttribute::unsafe_arena_set_allocated_validation(
    ::shared::v1::ValidationField* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.validation_);
  }
  _impl_.validation_ = reinterpret_cast<::shared::v1::ValidationField*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:products.v1.SubcategoryAttribute.validation)
}
inline ::shared::v1::ValidationField* PROTOBUF_NULLABLE SubcategoryAttribute::release_validation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::shared::v1::ValidationField* released = _impl_.validation_;
  _impl_.validation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::shared::v1::ValidationField* PROTOBUF_NULLABLE SubcategoryAttribute::unsafe_arena_release_validation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.SubcategoryAttribute.validation)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::shared::v1::ValidationField* temp = _impl_.validation_;
  _impl_.validation_ = nullptr;
  return temp;
}
inline ::shared::v1::ValidationField* PROTOBUF_NONNULL SubcategoryAttribute::_internal_mutable_validation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.validation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::shared::v1::ValidationField>(GetArena());
    _impl_.validation_ = reinterpret_cast<::shared::v1::ValidationField*>(p);
  }
  return _impl_.validation_;
}
inline ::shared::v1::ValidationField* PROTOBUF_NONNULL SubcategoryAttribute::mutable_validation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::shared::v1::ValidationField* _msg = _internal_mutable_validation();
  // @@protoc_insertion_point(field_mutable:products.v1.SubcategoryAttribute.validation)
  return _msg;
}
inline void SubcategoryAttribute::set_allocated_validation(::shared::v1::ValidationField* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.validation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.validation_ = reinterpret_cast<::shared::v1::ValidationField*>(value);
  // @@protoc_insertion_point(field_set_allocated:products.v1.SubcategoryAttribute.validation)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace products


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // products_2fv1_2fproduct_5fcategories_2eproto_2epb_2eh
