// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: products/v1/product_events.proto
// Protobuf C++ Version: 6.31.1

#ifndef products_2fv1_2fproduct_5fevents_2eproto_2epb_2eh
#define products_2fv1_2fproduct_5fevents_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_products_2fv1_2fproduct_5fevents_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_products_2fv1_2fproduct_5fevents_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_products_2fv1_2fproduct_5fevents_2eproto;
}  // extern "C"
namespace products {
namespace v1 {
class ChangeFeed;
struct ChangeFeedDefaultTypeInternal;
extern ChangeFeedDefaultTypeInternal _ChangeFeed_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ChangeFeed_class_data_;
class ProductCreatedEvent;
struct ProductCreatedEventDefaultTypeInternal;
extern ProductCreatedEventDefaultTypeInternal _ProductCreatedEvent_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProductCreatedEvent_class_data_;
class ProductOutbox;
struct ProductOutboxDefaultTypeInternal;
extern ProductOutboxDefaultTypeInternal _ProductOutbox_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProductOutbox_class_data_;
class ProductUpdatedEvent;
struct ProductUpdatedEventDefaultTypeInternal;
extern ProductUpdatedEventDefaultTypeInternal _ProductUpdatedEvent_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProductUpdatedEvent_class_data_;
}  // namespace v1
}  // namespace products
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace products {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class ProductUpdatedEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:products.v1.ProductUpdatedEvent) */ {
 public:
  inline ProductUpdatedEvent() : ProductUpdatedEvent(nullptr) {}
  ~ProductUpdatedEvent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProductUpdatedEvent* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProductUpdatedEvent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProductUpdatedEvent(::google::protobuf::internal::ConstantInitialized);

  inline ProductUpdatedEvent(const ProductUpdatedEvent& from) : ProductUpdatedEvent(nullptr, from) {}
  inline ProductUpdatedEvent(ProductUpdatedEvent&& from) noexcept
      : ProductUpdatedEvent(nullptr, ::std::move(from)) {}
  inline ProductUpdatedEvent& operator=(const ProductUpdatedEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductUpdatedEvent& operator=(ProductUpdatedEvent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProductUpdatedEvent& default_instance() {
    return *reinterpret_cast<const ProductUpdatedEvent*>(
        &_ProductUpdatedEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ProductUpdatedEvent& a, ProductUpdatedEvent& b) { a.Swap(&b); }
  inline void Swap(ProductUpdatedEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductUpdatedEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProductUpdatedEvent* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProductUpdatedEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProductUpdatedEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProductUpdatedEvent& from) { ProductUpdatedEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProductUpdatedEvent* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "products.v1.ProductUpdatedEvent"; }

 protected:
  explicit ProductUpdatedEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProductUpdatedEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProductUpdatedEvent& from);
  ProductUpdatedEvent(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProductUpdatedEvent&& from) noexcept
      : ProductUpdatedEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTitleFieldNumber = 1,
    kDescriptionFieldNumber = 2,
  };
  // optional string title = 1 [json_name = "title"];
  bool has_title() const;
  void clear_title() ;
  const ::std::string& title() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_title();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_title();
  void set_allocated_title(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_title() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_title(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_title();

  public:
  // optional string description = 2 [json_name = "description"];
  bool has_description() const;
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // @@protoc_insertion_point(class_scope:products.v1.ProductUpdatedEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 56,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProductUpdatedEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_products_2fv1_2fproduct_5fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProductUpdatedEvent_class_data_;
// -------------------------------------------------------------------

class ProductCreatedEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:products.v1.ProductCreatedEvent) */ {
 public:
  inline ProductCreatedEvent() : ProductCreatedEvent(nullptr) {}
  ~ProductCreatedEvent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProductCreatedEvent* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProductCreatedEvent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProductCreatedEvent(::google::protobuf::internal::ConstantInitialized);

  inline ProductCreatedEvent(const ProductCreatedEvent& from) : ProductCreatedEvent(nullptr, from) {}
  inline ProductCreatedEvent(ProductCreatedEvent&& from) noexcept
      : ProductCreatedEvent(nullptr, ::std::move(from)) {}
  inline ProductCreatedEvent& operator=(const ProductCreatedEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductCreatedEvent& operator=(ProductCreatedEvent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProductCreatedEvent& default_instance() {
    return *reinterpret_cast<const ProductCreatedEvent*>(
        &_ProductCreatedEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ProductCreatedEvent& a, ProductCreatedEvent& b) { a.Swap(&b); }
  inline void Swap(ProductCreatedEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductCreatedEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProductCreatedEvent* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProductCreatedEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProductCreatedEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProductCreatedEvent& from) { ProductCreatedEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProductCreatedEvent* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "products.v1.ProductCreatedEvent"; }

 protected:
  explicit ProductCreatedEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProductCreatedEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProductCreatedEvent& from);
  ProductCreatedEvent(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProductCreatedEvent&& from) noexcept
      : ProductCreatedEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTitleFieldNumber = 1,
    kDescriptionFieldNumber = 2,
  };
  // string title = 1 [json_name = "title"];
  void clear_title() ;
  const ::std::string& title() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_title();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_title();
  void set_allocated_title(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_title() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_title(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_title();

  public:
  // string description = 2 [json_name = "description"];
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // @@protoc_insertion_point(class_scope:products.v1.ProductCreatedEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 56,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProductCreatedEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_products_2fv1_2fproduct_5fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProductCreatedEvent_class_data_;
// -------------------------------------------------------------------

class ProductOutbox final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:products.v1.ProductOutbox) */ {
 public:
  inline ProductOutbox() : ProductOutbox(nullptr) {}
  ~ProductOutbox() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProductOutbox* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProductOutbox));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProductOutbox(::google::protobuf::internal::ConstantInitialized);

  inline ProductOutbox(const ProductOutbox& from) : ProductOutbox(nullptr, from) {}
  inline ProductOutbox(ProductOutbox&& from) noexcept
      : ProductOutbox(nullptr, ::std::move(from)) {}
  inline ProductOutbox& operator=(const ProductOutbox& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductOutbox& operator=(ProductOutbox&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProductOutbox& default_instance() {
    return *reinterpret_cast<const ProductOutbox*>(
        &_ProductOutbox_default_instance_);
  }
  enum PayloadCase {
    kCreated = 9,
    kUpdated = 10,
    PAYLOAD_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ProductOutbox& a, ProductOutbox& b) { a.Swap(&b); }
  inline void Swap(ProductOutbox* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductOutbox* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProductOutbox* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProductOutbox>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProductOutbox& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProductOutbox& from) { ProductOutbox::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProductOutbox* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "products.v1.ProductOutbox"; }

 protected:
  explicit ProductOutbox(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProductOutbox(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProductOutbox& from);
  ProductOutbox(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProductOutbox&& from) noexcept
      : ProductOutbox(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kProductIdFieldNumber = 2,
    kTypeFieldNumber = 3,
    kLastErrorFieldNumber = 6,
    kProcessedAtFieldNumber = 4,
    kCreatedAtFieldNumber = 7,
    kUpdatedAtFieldNumber = 8,
    kProcessingAttemptsFieldNumber = 5,
    kCreatedFieldNumber = 9,
    kUpdatedFieldNumber = 10,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // string product_id = 2 [json_name = "productId"];
  void clear_product_id() ;
  const ::std::string& product_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_product_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_product_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_product_id();
  void set_allocated_product_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_product_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_product_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_product_id();

  public:
  // string type = 3 [json_name = "type"];
  void clear_type() ;
  const ::std::string& type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_type();
  void set_allocated_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_type();

  public:
  // optional string last_error = 6 [json_name = "lastError"];
  bool has_last_error() const;
  void clear_last_error() ;
  const ::std::string& last_error() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_last_error(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_last_error();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_last_error();
  void set_allocated_last_error(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_last_error() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_last_error(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_last_error();

  public:
  // optional int64 processed_at = 4 [json_name = "processedAt"];
  bool has_processed_at() const;
  void clear_processed_at() ;
  ::int64_t processed_at() const;
  void set_processed_at(::int64_t value);

  private:
  ::int64_t _internal_processed_at() const;
  void _internal_set_processed_at(::int64_t value);

  public:
  // int64 created_at = 7 [json_name = "createdAt"];
  void clear_created_at() ;
  ::int64_t created_at() const;
  void set_created_at(::int64_t value);

  private:
  ::int64_t _internal_created_at() const;
  void _internal_set_created_at(::int64_t value);

  public:
  // int64 updated_at = 8 [json_name = "updatedAt"];
  void clear_updated_at() ;
  ::int64_t updated_at() const;
  void set_updated_at(::int64_t value);

  private:
  ::int64_t _internal_updated_at() const;
  void _internal_set_updated_at(::int64_t value);

  public:
  // uint32 processing_attempts = 5 [json_name = "processingAttempts"];
  void clear_processing_attempts() ;
  ::uint32_t processing_attempts() const;
  void set_processing_attempts(::uint32_t value);

  private:
  ::uint32_t _internal_processing_attempts() const;
  void _internal_set_processing_attempts(::uint32_t value);

  public:
  // .products.v1.ProductCreatedEvent created = 9 [json_name = "created"];
  bool has_created() const;
  private:
  bool _internal_has_created() const;

  public:
  void clear_created() ;
  const ::products::v1::ProductCreatedEvent& created() const;
  [[nodiscard]] ::products::v1::ProductCreatedEvent* PROTOBUF_NULLABLE release_created();
  ::products::v1::ProductCreatedEvent* PROTOBUF_NONNULL mutable_created();
  void set_allocated_created(::products::v1::ProductCreatedEvent* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_created(::products::v1::ProductCreatedEvent* PROTOBUF_NULLABLE value);
  ::products::v1::ProductCreatedEvent* PROTOBUF_NULLABLE unsafe_arena_release_created();

  private:
  const ::products::v1::ProductCreatedEvent& _internal_created() const;
  ::products::v1::ProductCreatedEvent* PROTOBUF_NONNULL _internal_mutable_created();

  public:
  // .products.v1.ProductUpdatedEvent updated = 10 [json_name = "updated"];
  bool has_updated() const;
  private:
  bool _internal_has_updated() const;

  public:
  void clear_updated() ;
  const ::products::v1::ProductUpdatedEvent& updated() const;
  [[nodiscard]] ::products::v1::ProductUpdatedEvent* PROTOBUF_NULLABLE release_updated();
  ::products::v1::ProductUpdatedEvent* PROTOBUF_NONNULL mutable_updated();
  void set_allocated_updated(::products::v1::ProductUpdatedEvent* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_updated(::products::v1::ProductUpdatedEvent* PROTOBUF_NULLABLE value);
  ::products::v1::ProductUpdatedEvent* PROTOBUF_NULLABLE unsafe_arena_release_updated();

  private:
  const ::products::v1::ProductUpdatedEvent& _internal_updated() const;
  ::products::v1::ProductUpdatedEvent* PROTOBUF_NONNULL _internal_mutable_updated();

  public:
  void clear_payload();
  PayloadCase payload_case() const;
  // @@protoc_insertion_point(class_scope:products.v1.ProductOutbox)
 private:
  class _Internal;
  void set_has_created();
  void set_has_updated();
  inline bool has_payload() const;
  inline void clear_has_payload();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 10,
                                   2, 68,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProductOutbox& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr product_id_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr last_error_;
    ::int64_t processed_at_;
    ::int64_t created_at_;
    ::int64_t updated_at_;
    ::uint32_t processing_attempts_;
    union PayloadUnion {
      constexpr PayloadUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::products::v1::ProductCreatedEvent* PROTOBUF_NULLABLE created_;
      ::products::v1::ProductUpdatedEvent* PROTOBUF_NULLABLE updated_;
    } payload_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_products_2fv1_2fproduct_5fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProductOutbox_class_data_;
// -------------------------------------------------------------------

class ChangeFeed final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:products.v1.ChangeFeed) */ {
 public:
  inline ChangeFeed() : ChangeFeed(nullptr) {}
  ~ChangeFeed() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ChangeFeed* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ChangeFeed));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChangeFeed(::google::protobuf::internal::ConstantInitialized);

  inline ChangeFeed(const ChangeFeed& from) : ChangeFeed(nullptr, from) {}
  inline ChangeFeed(ChangeFeed&& from) noexcept
      : ChangeFeed(nullptr, ::std::move(from)) {}
  inline ChangeFeed& operator=(const ChangeFeed& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChangeFeed& operator=(ChangeFeed&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChangeFeed& default_instance() {
    return *reinterpret_cast<const ChangeFeed*>(
        &_ChangeFeed_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ChangeFeed& a, ChangeFeed& b) { a.Swap(&b); }
  inline void Swap(ChangeFeed* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChangeFeed* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChangeFeed* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ChangeFeed>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChangeFeed& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChangeFeed& from) { ChangeFeed::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ChangeFeed* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "products.v1.ChangeFeed"; }

 protected:
  explicit ChangeFeed(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ChangeFeed(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ChangeFeed& from);
  ChangeFeed(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ChangeFeed&& from) noexcept
      : ChangeFeed(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAfterFieldNumber = 1,
    kBeforeFieldNumber = 2,
    kUpdatedFieldNumber = 3,
    kResolvedFieldNumber = 4,
  };
  // .products.v1.ProductOutbox after = 1 [json_name = "after"];
  bool has_after() const;
  void clear_after() ;
  const ::products::v1::ProductOutbox& after() const;
  [[nodiscard]] ::products::v1::ProductOutbox* PROTOBUF_NULLABLE release_after();
  ::products::v1::ProductOutbox* PROTOBUF_NONNULL mutable_after();
  void set_allocated_after(::products::v1::ProductOutbox* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_after(::products::v1::ProductOutbox* PROTOBUF_NULLABLE value);
  ::products::v1::ProductOutbox* PROTOBUF_NULLABLE unsafe_arena_release_after();

  private:
  const ::products::v1::ProductOutbox& _internal_after() const;
  ::products::v1::ProductOutbox* PROTOBUF_NONNULL _internal_mutable_after();

  public:
  // .products.v1.ProductOutbox before = 2 [json_name = "before"];
  bool has_before() const;
  void clear_before() ;
  const ::products::v1::ProductOutbox& before() const;
  [[nodiscard]] ::products::v1::ProductOutbox* PROTOBUF_NULLABLE release_before();
  ::products::v1::ProductOutbox* PROTOBUF_NONNULL mutable_before();
  void set_allocated_before(::products::v1::ProductOutbox* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_before(::products::v1::ProductOutbox* PROTOBUF_NULLABLE value);
  ::products::v1::ProductOutbox* PROTOBUF_NULLABLE unsafe_arena_release_before();

  private:
  const ::products::v1::ProductOutbox& _internal_before() const;
  ::products::v1::ProductOutbox* PROTOBUF_NONNULL _internal_mutable_before();

  public:
  // int64 updated = 3 [json_name = "updated"];
  void clear_updated() ;
  ::int64_t updated() const;
  void set_updated(::int64_t value);

  private:
  ::int64_t _internal_updated() const;
  void _internal_set_updated(::int64_t value);

  public:
  // int64 resolved = 4 [json_name = "resolved"];
  void clear_resolved() ;
  ::int64_t resolved() const;
  void set_resolved(::int64_t value);

  private:
  ::int64_t _internal_resolved() const;
  void _internal_set_resolved(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:products.v1.ChangeFeed)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ChangeFeed& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::products::v1::ProductOutbox* PROTOBUF_NULLABLE after_;
    ::products::v1::ProductOutbox* PROTOBUF_NULLABLE before_;
    ::int64_t updated_;
    ::int64_t resolved_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_products_2fv1_2fproduct_5fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ChangeFeed_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ChangeFeed

// .products.v1.ProductOutbox after = 1 [json_name = "after"];
inline bool ChangeFeed::has_after() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.after_ != nullptr);
  return value;
}
inline void ChangeFeed::clear_after() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.after_ != nullptr) _impl_.after_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::products::v1::ProductOutbox& ChangeFeed::_internal_after() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::products::v1::ProductOutbox* p = _impl_.after_;
  return p != nullptr ? *p : reinterpret_cast<const ::products::v1::ProductOutbox&>(::products::v1::_ProductOutbox_default_instance_);
}
inline const ::products::v1::ProductOutbox& ChangeFeed::after() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ChangeFeed.after)
  return _internal_after();
}
inline void ChangeFeed::unsafe_arena_set_allocated_after(
    ::products::v1::ProductOutbox* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.after_);
  }
  _impl_.after_ = reinterpret_cast<::products::v1::ProductOutbox*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:products.v1.ChangeFeed.after)
}
inline ::products::v1::ProductOutbox* PROTOBUF_NULLABLE ChangeFeed::release_after() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::products::v1::ProductOutbox* released = _impl_.after_;
  _impl_.after_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::products::v1::ProductOutbox* PROTOBUF_NULLABLE ChangeFeed::unsafe_arena_release_after() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ChangeFeed.after)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::products::v1::ProductOutbox* temp = _impl_.after_;
  _impl_.after_ = nullptr;
  return temp;
}
inline ::products::v1::ProductOutbox* PROTOBUF_NONNULL ChangeFeed::_internal_mutable_after() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.after_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::products::v1::ProductOutbox>(GetArena());
    _impl_.after_ = reinterpret_cast<::products::v1::ProductOutbox*>(p);
  }
  return _impl_.after_;
}
inline ::products::v1::ProductOutbox* PROTOBUF_NONNULL ChangeFeed::mutable_after()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::products::v1::ProductOutbox* _msg = _internal_mutable_after();
  // @@protoc_insertion_point(field_mutable:products.v1.ChangeFeed.after)
  return _msg;
}
inline void ChangeFeed::set_allocated_after(::products::v1::ProductOutbox* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.after_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.after_ = reinterpret_cast<::products::v1::ProductOutbox*>(value);
  // @@protoc_insertion_point(field_set_allocated:products.v1.ChangeFeed.after)
}

// .products.v1.ProductOutbox before = 2 [json_name = "before"];
inline bool ChangeFeed::has_before() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.before_ != nullptr);
  return value;
}
inline void ChangeFeed::clear_before() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.before_ != nullptr) _impl_.before_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::products::v1::ProductOutbox& ChangeFeed::_internal_before() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::products::v1::ProductOutbox* p = _impl_.before_;
  return p != nullptr ? *p : reinterpret_cast<const ::products::v1::ProductOutbox&>(::products::v1::_ProductOutbox_default_instance_);
}
inline const ::products::v1::ProductOutbox& ChangeFeed::before() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ChangeFeed.before)
  return _internal_before();
}
inline void ChangeFeed::unsafe_arena_set_allocated_before(
    ::products::v1::ProductOutbox* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.before_);
  }
  _impl_.before_ = reinterpret_cast<::products::v1::ProductOutbox*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:products.v1.ChangeFeed.before)
}
inline ::products::v1::ProductOutbox* PROTOBUF_NULLABLE ChangeFeed::release_before() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::products::v1::ProductOutbox* released = _impl_.before_;
  _impl_.before_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::products::v1::ProductOutbox* PROTOBUF_NULLABLE ChangeFeed::unsafe_arena_release_before() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ChangeFeed.before)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::products::v1::ProductOutbox* temp = _impl_.before_;
  _impl_.before_ = nullptr;
  return temp;
}
inline ::products::v1::ProductOutbox* PROTOBUF_NONNULL ChangeFeed::_internal_mutable_before() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.before_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::products::v1::ProductOutbox>(GetArena());
    _impl_.before_ = reinterpret_cast<::products::v1::ProductOutbox*>(p);
  }
  return _impl_.before_;
}
inline ::products::v1::ProductOutbox* PROTOBUF_NONNULL ChangeFeed::mutable_before()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::products::v1::ProductOutbox* _msg = _internal_mutable_before();
  // @@protoc_insertion_point(field_mutable:products.v1.ChangeFeed.before)
  return _msg;
}
inline void ChangeFeed::set_allocated_before(::products::v1::ProductOutbox* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.before_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.before_ = reinterpret_cast<::products::v1::ProductOutbox*>(value);
  // @@protoc_insertion_point(field_set_allocated:products.v1.ChangeFeed.before)
}

// int64 updated = 3 [json_name = "updated"];
inline void ChangeFeed::clear_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t ChangeFeed::updated() const {
  // @@protoc_insertion_point(field_get:products.v1.ChangeFeed.updated)
  return _internal_updated();
}
inline void ChangeFeed::set_updated(::int64_t value) {
  _internal_set_updated(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:products.v1.ChangeFeed.updated)
}
inline ::int64_t ChangeFeed::_internal_updated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_;
}
inline void ChangeFeed::_internal_set_updated(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_ = value;
}

// int64 resolved = 4 [json_name = "resolved"];
inline void ChangeFeed::clear_resolved() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolved_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t ChangeFeed::resolved() const {
  // @@protoc_insertion_point(field_get:products.v1.ChangeFeed.resolved)
  return _internal_resolved();
}
inline void ChangeFeed::set_resolved(::int64_t value) {
  _internal_set_resolved(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:products.v1.ChangeFeed.resolved)
}
inline ::int64_t ChangeFeed::_internal_resolved() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resolved_;
}
inline void ChangeFeed::_internal_set_resolved(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolved_ = value;
}

// -------------------------------------------------------------------

// ProductOutbox

// string id = 1 [json_name = "id"];
inline void ProductOutbox::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ProductOutbox::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductOutbox.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProductOutbox::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.ProductOutbox.id)
}
inline ::std::string* PROTOBUF_NONNULL ProductOutbox::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductOutbox.id)
  return _s;
}
inline const ::std::string& ProductOutbox::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void ProductOutbox::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProductOutbox::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProductOutbox::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ProductOutbox.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void ProductOutbox::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.ProductOutbox.id)
}

// string product_id = 2 [json_name = "productId"];
inline void ProductOutbox::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ProductOutbox::product_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductOutbox.product_id)
  return _internal_product_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProductOutbox::set_product_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.product_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.ProductOutbox.product_id)
}
inline ::std::string* PROTOBUF_NONNULL ProductOutbox::mutable_product_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_product_id();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductOutbox.product_id)
  return _s;
}
inline const ::std::string& ProductOutbox::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_.Get();
}
inline void ProductOutbox::_internal_set_product_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.product_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProductOutbox::_internal_mutable_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.product_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProductOutbox::release_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ProductOutbox.product_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.product_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.product_id_.Set("", GetArena());
  }
  return released;
}
inline void ProductOutbox::set_allocated_product_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.product_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.product_id_.IsDefault()) {
    _impl_.product_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.ProductOutbox.product_id)
}

// string type = 3 [json_name = "type"];
inline void ProductOutbox::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& ProductOutbox::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductOutbox.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProductOutbox::set_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.ProductOutbox.type)
}
inline ::std::string* PROTOBUF_NONNULL ProductOutbox::mutable_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductOutbox.type)
  return _s;
}
inline const ::std::string& ProductOutbox::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void ProductOutbox::_internal_set_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProductOutbox::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProductOutbox::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ProductOutbox.type)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.type_.Set("", GetArena());
  }
  return released;
}
inline void ProductOutbox::set_allocated_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.ProductOutbox.type)
}

// optional int64 processed_at = 4 [json_name = "processedAt"];
inline bool ProductOutbox::has_processed_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void ProductOutbox::clear_processed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.processed_at_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t ProductOutbox::processed_at() const {
  // @@protoc_insertion_point(field_get:products.v1.ProductOutbox.processed_at)
  return _internal_processed_at();
}
inline void ProductOutbox::set_processed_at(::int64_t value) {
  _internal_set_processed_at(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:products.v1.ProductOutbox.processed_at)
}
inline ::int64_t ProductOutbox::_internal_processed_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.processed_at_;
}
inline void ProductOutbox::_internal_set_processed_at(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.processed_at_ = value;
}

// uint32 processing_attempts = 5 [json_name = "processingAttempts"];
inline void ProductOutbox::clear_processing_attempts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.processing_attempts_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t ProductOutbox::processing_attempts() const {
  // @@protoc_insertion_point(field_get:products.v1.ProductOutbox.processing_attempts)
  return _internal_processing_attempts();
}
inline void ProductOutbox::set_processing_attempts(::uint32_t value) {
  _internal_set_processing_attempts(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:products.v1.ProductOutbox.processing_attempts)
}
inline ::uint32_t ProductOutbox::_internal_processing_attempts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.processing_attempts_;
}
inline void ProductOutbox::_internal_set_processing_attempts(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.processing_attempts_ = value;
}

// optional string last_error = 6 [json_name = "lastError"];
inline bool ProductOutbox::has_last_error() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void ProductOutbox::clear_last_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_error_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& ProductOutbox::last_error() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductOutbox.last_error)
  return _internal_last_error();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProductOutbox::set_last_error(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.last_error_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.ProductOutbox.last_error)
}
inline ::std::string* PROTOBUF_NONNULL ProductOutbox::mutable_last_error()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_last_error();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductOutbox.last_error)
  return _s;
}
inline const ::std::string& ProductOutbox::_internal_last_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_error_.Get();
}
inline void ProductOutbox::_internal_set_last_error(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.last_error_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProductOutbox::_internal_mutable_last_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.last_error_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProductOutbox::release_last_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ProductOutbox.last_error)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.last_error_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.last_error_.Set("", GetArena());
  }
  return released;
}
inline void ProductOutbox::set_allocated_last_error(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.last_error_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_error_.IsDefault()) {
    _impl_.last_error_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.ProductOutbox.last_error)
}

// int64 created_at = 7 [json_name = "createdAt"];
inline void ProductOutbox::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t ProductOutbox::created_at() const {
  // @@protoc_insertion_point(field_get:products.v1.ProductOutbox.created_at)
  return _internal_created_at();
}
inline void ProductOutbox::set_created_at(::int64_t value) {
  _internal_set_created_at(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:products.v1.ProductOutbox.created_at)
}
inline ::int64_t ProductOutbox::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_;
}
inline void ProductOutbox::_internal_set_created_at(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_ = value;
}

// int64 updated_at = 8 [json_name = "updatedAt"];
inline void ProductOutbox::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int64_t ProductOutbox::updated_at() const {
  // @@protoc_insertion_point(field_get:products.v1.ProductOutbox.updated_at)
  return _internal_updated_at();
}
inline void ProductOutbox::set_updated_at(::int64_t value) {
  _internal_set_updated_at(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:products.v1.ProductOutbox.updated_at)
}
inline ::int64_t ProductOutbox::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_;
}
inline void ProductOutbox::_internal_set_updated_at(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_ = value;
}

// .products.v1.ProductCreatedEvent created = 9 [json_name = "created"];
inline bool ProductOutbox::has_created() const {
  return payload_case() == kCreated;
}
inline bool ProductOutbox::_internal_has_created() const {
  return payload_case() == kCreated;
}
inline void ProductOutbox::set_has_created() {
  _impl_._oneof_case_[0] = kCreated;
}
inline void ProductOutbox::clear_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kCreated) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.created_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.created_);
    }
    clear_has_payload();
  }
}
inline ::products::v1::ProductCreatedEvent* PROTOBUF_NULLABLE ProductOutbox::release_created() {
  // @@protoc_insertion_point(field_release:products.v1.ProductOutbox.created)
  if (payload_case() == kCreated) {
    clear_has_payload();
    auto* temp = _impl_.payload_.created_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.created_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::products::v1::ProductCreatedEvent& ProductOutbox::_internal_created() const {
  return payload_case() == kCreated ? *_impl_.payload_.created_ : reinterpret_cast<::products::v1::ProductCreatedEvent&>(::products::v1::_ProductCreatedEvent_default_instance_);
}
inline const ::products::v1::ProductCreatedEvent& ProductOutbox::created() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductOutbox.created)
  return _internal_created();
}
inline ::products::v1::ProductCreatedEvent* PROTOBUF_NULLABLE ProductOutbox::unsafe_arena_release_created() {
  // @@protoc_insertion_point(field_unsafe_arena_release:products.v1.ProductOutbox.created)
  if (payload_case() == kCreated) {
    clear_has_payload();
    auto* temp = _impl_.payload_.created_;
    _impl_.payload_.created_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProductOutbox::unsafe_arena_set_allocated_created(
    ::products::v1::ProductCreatedEvent* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_created();
    _impl_.payload_.created_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:products.v1.ProductOutbox.created)
}
inline ::products::v1::ProductCreatedEvent* PROTOBUF_NONNULL ProductOutbox::_internal_mutable_created() {
  if (payload_case() != kCreated) {
    clear_payload();
    set_has_created();
    _impl_.payload_.created_ = 
        ::google::protobuf::Message::DefaultConstruct<::products::v1::ProductCreatedEvent>(GetArena());
  }
  return _impl_.payload_.created_;
}
inline ::products::v1::ProductCreatedEvent* PROTOBUF_NONNULL ProductOutbox::mutable_created()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::products::v1::ProductCreatedEvent* _msg = _internal_mutable_created();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductOutbox.created)
  return _msg;
}

// .products.v1.ProductUpdatedEvent updated = 10 [json_name = "updated"];
inline bool ProductOutbox::has_updated() const {
  return payload_case() == kUpdated;
}
inline bool ProductOutbox::_internal_has_updated() const {
  return payload_case() == kUpdated;
}
inline void ProductOutbox::set_has_updated() {
  _impl_._oneof_case_[0] = kUpdated;
}
inline void ProductOutbox::clear_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kUpdated) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.updated_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.updated_);
    }
    clear_has_payload();
  }
}
inline ::products::v1::ProductUpdatedEvent* PROTOBUF_NULLABLE ProductOutbox::release_updated() {
  // @@protoc_insertion_point(field_release:products.v1.ProductOutbox.updated)
  if (payload_case() == kUpdated) {
    clear_has_payload();
    auto* temp = _impl_.payload_.updated_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.updated_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::products::v1::ProductUpdatedEvent& ProductOutbox::_internal_updated() const {
  return payload_case() == kUpdated ? *_impl_.payload_.updated_ : reinterpret_cast<::products::v1::ProductUpdatedEvent&>(::products::v1::_ProductUpdatedEvent_default_instance_);
}
inline const ::products::v1::ProductUpdatedEvent& ProductOutbox::updated() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductOutbox.updated)
  return _internal_updated();
}
inline ::products::v1::ProductUpdatedEvent* PROTOBUF_NULLABLE ProductOutbox::unsafe_arena_release_updated() {
  // @@protoc_insertion_point(field_unsafe_arena_release:products.v1.ProductOutbox.updated)
  if (payload_case() == kUpdated) {
    clear_has_payload();
    auto* temp = _impl_.payload_.updated_;
    _impl_.payload_.updated_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProductOutbox::unsafe_arena_set_allocated_updated(
    ::products::v1::ProductUpdatedEvent* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_updated();
    _impl_.payload_.updated_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:products.v1.ProductOutbox.updated)
}
inline ::products::v1::ProductUpdatedEvent* PROTOBUF_NONNULL ProductOutbox::_internal_mutable_updated() {
  if (payload_case() != kUpdated) {
    clear_payload();
    set_has_updated();
    _impl_.payload_.updated_ = 
        ::google::protobuf::Message::DefaultConstruct<::products::v1::ProductUpdatedEvent>(GetArena());
  }
  return _impl_.payload_.updated_;
}
inline ::products::v1::ProductUpdatedEvent* PROTOBUF_NONNULL ProductOutbox::mutable_updated()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::products::v1::ProductUpdatedEvent* _msg = _internal_mutable_updated();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductOutbox.updated)
  return _msg;
}

inline bool ProductOutbox::has_payload() const {
  return payload_case() != PAYLOAD_NOT_SET;
}
inline void ProductOutbox::clear_has_payload() {
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}
inline ProductOutbox::PayloadCase ProductOutbox::payload_case() const {
  return ProductOutbox::PayloadCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// ProductCreatedEvent

// string title = 1 [json_name = "title"];
inline void ProductCreatedEvent::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ProductCreatedEvent::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductCreatedEvent.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProductCreatedEvent::set_title(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.ProductCreatedEvent.title)
}
inline ::std::string* PROTOBUF_NONNULL ProductCreatedEvent::mutable_title()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductCreatedEvent.title)
  return _s;
}
inline const ::std::string& ProductCreatedEvent::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void ProductCreatedEvent::_internal_set_title(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.title_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProductCreatedEvent::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.title_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProductCreatedEvent::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ProductCreatedEvent.title)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.title_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.title_.Set("", GetArena());
  }
  return released;
}
inline void ProductCreatedEvent::set_allocated_title(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.title_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.ProductCreatedEvent.title)
}

// string description = 2 [json_name = "description"];
inline void ProductCreatedEvent::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ProductCreatedEvent::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductCreatedEvent.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProductCreatedEvent::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.ProductCreatedEvent.description)
}
inline ::std::string* PROTOBUF_NONNULL ProductCreatedEvent::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductCreatedEvent.description)
  return _s;
}
inline const ::std::string& ProductCreatedEvent::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void ProductCreatedEvent::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProductCreatedEvent::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProductCreatedEvent::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ProductCreatedEvent.description)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void ProductCreatedEvent::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.ProductCreatedEvent.description)
}

// -------------------------------------------------------------------

// ProductUpdatedEvent

// optional string title = 1 [json_name = "title"];
inline bool ProductUpdatedEvent::has_title() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ProductUpdatedEvent::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ProductUpdatedEvent::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductUpdatedEvent.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProductUpdatedEvent::set_title(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.ProductUpdatedEvent.title)
}
inline ::std::string* PROTOBUF_NONNULL ProductUpdatedEvent::mutable_title()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductUpdatedEvent.title)
  return _s;
}
inline const ::std::string& ProductUpdatedEvent::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void ProductUpdatedEvent::_internal_set_title(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.title_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProductUpdatedEvent::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.title_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProductUpdatedEvent::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ProductUpdatedEvent.title)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.title_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.title_.Set("", GetArena());
  }
  return released;
}
inline void ProductUpdatedEvent::set_allocated_title(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.title_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.ProductUpdatedEvent.title)
}

// optional string description = 2 [json_name = "description"];
inline bool ProductUpdatedEvent::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ProductUpdatedEvent::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ProductUpdatedEvent::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:products.v1.ProductUpdatedEvent.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProductUpdatedEvent::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:products.v1.ProductUpdatedEvent.description)
}
inline ::std::string* PROTOBUF_NONNULL ProductUpdatedEvent::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:products.v1.ProductUpdatedEvent.description)
  return _s;
}
inline const ::std::string& ProductUpdatedEvent::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void ProductUpdatedEvent::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProductUpdatedEvent::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProductUpdatedEvent::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:products.v1.ProductUpdatedEvent.description)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void ProductUpdatedEvent::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:products.v1.ProductUpdatedEvent.description)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace products


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // products_2fv1_2fproduct_5fevents_2eproto_2epb_2eh
