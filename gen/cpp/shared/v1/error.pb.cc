// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: shared/v1/error.proto
// Protobuf C++ Version: 6.31.1

#include "shared/v1/error.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace shared {
namespace v1 {

inline constexpr AppError::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        detailed_error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        where_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        errors_{nullptr},
        errors_nested_{nullptr},
        status_code_{0},
        skip_translation_{false} {}

template <typename>
PROTOBUF_CONSTEXPR AppError::AppError(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AppError_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppErrorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppErrorDefaultTypeInternal() {}
  union {
    AppError _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppErrorDefaultTypeInternal _AppError_default_instance_;
}  // namespace v1
}  // namespace shared
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_shared_2fv1_2ferror_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_shared_2fv1_2ferror_2eproto = nullptr;
const ::uint32_t
    TableStruct_shared_2fv1_2ferror_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::shared::v1::AppError, _impl_._has_bits_),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::shared::v1::AppError, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::shared::v1::AppError, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::shared::v1::AppError, _impl_.detailed_error_),
        PROTOBUF_FIELD_OFFSET(::shared::v1::AppError, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::shared::v1::AppError, _impl_.status_code_),
        PROTOBUF_FIELD_OFFSET(::shared::v1::AppError, _impl_.where_),
        PROTOBUF_FIELD_OFFSET(::shared::v1::AppError, _impl_.skip_translation_),
        PROTOBUF_FIELD_OFFSET(::shared::v1::AppError, _impl_.errors_),
        PROTOBUF_FIELD_OFFSET(::shared::v1::AppError, _impl_.errors_nested_),
        0,
        1,
        2,
        3,
        7,
        4,
        8,
        5,
        6,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::shared::v1::AppError)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::shared::v1::_AppError_default_instance_._instance,
};
const char descriptor_table_protodef_shared_2fv1_2ferror_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025shared/v1/error.proto\022\tshared.v1\032\025shar"
    "ed/v1/types.proto\"\313\002\n\010AppError\022\016\n\002id\030\001 \001"
    "(\tR\002id\022\030\n\007message\030\002 \001(\tR\007message\022%\n\016deta"
    "iled_error\030\003 \001(\tR\rdetailedError\022\035\n\nreque"
    "st_id\030\004 \001(\tR\trequestId\022\037\n\013status_code\030\005 "
    "\001(\005R\nstatusCode\022\024\n\005where\030\006 \001(\tR\005where\022)\n"
    "\020skip_translation\030\007 \001(\010R\017skipTranslation"
    "\022,\n\006errors\030\010 \001(\0132\024.shared.v1.StringMapR\006"
    "errors\022\?\n\rerrors_nested\030\t \001(\0132\032.shared.v"
    "1.NestedStringMapR\014errorsNestedBp\n\032org.m"
    "egacommerce.shared.v1B\nErrorProtoZCgithu"
    "b.com/ahmad-khatib0-org/megacommerce-pro"
    "to/gen/go/shared/v1;v1\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_shared_2fv1_2ferror_2eproto_deps[1] = {
        &::descriptor_table_shared_2fv1_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_shared_2fv1_2ferror_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_shared_2fv1_2ferror_2eproto = {
    false,
    false,
    513,
    descriptor_table_protodef_shared_2fv1_2ferror_2eproto,
    "shared/v1/error.proto",
    &descriptor_table_shared_2fv1_2ferror_2eproto_once,
    descriptor_table_shared_2fv1_2ferror_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_shared_2fv1_2ferror_2eproto::offsets,
    file_level_enum_descriptors_shared_2fv1_2ferror_2eproto,
    file_level_service_descriptors_shared_2fv1_2ferror_2eproto,
};
namespace shared {
namespace v1 {
// ===================================================================

class AppError::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AppError>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppError, _impl_._has_bits_);
};

void AppError::clear_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.errors_ != nullptr) _impl_.errors_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void AppError::clear_errors_nested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.errors_nested_ != nullptr) _impl_.errors_nested_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
AppError::AppError(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AppError_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shared.v1.AppError)
}
PROTOBUF_NDEBUG_INLINE AppError::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::shared::v1::AppError& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        message_(arena, from.message_),
        detailed_error_(arena, from.detailed_error_),
        request_id_(arena, from.request_id_),
        where_(arena, from.where_) {}

AppError::AppError(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AppError& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AppError_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AppError* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.errors_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.errors_)
                : nullptr;
  _impl_.errors_nested_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.errors_nested_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_code_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, status_code_),
           offsetof(Impl_, skip_translation_) -
               offsetof(Impl_, status_code_) +
               sizeof(Impl_::skip_translation_));

  // @@protoc_insertion_point(copy_constructor:shared.v1.AppError)
}
PROTOBUF_NDEBUG_INLINE AppError::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        id_(arena),
        message_(arena),
        detailed_error_(arena),
        request_id_(arena),
        where_(arena) {}

inline void AppError::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, errors_),
           0,
           offsetof(Impl_, skip_translation_) -
               offsetof(Impl_, errors_) +
               sizeof(Impl_::skip_translation_));
}
AppError::~AppError() {
  // @@protoc_insertion_point(destructor:shared.v1.AppError)
  SharedDtor(*this);
}
inline void AppError::SharedDtor(MessageLite& self) {
  AppError& this_ = static_cast<AppError&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.detailed_error_.Destroy();
  this_._impl_.request_id_.Destroy();
  this_._impl_.where_.Destroy();
  delete this_._impl_.errors_;
  delete this_._impl_.errors_nested_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AppError::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AppError(arena);
}
constexpr auto AppError::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AppError),
                                            alignof(AppError));
}
constexpr auto AppError::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AppError_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AppError::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AppError>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AppError::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AppError>(), &AppError::ByteSizeLong,
              &AppError::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AppError, _impl_._cached_size_),
          false,
      },
      &AppError::kDescriptorMethods,
      &descriptor_table_shared_2fv1_2ferror_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AppError_class_data_ =
        AppError::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AppError::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AppError_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AppError_class_data_.tc_table);
  return AppError_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 73, 2>
AppError::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppError, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AppError_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::shared::v1::AppError>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AppError, _impl_.id_)}},
    // string message = 2 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(AppError, _impl_.message_)}},
    // string detailed_error = 3 [json_name = "detailedError"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(AppError, _impl_.detailed_error_)}},
    // string request_id = 4 [json_name = "requestId"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(AppError, _impl_.request_id_)}},
    // int32 status_code = 5 [json_name = "statusCode"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppError, _impl_.status_code_), 7>(),
     {40, 7, 0, PROTOBUF_FIELD_OFFSET(AppError, _impl_.status_code_)}},
    // string where = 6 [json_name = "where"];
    {::_pbi::TcParser::FastUS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(AppError, _impl_.where_)}},
    // bool skip_translation = 7 [json_name = "skipTranslation"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppError, _impl_.skip_translation_), 8>(),
     {56, 8, 0, PROTOBUF_FIELD_OFFSET(AppError, _impl_.skip_translation_)}},
    // .shared.v1.StringMap errors = 8 [json_name = "errors"];
    {::_pbi::TcParser::FastMtS1,
     {66, 5, 0, PROTOBUF_FIELD_OFFSET(AppError, _impl_.errors_)}},
    // .shared.v1.NestedStringMap errors_nested = 9 [json_name = "errorsNested"];
    {::_pbi::TcParser::FastMtS1,
     {74, 6, 1, PROTOBUF_FIELD_OFFSET(AppError, _impl_.errors_nested_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(AppError, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 2 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(AppError, _impl_.message_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string detailed_error = 3 [json_name = "detailedError"];
    {PROTOBUF_FIELD_OFFSET(AppError, _impl_.detailed_error_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string request_id = 4 [json_name = "requestId"];
    {PROTOBUF_FIELD_OFFSET(AppError, _impl_.request_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 status_code = 5 [json_name = "statusCode"];
    {PROTOBUF_FIELD_OFFSET(AppError, _impl_.status_code_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string where = 6 [json_name = "where"];
    {PROTOBUF_FIELD_OFFSET(AppError, _impl_.where_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool skip_translation = 7 [json_name = "skipTranslation"];
    {PROTOBUF_FIELD_OFFSET(AppError, _impl_.skip_translation_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .shared.v1.StringMap errors = 8 [json_name = "errors"];
    {PROTOBUF_FIELD_OFFSET(AppError, _impl_.errors_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .shared.v1.NestedStringMap errors_nested = 9 [json_name = "errorsNested"];
    {PROTOBUF_FIELD_OFFSET(AppError, _impl_.errors_nested_), _Internal::kHasBitsOffset + 6, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::shared::v1::StringMap>()},
      {::_pbi::TcParser::GetTable<::shared::v1::NestedStringMap>()},
  }},
  {{
    "\22\2\7\16\12\0\5\0\0\0\0\0\0\0\0\0"
    "shared.v1.AppError"
    "id"
    "message"
    "detailed_error"
    "request_id"
    "where"
  }},
};
PROTOBUF_NOINLINE void AppError::Clear() {
// @@protoc_insertion_point(message_clear_start:shared.v1.AppError)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.detailed_error_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.request_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.where_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.errors_ != nullptr);
      _impl_.errors_->Clear();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.errors_nested_ != nullptr);
      _impl_.errors_nested_->Clear();
    }
  }
  _impl_.status_code_ = 0;
  _impl_.skip_translation_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AppError::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AppError& this_ = static_cast<const AppError&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AppError::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AppError& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:shared.v1.AppError)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shared.v1.AppError.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string message = 2 [json_name = "message"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shared.v1.AppError.message");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string detailed_error = 3 [json_name = "detailedError"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_detailed_error().empty()) {
      const ::std::string& _s = this_._internal_detailed_error();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shared.v1.AppError.detailed_error");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string request_id = 4 [json_name = "requestId"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_request_id().empty()) {
      const ::std::string& _s = this_._internal_request_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shared.v1.AppError.request_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // int32 status_code = 5 [json_name = "statusCode"];
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_status_code() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_status_code(), target);
    }
  }

  // string where = 6 [json_name = "where"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!this_._internal_where().empty()) {
      const ::std::string& _s = this_._internal_where();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shared.v1.AppError.where");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  // bool skip_translation = 7 [json_name = "skipTranslation"];
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_skip_translation() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          7, this_._internal_skip_translation(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .shared.v1.StringMap errors = 8 [json_name = "errors"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.errors_, this_._impl_.errors_->GetCachedSize(), target,
        stream);
  }

  // .shared.v1.NestedStringMap errors_nested = 9 [json_name = "errorsNested"];
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.errors_nested_, this_._impl_.errors_nested_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shared.v1.AppError)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AppError::ByteSizeLong(const MessageLite& base) {
  const AppError& this_ = static_cast<const AppError&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AppError::ByteSizeLong() const {
  const AppError& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:shared.v1.AppError)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string message = 2 [json_name = "message"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // string detailed_error = 3 [json_name = "detailedError"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_detailed_error().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_detailed_error());
      }
    }
    // string request_id = 4 [json_name = "requestId"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_request_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_request_id());
      }
    }
    // string where = 6 [json_name = "where"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!this_._internal_where().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_where());
      }
    }
    // .shared.v1.StringMap errors = 8 [json_name = "errors"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.errors_);
    }
    // .shared.v1.NestedStringMap errors_nested = 9 [json_name = "errorsNested"];
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.errors_nested_);
    }
    // int32 status_code = 5 [json_name = "statusCode"];
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_status_code() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_status_code());
      }
    }
  }
   {
    // bool skip_translation = 7 [json_name = "skipTranslation"];
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_skip_translation() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AppError::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppError*>(&to_msg);
  auto& from = static_cast<const AppError&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:shared.v1.AppError)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_detailed_error().empty()) {
        _this->_internal_set_detailed_error(from._internal_detailed_error());
      } else {
        if (_this->_impl_.detailed_error_.IsDefault()) {
          _this->_internal_set_detailed_error("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_request_id().empty()) {
        _this->_internal_set_request_id(from._internal_request_id());
      } else {
        if (_this->_impl_.request_id_.IsDefault()) {
          _this->_internal_set_request_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!from._internal_where().empty()) {
        _this->_internal_set_where(from._internal_where());
      } else {
        if (_this->_impl_.where_.IsDefault()) {
          _this->_internal_set_where("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.errors_ != nullptr);
      if (_this->_impl_.errors_ == nullptr) {
        _this->_impl_.errors_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.errors_);
      } else {
        _this->_impl_.errors_->MergeFrom(*from._impl_.errors_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.errors_nested_ != nullptr);
      if (_this->_impl_.errors_nested_ == nullptr) {
        _this->_impl_.errors_nested_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.errors_nested_);
      } else {
        _this->_impl_.errors_nested_->MergeFrom(*from._impl_.errors_nested_);
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_status_code() != 0) {
        _this->_impl_.status_code_ = from._impl_.status_code_;
      }
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    if (from._internal_skip_translation() != 0) {
      _this->_impl_.skip_translation_ = from._impl_.skip_translation_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppError::CopyFrom(const AppError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shared.v1.AppError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppError::InternalSwap(AppError* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.detailed_error_, &other->_impl_.detailed_error_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.where_, &other->_impl_.where_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppError, _impl_.skip_translation_)
      + sizeof(AppError::_impl_.skip_translation_)
      - PROTOBUF_FIELD_OFFSET(AppError, _impl_.errors_)>(
          reinterpret_cast<char*>(&_impl_.errors_),
          reinterpret_cast<char*>(&other->_impl_.errors_));
}

::google::protobuf::Metadata AppError::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace shared
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_shared_2fv1_2ferror_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
