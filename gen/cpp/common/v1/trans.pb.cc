// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/v1/trans.proto

#include "common/v1/trans.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace common {
namespace v1 {
constexpr TranslationsGetRequest::TranslationsGetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct TranslationsGetRequestDefaultTypeInternal {
  constexpr TranslationsGetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TranslationsGetRequestDefaultTypeInternal() {}
  union {
    TranslationsGetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TranslationsGetRequestDefaultTypeInternal _TranslationsGetRequest_default_instance_;
constexpr TranslationsGetResponse_DataEntry_DoNotUse::TranslationsGetResponse_DataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct TranslationsGetResponse_DataEntry_DoNotUseDefaultTypeInternal {
  constexpr TranslationsGetResponse_DataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TranslationsGetResponse_DataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TranslationsGetResponse_DataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TranslationsGetResponse_DataEntry_DoNotUseDefaultTypeInternal _TranslationsGetResponse_DataEntry_DoNotUse_default_instance_;
constexpr TranslationsGetResponse::TranslationsGetResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , error_(nullptr){}
struct TranslationsGetResponseDefaultTypeInternal {
  constexpr TranslationsGetResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TranslationsGetResponseDefaultTypeInternal() {}
  union {
    TranslationsGetResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TranslationsGetResponseDefaultTypeInternal _TranslationsGetResponse_default_instance_;
constexpr TranslationsForLangGetRequest::TranslationsForLangGetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : lang_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct TranslationsForLangGetRequestDefaultTypeInternal {
  constexpr TranslationsForLangGetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TranslationsForLangGetRequestDefaultTypeInternal() {}
  union {
    TranslationsForLangGetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TranslationsForLangGetRequestDefaultTypeInternal _TranslationsForLangGetRequest_default_instance_;
constexpr TranslationsForLangGetResponse::TranslationsForLangGetResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct TranslationsForLangGetResponseDefaultTypeInternal {
  constexpr TranslationsForLangGetResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TranslationsForLangGetResponseDefaultTypeInternal() {}
  union {
    TranslationsForLangGetResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TranslationsForLangGetResponseDefaultTypeInternal _TranslationsForLangGetResponse_default_instance_;
constexpr TranslationElement::TranslationElement(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct TranslationElementDefaultTypeInternal {
  constexpr TranslationElementDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TranslationElementDefaultTypeInternal() {}
  union {
    TranslationElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TranslationElementDefaultTypeInternal _TranslationElement_default_instance_;
constexpr TranslationElements::TranslationElements(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : trans_(){}
struct TranslationElementsDefaultTypeInternal {
  constexpr TranslationElementsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TranslationElementsDefaultTypeInternal() {}
  union {
    TranslationElements _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TranslationElementsDefaultTypeInternal _TranslationElements_default_instance_;
}  // namespace v1
}  // namespace common
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_common_2fv1_2ftrans_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_common_2fv1_2ftrans_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_common_2fv1_2ftrans_2eproto = nullptr;

const uint32_t TableStruct_common_2fv1_2ftrans_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationsGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationsGetResponse_DataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationsGetResponse_DataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationsGetResponse_DataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationsGetResponse_DataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationsGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationsGetResponse, data_),
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationsGetResponse, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationsForLangGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationsForLangGetRequest, lang_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationsForLangGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationsForLangGetResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationsForLangGetResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationElement, id_),
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationElement, tr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationElements, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::common::v1::TranslationElements, trans_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::common::v1::TranslationsGetRequest)},
  { 6, 14, -1, sizeof(::common::v1::TranslationsGetResponse_DataEntry_DoNotUse)},
  { 16, -1, -1, sizeof(::common::v1::TranslationsGetResponse)},
  { 24, -1, -1, sizeof(::common::v1::TranslationsForLangGetRequest)},
  { 31, -1, -1, sizeof(::common::v1::TranslationsForLangGetResponse)},
  { 40, -1, -1, sizeof(::common::v1::TranslationElement)},
  { 48, -1, -1, sizeof(::common::v1::TranslationElements)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::common::v1::_TranslationsGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::common::v1::_TranslationsGetResponse_DataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::common::v1::_TranslationsGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::common::v1::_TranslationsForLangGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::common::v1::_TranslationsForLangGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::common::v1::_TranslationElement_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::common::v1::_TranslationElements_default_instance_),
};

const char descriptor_table_protodef_common_2fv1_2ftrans_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025common/v1/trans.proto\022\tcommon.v1\032\025shar"
  "ed/v1/error.proto\"\030\n\026TranslationsGetRequ"
  "est\"\337\001\n\027TranslationsGetResponse\022@\n\004data\030"
  "\001 \003(\0132,.common.v1.TranslationsGetRespons"
  "e.DataEntryR\004data\022)\n\005error\030\002 \001(\0132\023.share"
  "d.v1.AppErrorR\005error\032W\n\tDataEntry\022\020\n\003key"
  "\030\001 \001(\tR\003key\0224\n\005value\030\002 \001(\0132\036.common.v1.T"
  "ranslationElementsR\005value:\0028\001\"3\n\035Transla"
  "tionsForLangGetRequest\022\022\n\004lang\030\001 \001(\tR\004la"
  "ng\"\217\001\n\036TranslationsForLangGetResponse\0224\n"
  "\004data\030\001 \001(\0132\036.common.v1.TranslationEleme"
  "ntsH\000R\004data\022+\n\005error\030\002 \001(\0132\023.shared.v1.A"
  "ppErrorH\000R\005errorB\n\n\010response\"4\n\022Translat"
  "ionElement\022\016\n\002id\030\001 \001(\tR\002id\022\016\n\002tr\030\002 \001(\tR\002"
  "tr\"J\n\023TranslationElements\0223\n\005trans\030\001 \003(\013"
  "2\035.common.v1.TranslationElementR\005transBp"
  "\n\032org.megacommerce.common.v1B\nTransProto"
  "ZCgithub.com/ahmad-khatib0-org/megacomme"
  "rce-proto/gen/go/common/v1;v1\370\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_common_2fv1_2ftrans_2eproto_deps[1] = {
  &::descriptor_table_shared_2fv1_2ferror_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_common_2fv1_2ftrans_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_common_2fv1_2ftrans_2eproto = {
  false, false, 760, descriptor_table_protodef_common_2fv1_2ftrans_2eproto, "common/v1/trans.proto", 
  &descriptor_table_common_2fv1_2ftrans_2eproto_once, descriptor_table_common_2fv1_2ftrans_2eproto_deps, 1, 7,
  schemas, file_default_instances, TableStruct_common_2fv1_2ftrans_2eproto::offsets,
  file_level_metadata_common_2fv1_2ftrans_2eproto, file_level_enum_descriptors_common_2fv1_2ftrans_2eproto, file_level_service_descriptors_common_2fv1_2ftrans_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_common_2fv1_2ftrans_2eproto_getter() {
  return &descriptor_table_common_2fv1_2ftrans_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_common_2fv1_2ftrans_2eproto(&descriptor_table_common_2fv1_2ftrans_2eproto);
namespace common {
namespace v1 {

// ===================================================================

class TranslationsGetRequest::_Internal {
 public:
};

TranslationsGetRequest::TranslationsGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:common.v1.TranslationsGetRequest)
}
TranslationsGetRequest::TranslationsGetRequest(const TranslationsGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.v1.TranslationsGetRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TranslationsGetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TranslationsGetRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata TranslationsGetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_common_2fv1_2ftrans_2eproto_getter, &descriptor_table_common_2fv1_2ftrans_2eproto_once,
      file_level_metadata_common_2fv1_2ftrans_2eproto[0]);
}

// ===================================================================

TranslationsGetResponse_DataEntry_DoNotUse::TranslationsGetResponse_DataEntry_DoNotUse() {}
TranslationsGetResponse_DataEntry_DoNotUse::TranslationsGetResponse_DataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TranslationsGetResponse_DataEntry_DoNotUse::MergeFrom(const TranslationsGetResponse_DataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TranslationsGetResponse_DataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_common_2fv1_2ftrans_2eproto_getter, &descriptor_table_common_2fv1_2ftrans_2eproto_once,
      file_level_metadata_common_2fv1_2ftrans_2eproto[1]);
}

// ===================================================================

class TranslationsGetResponse::_Internal {
 public:
  static const ::shared::v1::AppError& error(const TranslationsGetResponse* msg);
};

const ::shared::v1::AppError&
TranslationsGetResponse::_Internal::error(const TranslationsGetResponse* msg) {
  return *msg->error_;
}
void TranslationsGetResponse::clear_error() {
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
}
TranslationsGetResponse::TranslationsGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  data_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:common.v1.TranslationsGetResponse)
}
TranslationsGetResponse::TranslationsGetResponse(const TranslationsGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.MergeFrom(from.data_);
  if (from._internal_has_error()) {
    error_ = new ::shared::v1::AppError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:common.v1.TranslationsGetResponse)
}

inline void TranslationsGetResponse::SharedCtor() {
error_ = nullptr;
}

TranslationsGetResponse::~TranslationsGetResponse() {
  // @@protoc_insertion_point(destructor:common.v1.TranslationsGetResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TranslationsGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void TranslationsGetResponse::ArenaDtor(void* object) {
  TranslationsGetResponse* _this = reinterpret_cast< TranslationsGetResponse* >(object);
  (void)_this;
  _this->data_. ~MapField();
}
inline void TranslationsGetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &TranslationsGetResponse::ArenaDtor);
  }
}
void TranslationsGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TranslationsGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:common.v1.TranslationsGetResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TranslationsGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .common.v1.TranslationElements> data = 1 [json_name = "data"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&data_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .shared.v1.AppError error = 2 [json_name = "error"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TranslationsGetResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.v1.TranslationsGetResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .common.v1.TranslationElements> data = 1 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::common::v1::TranslationElements >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "common.v1.TranslationsGetResponse.DataEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_data().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::common::v1::TranslationElements >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::common::v1::TranslationElements >::const_iterator
          it = this->_internal_data().begin();
          it != this->_internal_data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = TranslationsGetResponse_DataEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::common::v1::TranslationElements >::const_iterator
          it = this->_internal_data().begin();
          it != this->_internal_data().end(); ++it) {
        target = TranslationsGetResponse_DataEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .shared.v1.AppError error = 2 [json_name = "error"];
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.v1.TranslationsGetResponse)
  return target;
}

size_t TranslationsGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.v1.TranslationsGetResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .common.v1.TranslationElements> data = 1 [json_name = "data"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_data_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::common::v1::TranslationElements >::const_iterator
      it = this->_internal_data().begin();
      it != this->_internal_data().end(); ++it) {
    total_size += TranslationsGetResponse_DataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .shared.v1.AppError error = 2 [json_name = "error"];
  if (this->_internal_has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TranslationsGetResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TranslationsGetResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TranslationsGetResponse::GetClassData() const { return &_class_data_; }

void TranslationsGetResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TranslationsGetResponse *>(to)->MergeFrom(
      static_cast<const TranslationsGetResponse &>(from));
}


void TranslationsGetResponse::MergeFrom(const TranslationsGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.v1.TranslationsGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from._internal_has_error()) {
    _internal_mutable_error()->::shared::v1::AppError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TranslationsGetResponse::CopyFrom(const TranslationsGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.v1.TranslationsGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TranslationsGetResponse::IsInitialized() const {
  return true;
}

void TranslationsGetResponse::InternalSwap(TranslationsGetResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TranslationsGetResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_common_2fv1_2ftrans_2eproto_getter, &descriptor_table_common_2fv1_2ftrans_2eproto_once,
      file_level_metadata_common_2fv1_2ftrans_2eproto[2]);
}

// ===================================================================

class TranslationsForLangGetRequest::_Internal {
 public:
};

TranslationsForLangGetRequest::TranslationsForLangGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:common.v1.TranslationsForLangGetRequest)
}
TranslationsForLangGetRequest::TranslationsForLangGetRequest(const TranslationsForLangGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  lang_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    lang_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lang().empty()) {
    lang_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_lang(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:common.v1.TranslationsForLangGetRequest)
}

inline void TranslationsForLangGetRequest::SharedCtor() {
lang_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  lang_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TranslationsForLangGetRequest::~TranslationsForLangGetRequest() {
  // @@protoc_insertion_point(destructor:common.v1.TranslationsForLangGetRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TranslationsForLangGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  lang_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TranslationsForLangGetRequest::ArenaDtor(void* object) {
  TranslationsForLangGetRequest* _this = reinterpret_cast< TranslationsForLangGetRequest* >(object);
  (void)_this;
}
void TranslationsForLangGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TranslationsForLangGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TranslationsForLangGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:common.v1.TranslationsForLangGetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lang_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TranslationsForLangGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string lang = 1 [json_name = "lang"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_lang();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "common.v1.TranslationsForLangGetRequest.lang"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TranslationsForLangGetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.v1.TranslationsForLangGetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string lang = 1 [json_name = "lang"];
  if (!this->_internal_lang().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lang().data(), static_cast<int>(this->_internal_lang().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "common.v1.TranslationsForLangGetRequest.lang");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_lang(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.v1.TranslationsForLangGetRequest)
  return target;
}

size_t TranslationsForLangGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.v1.TranslationsForLangGetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string lang = 1 [json_name = "lang"];
  if (!this->_internal_lang().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lang());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TranslationsForLangGetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TranslationsForLangGetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TranslationsForLangGetRequest::GetClassData() const { return &_class_data_; }

void TranslationsForLangGetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TranslationsForLangGetRequest *>(to)->MergeFrom(
      static_cast<const TranslationsForLangGetRequest &>(from));
}


void TranslationsForLangGetRequest::MergeFrom(const TranslationsForLangGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.v1.TranslationsForLangGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_lang().empty()) {
    _internal_set_lang(from._internal_lang());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TranslationsForLangGetRequest::CopyFrom(const TranslationsForLangGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.v1.TranslationsForLangGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TranslationsForLangGetRequest::IsInitialized() const {
  return true;
}

void TranslationsForLangGetRequest::InternalSwap(TranslationsForLangGetRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &lang_, lhs_arena,
      &other->lang_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TranslationsForLangGetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_common_2fv1_2ftrans_2eproto_getter, &descriptor_table_common_2fv1_2ftrans_2eproto_once,
      file_level_metadata_common_2fv1_2ftrans_2eproto[3]);
}

// ===================================================================

class TranslationsForLangGetResponse::_Internal {
 public:
  static const ::common::v1::TranslationElements& data(const TranslationsForLangGetResponse* msg);
  static const ::shared::v1::AppError& error(const TranslationsForLangGetResponse* msg);
};

const ::common::v1::TranslationElements&
TranslationsForLangGetResponse::_Internal::data(const TranslationsForLangGetResponse* msg) {
  return *msg->response_.data_;
}
const ::shared::v1::AppError&
TranslationsForLangGetResponse::_Internal::error(const TranslationsForLangGetResponse* msg) {
  return *msg->response_.error_;
}
void TranslationsForLangGetResponse::set_allocated_data(::common::v1::TranslationElements* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_response();
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::common::v1::TranslationElements>::GetOwningArena(data);
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    set_has_data();
    response_.data_ = data;
  }
  // @@protoc_insertion_point(field_set_allocated:common.v1.TranslationsForLangGetResponse.data)
}
void TranslationsForLangGetResponse::set_allocated_error(::shared::v1::AppError* error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_response();
  if (error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(error));
    if (message_arena != submessage_arena) {
      error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    response_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:common.v1.TranslationsForLangGetResponse.error)
}
void TranslationsForLangGetResponse::clear_error() {
  if (_internal_has_error()) {
    if (GetArenaForAllocation() == nullptr) {
      delete response_.error_;
    }
    clear_has_response();
  }
}
TranslationsForLangGetResponse::TranslationsForLangGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:common.v1.TranslationsForLangGetResponse)
}
TranslationsForLangGetResponse::TranslationsForLangGetResponse(const TranslationsForLangGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_response();
  switch (from.response_case()) {
    case kData: {
      _internal_mutable_data()->::common::v1::TranslationElements::MergeFrom(from._internal_data());
      break;
    }
    case kError: {
      _internal_mutable_error()->::shared::v1::AppError::MergeFrom(from._internal_error());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:common.v1.TranslationsForLangGetResponse)
}

inline void TranslationsForLangGetResponse::SharedCtor() {
clear_has_response();
}

TranslationsForLangGetResponse::~TranslationsForLangGetResponse() {
  // @@protoc_insertion_point(destructor:common.v1.TranslationsForLangGetResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TranslationsForLangGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_response()) {
    clear_response();
  }
}

void TranslationsForLangGetResponse::ArenaDtor(void* object) {
  TranslationsForLangGetResponse* _this = reinterpret_cast< TranslationsForLangGetResponse* >(object);
  (void)_this;
}
void TranslationsForLangGetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TranslationsForLangGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TranslationsForLangGetResponse::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:common.v1.TranslationsForLangGetResponse)
  switch (response_case()) {
    case kData: {
      if (GetArenaForAllocation() == nullptr) {
        delete response_.data_;
      }
      break;
    }
    case kError: {
      if (GetArenaForAllocation() == nullptr) {
        delete response_.error_;
      }
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_NOT_SET;
}


void TranslationsForLangGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:common.v1.TranslationsForLangGetResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_response();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TranslationsForLangGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .common.v1.TranslationElements data = 1 [json_name = "data"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .shared.v1.AppError error = 2 [json_name = "error"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TranslationsForLangGetResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.v1.TranslationsForLangGetResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.v1.TranslationElements data = 1 [json_name = "data"];
  if (_internal_has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::data(this), target, stream);
  }

  // .shared.v1.AppError error = 2 [json_name = "error"];
  if (_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.v1.TranslationsForLangGetResponse)
  return target;
}

size_t TranslationsForLangGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.v1.TranslationsForLangGetResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (response_case()) {
    // .common.v1.TranslationElements data = 1 [json_name = "data"];
    case kData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_.data_);
      break;
    }
    // .shared.v1.AppError error = 2 [json_name = "error"];
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_.error_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TranslationsForLangGetResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TranslationsForLangGetResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TranslationsForLangGetResponse::GetClassData() const { return &_class_data_; }

void TranslationsForLangGetResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TranslationsForLangGetResponse *>(to)->MergeFrom(
      static_cast<const TranslationsForLangGetResponse &>(from));
}


void TranslationsForLangGetResponse::MergeFrom(const TranslationsForLangGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.v1.TranslationsForLangGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.response_case()) {
    case kData: {
      _internal_mutable_data()->::common::v1::TranslationElements::MergeFrom(from._internal_data());
      break;
    }
    case kError: {
      _internal_mutable_error()->::shared::v1::AppError::MergeFrom(from._internal_error());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TranslationsForLangGetResponse::CopyFrom(const TranslationsForLangGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.v1.TranslationsForLangGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TranslationsForLangGetResponse::IsInitialized() const {
  return true;
}

void TranslationsForLangGetResponse::InternalSwap(TranslationsForLangGetResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(response_, other->response_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TranslationsForLangGetResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_common_2fv1_2ftrans_2eproto_getter, &descriptor_table_common_2fv1_2ftrans_2eproto_once,
      file_level_metadata_common_2fv1_2ftrans_2eproto[4]);
}

// ===================================================================

class TranslationElement::_Internal {
 public:
};

TranslationElement::TranslationElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:common.v1.TranslationElement)
}
TranslationElement::TranslationElement(const TranslationElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  tr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    tr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tr().empty()) {
    tr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tr(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:common.v1.TranslationElement)
}

inline void TranslationElement::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
tr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  tr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TranslationElement::~TranslationElement() {
  // @@protoc_insertion_point(destructor:common.v1.TranslationElement)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TranslationElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TranslationElement::ArenaDtor(void* object) {
  TranslationElement* _this = reinterpret_cast< TranslationElement* >(object);
  (void)_this;
}
void TranslationElement::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TranslationElement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TranslationElement::Clear() {
// @@protoc_insertion_point(message_clear_start:common.v1.TranslationElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  tr_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TranslationElement::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "common.v1.TranslationElement.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string tr = 2 [json_name = "tr"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_tr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "common.v1.TranslationElement.tr"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TranslationElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.v1.TranslationElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "common.v1.TranslationElement.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string tr = 2 [json_name = "tr"];
  if (!this->_internal_tr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tr().data(), static_cast<int>(this->_internal_tr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "common.v1.TranslationElement.tr");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.v1.TranslationElement)
  return target;
}

size_t TranslationElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.v1.TranslationElement)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string tr = 2 [json_name = "tr"];
  if (!this->_internal_tr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tr());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TranslationElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TranslationElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TranslationElement::GetClassData() const { return &_class_data_; }

void TranslationElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TranslationElement *>(to)->MergeFrom(
      static_cast<const TranslationElement &>(from));
}


void TranslationElement::MergeFrom(const TranslationElement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.v1.TranslationElement)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_tr().empty()) {
    _internal_set_tr(from._internal_tr());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TranslationElement::CopyFrom(const TranslationElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.v1.TranslationElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TranslationElement::IsInitialized() const {
  return true;
}

void TranslationElement::InternalSwap(TranslationElement* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tr_, lhs_arena,
      &other->tr_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TranslationElement::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_common_2fv1_2ftrans_2eproto_getter, &descriptor_table_common_2fv1_2ftrans_2eproto_once,
      file_level_metadata_common_2fv1_2ftrans_2eproto[5]);
}

// ===================================================================

class TranslationElements::_Internal {
 public:
};

TranslationElements::TranslationElements(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  trans_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:common.v1.TranslationElements)
}
TranslationElements::TranslationElements(const TranslationElements& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      trans_(from.trans_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.v1.TranslationElements)
}

inline void TranslationElements::SharedCtor() {
}

TranslationElements::~TranslationElements() {
  // @@protoc_insertion_point(destructor:common.v1.TranslationElements)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TranslationElements::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TranslationElements::ArenaDtor(void* object) {
  TranslationElements* _this = reinterpret_cast< TranslationElements* >(object);
  (void)_this;
}
void TranslationElements::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TranslationElements::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TranslationElements::Clear() {
// @@protoc_insertion_point(message_clear_start:common.v1.TranslationElements)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trans_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TranslationElements::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .common.v1.TranslationElement trans = 1 [json_name = "trans"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_trans(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TranslationElements::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common.v1.TranslationElements)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.v1.TranslationElement trans = 1 [json_name = "trans"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_trans_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_trans(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.v1.TranslationElements)
  return target;
}

size_t TranslationElements::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.v1.TranslationElements)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .common.v1.TranslationElement trans = 1 [json_name = "trans"];
  total_size += 1UL * this->_internal_trans_size();
  for (const auto& msg : this->trans_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TranslationElements::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TranslationElements::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TranslationElements::GetClassData() const { return &_class_data_; }

void TranslationElements::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TranslationElements *>(to)->MergeFrom(
      static_cast<const TranslationElements &>(from));
}


void TranslationElements::MergeFrom(const TranslationElements& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.v1.TranslationElements)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  trans_.MergeFrom(from.trans_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TranslationElements::CopyFrom(const TranslationElements& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.v1.TranslationElements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TranslationElements::IsInitialized() const {
  return true;
}

void TranslationElements::InternalSwap(TranslationElements* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  trans_.InternalSwap(&other->trans_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TranslationElements::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_common_2fv1_2ftrans_2eproto_getter, &descriptor_table_common_2fv1_2ftrans_2eproto_once,
      file_level_metadata_common_2fv1_2ftrans_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace common
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::common::v1::TranslationsGetRequest* Arena::CreateMaybeMessage< ::common::v1::TranslationsGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::v1::TranslationsGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::common::v1::TranslationsGetResponse_DataEntry_DoNotUse* Arena::CreateMaybeMessage< ::common::v1::TranslationsGetResponse_DataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::v1::TranslationsGetResponse_DataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::common::v1::TranslationsGetResponse* Arena::CreateMaybeMessage< ::common::v1::TranslationsGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::v1::TranslationsGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::common::v1::TranslationsForLangGetRequest* Arena::CreateMaybeMessage< ::common::v1::TranslationsForLangGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::v1::TranslationsForLangGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::common::v1::TranslationsForLangGetResponse* Arena::CreateMaybeMessage< ::common::v1::TranslationsForLangGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::v1::TranslationsForLangGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::common::v1::TranslationElement* Arena::CreateMaybeMessage< ::common::v1::TranslationElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::v1::TranslationElement >(arena);
}
template<> PROTOBUF_NOINLINE ::common::v1::TranslationElements* Arena::CreateMaybeMessage< ::common::v1::TranslationElements >(Arena* arena) {
  return Arena::CreateMessageInternal< ::common::v1::TranslationElements >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
