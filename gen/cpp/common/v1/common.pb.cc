// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/v1/common.proto

#include "common/v1/common.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace common {
namespace v1 {
}  // namespace v1
}  // namespace common
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_common_2fv1_2fcommon_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_common_2fv1_2fcommon_2eproto = nullptr;
const uint32_t TableStruct_common_2fv1_2fcommon_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_common_2fv1_2fcommon_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026common/v1/common.proto\022\tcommon.v1\032\026com"
  "mon/v1/config.proto\032\025common/v1/trans.pro"
  "to\032\025common/v1/types.proto2\205\004\n\rCommonServ"
  "ice\0229\n\004Ping\022\026.common.v1.PingRequest\032\027.co"
  "mmon.v1.PingResponse\"\000\022F\n\tConfigGet\022\033.co"
  "mmon.v1.ConfigGetRequest\032\034.common.v1.Con"
  "figGetResponse\022O\n\014ConfigUpdate\022\036.common."
  "v1.ConfigUpdateRequest\032\037.common.v1.Confi"
  "gUpdateResponse\022W\n\016ConfigListener\022 .comm"
  "on.v1.ConfigListenerRequest\032!.common.v1."
  "ConfigListenerResponse0\001\022X\n\017Translations"
  "Get\022!.common.v1.TranslationsGetRequest\032\""
  ".common.v1.TranslationsGetResponse\022m\n\026Tr"
  "anslationsForLangGet\022(.common.v1.Transla"
  "tionsForLangGetRequest\032).common.v1.Trans"
  "lationsForLangGetResponseBq\n\032org.megacom"
  "merce.common.v1B\013CommonProtoZCgithub.com"
  "/ahmad-khatib0-org/megacommerce-proto/ge"
  "n/go/common/v1;v1\370\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_common_2fv1_2fcommon_2eproto_deps[3] = {
  &::descriptor_table_common_2fv1_2fconfig_2eproto,
  &::descriptor_table_common_2fv1_2ftrans_2eproto,
  &::descriptor_table_common_2fv1_2ftypes_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_common_2fv1_2fcommon_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_common_2fv1_2fcommon_2eproto = {
  false, false, 748, descriptor_table_protodef_common_2fv1_2fcommon_2eproto, "common/v1/common.proto", 
  &descriptor_table_common_2fv1_2fcommon_2eproto_once, descriptor_table_common_2fv1_2fcommon_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_common_2fv1_2fcommon_2eproto::offsets,
  nullptr, file_level_enum_descriptors_common_2fv1_2fcommon_2eproto, file_level_service_descriptors_common_2fv1_2fcommon_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_common_2fv1_2fcommon_2eproto_getter() {
  return &descriptor_table_common_2fv1_2fcommon_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_common_2fv1_2fcommon_2eproto(&descriptor_table_common_2fv1_2fcommon_2eproto);
namespace common {
namespace v1 {

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace common
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
