// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: users/v1/token.proto
// Protobuf C++ Version: 6.31.1

#ifndef users_2fv1_2ftoken_2eproto_2epb_2eh
#define users_2fv1_2ftoken_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field.h"
#include "google/protobuf/unknown_field_set.h"
#include "shared/v1/struct.pb.h"
#include "shared/v1/time.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_users_2fv1_2ftoken_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_users_2fv1_2ftoken_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_users_2fv1_2ftoken_2eproto;
}  // extern "C"
namespace users {
namespace v1 {
class JwtClaims;
struct JwtClaimsDefaultTypeInternal;
extern JwtClaimsDefaultTypeInternal _JwtClaims_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull JwtClaims_class_data_;
class JwtClaims_CustomEntry_DoNotUse;
struct JwtClaims_CustomEntry_DoNotUseDefaultTypeInternal;
extern JwtClaims_CustomEntry_DoNotUseDefaultTypeInternal _JwtClaims_CustomEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull JwtClaims_CustomEntry_DoNotUse_class_data_;
class Token;
struct TokenDefaultTypeInternal;
extern TokenDefaultTypeInternal _Token_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Token_class_data_;
}  // namespace v1
}  // namespace users
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace users {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class Token final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:users.v1.Token) */ {
 public:
  inline Token() : Token(nullptr) {}
  ~Token() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Token* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Token));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Token(::google::protobuf::internal::ConstantInitialized);

  inline Token(const Token& from) : Token(nullptr, from) {}
  inline Token(Token&& from) noexcept
      : Token(nullptr, ::std::move(from)) {}
  inline Token& operator=(const Token& from) {
    CopyFrom(from);
    return *this;
  }
  inline Token& operator=(Token&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Token& default_instance() {
    return *reinterpret_cast<const Token*>(
        &_Token_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Token& a, Token& b) { a.Swap(&b); }
  inline void Swap(Token* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Token* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Token* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Token>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Token& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Token& from) { Token::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Token* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "users.v1.Token"; }

 protected:
  explicit Token(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Token(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Token& from);
  Token(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Token&& from) noexcept
      : Token(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kUserIdFieldNumber = 2,
    kTokenFieldNumber = 3,
    kTypeFieldNumber = 4,
    kCreatedAtFieldNumber = 6,
    kExpiresAtFieldNumber = 7,
    kUsedFieldNumber = 5,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // string user_id = 2 [json_name = "userId"];
  void clear_user_id() ;
  const ::std::string& user_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_user_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_user_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_user_id();
  void set_allocated_user_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_user_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_user_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_user_id();

  public:
  // string token = 3 [json_name = "token"];
  void clear_token() ;
  const ::std::string& token() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_token();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_token();
  void set_allocated_token(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_token() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_token(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_token();

  public:
  // string type = 4 [json_name = "type"];
  void clear_type() ;
  const ::std::string& type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_type();
  void set_allocated_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_type();

  public:
  // int64 created_at = 6 [json_name = "createdAt"];
  void clear_created_at() ;
  ::int64_t created_at() const;
  void set_created_at(::int64_t value);

  private:
  ::int64_t _internal_created_at() const;
  void _internal_set_created_at(::int64_t value);

  public:
  // int64 expires_at = 7 [json_name = "expiresAt"];
  void clear_expires_at() ;
  ::int64_t expires_at() const;
  void set_expires_at(::int64_t value);

  private:
  ::int64_t _internal_expires_at() const;
  void _internal_set_expires_at(::int64_t value);

  public:
  // bool used = 5 [json_name = "used"];
  void clear_used() ;
  bool used() const;
  void set_used(bool value);

  private:
  bool _internal_used() const;
  void _internal_set_used(bool value);

  public:
  // @@protoc_insertion_point(class_scope:users.v1.Token)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   0, 41,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Token& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr user_id_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::int64_t created_at_;
    ::int64_t expires_at_;
    bool used_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_users_2fv1_2ftoken_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Token_class_data_;
// -------------------------------------------------------------------

class JwtClaims_CustomEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  JwtClaims_CustomEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JwtClaims_CustomEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit JwtClaims_CustomEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_JwtClaims_CustomEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_users_2fv1_2ftoken_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 42,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull JwtClaims_CustomEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class JwtClaims final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:users.v1.JwtClaims) */ {
 public:
  inline JwtClaims() : JwtClaims(nullptr) {}
  ~JwtClaims() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(JwtClaims* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(JwtClaims));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JwtClaims(::google::protobuf::internal::ConstantInitialized);

  inline JwtClaims(const JwtClaims& from) : JwtClaims(nullptr, from) {}
  inline JwtClaims(JwtClaims&& from) noexcept
      : JwtClaims(nullptr, ::std::move(from)) {}
  inline JwtClaims& operator=(const JwtClaims& from) {
    CopyFrom(from);
    return *this;
  }
  inline JwtClaims& operator=(JwtClaims&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JwtClaims& default_instance() {
    return *reinterpret_cast<const JwtClaims*>(
        &_JwtClaims_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(JwtClaims& a, JwtClaims& b) { a.Swap(&b); }
  inline void Swap(JwtClaims* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JwtClaims* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JwtClaims* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<JwtClaims>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JwtClaims& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JwtClaims& from) { JwtClaims::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(JwtClaims* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "users.v1.JwtClaims"; }

 protected:
  explicit JwtClaims(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  JwtClaims(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const JwtClaims& from);
  JwtClaims(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, JwtClaims&& from) noexcept
      : JwtClaims(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAudFieldNumber = 3,
    kCustomFieldNumber = 100,
    kIssFieldNumber = 1,
    kSubFieldNumber = 2,
    kJtiFieldNumber = 7,
    kExpFieldNumber = 4,
    kNbfFieldNumber = 5,
    kIatFieldNumber = 6,
  };
  // repeated string aud = 3 [json_name = "aud"];
  int aud_size() const;
  private:
  int _internal_aud_size() const;

  public:
  void clear_aud() ;
  const ::std::string& aud(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_aud(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_aud(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_aud();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_aud(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& aud() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_aud();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_aud() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_aud();

  public:
  // map<string, .shared.v1.Value> custom = 100 [json_name = "custom"];
  int custom_size() const;
  private:
  int _internal_custom_size() const;

  public:
  void clear_custom() ;
  const ::google::protobuf::Map<std::string, ::shared::v1::Value>& custom() const;
  ::google::protobuf::Map<std::string, ::shared::v1::Value>* PROTOBUF_NONNULL mutable_custom();

  private:
  const ::google::protobuf::Map<std::string, ::shared::v1::Value>& _internal_custom() const;
  ::google::protobuf::Map<std::string, ::shared::v1::Value>* PROTOBUF_NONNULL _internal_mutable_custom();

  public:
  // string iss = 1 [json_name = "iss"];
  void clear_iss() ;
  const ::std::string& iss() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_iss(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_iss();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_iss();
  void set_allocated_iss(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_iss() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_iss(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_iss();

  public:
  // string sub = 2 [json_name = "sub"];
  void clear_sub() ;
  const ::std::string& sub() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_sub(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_sub();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_sub();
  void set_allocated_sub(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_sub() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_sub(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_sub();

  public:
  // string jti = 7 [json_name = "jti"];
  void clear_jti() ;
  const ::std::string& jti() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_jti(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_jti();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_jti();
  void set_allocated_jti(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_jti() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_jti(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_jti();

  public:
  // .shared.v1.Timestamp exp = 4 [json_name = "exp"];
  bool has_exp() const;
  void clear_exp() ;
  const ::shared::v1::Timestamp& exp() const;
  [[nodiscard]] ::shared::v1::Timestamp* PROTOBUF_NULLABLE release_exp();
  ::shared::v1::Timestamp* PROTOBUF_NONNULL mutable_exp();
  void set_allocated_exp(::shared::v1::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_exp(::shared::v1::Timestamp* PROTOBUF_NULLABLE value);
  ::shared::v1::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_exp();

  private:
  const ::shared::v1::Timestamp& _internal_exp() const;
  ::shared::v1::Timestamp* PROTOBUF_NONNULL _internal_mutable_exp();

  public:
  // .shared.v1.Timestamp nbf = 5 [json_name = "nbf"];
  bool has_nbf() const;
  void clear_nbf() ;
  const ::shared::v1::Timestamp& nbf() const;
  [[nodiscard]] ::shared::v1::Timestamp* PROTOBUF_NULLABLE release_nbf();
  ::shared::v1::Timestamp* PROTOBUF_NONNULL mutable_nbf();
  void set_allocated_nbf(::shared::v1::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_nbf(::shared::v1::Timestamp* PROTOBUF_NULLABLE value);
  ::shared::v1::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_nbf();

  private:
  const ::shared::v1::Timestamp& _internal_nbf() const;
  ::shared::v1::Timestamp* PROTOBUF_NONNULL _internal_mutable_nbf();

  public:
  // .shared.v1.Timestamp iat = 6 [json_name = "iat"];
  bool has_iat() const;
  void clear_iat() ;
  const ::shared::v1::Timestamp& iat() const;
  [[nodiscard]] ::shared::v1::Timestamp* PROTOBUF_NULLABLE release_iat();
  ::shared::v1::Timestamp* PROTOBUF_NONNULL mutable_iat();
  void set_allocated_iat(::shared::v1::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_iat(::shared::v1::Timestamp* PROTOBUF_NULLABLE value);
  ::shared::v1::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_iat();

  private:
  const ::shared::v1::Timestamp& _internal_iat() const;
  ::shared::v1::Timestamp* PROTOBUF_NONNULL _internal_mutable_iat();

  public:
  // @@protoc_insertion_point(class_scope:users.v1.JwtClaims)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8,
                                   5, 53,
                                   7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const JwtClaims& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> aud_;
    ::google::protobuf::internal::MapField<JwtClaims_CustomEntry_DoNotUse, std::string, ::shared::v1::Value,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        custom_;
    ::google::protobuf::internal::ArenaStringPtr iss_;
    ::google::protobuf::internal::ArenaStringPtr sub_;
    ::google::protobuf::internal::ArenaStringPtr jti_;
    ::shared::v1::Timestamp* PROTOBUF_NULLABLE exp_;
    ::shared::v1::Timestamp* PROTOBUF_NULLABLE nbf_;
    ::shared::v1::Timestamp* PROTOBUF_NULLABLE iat_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_users_2fv1_2ftoken_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull JwtClaims_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// JwtClaims

// string iss = 1 [json_name = "iss"];
inline void JwtClaims::clear_iss() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iss_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& JwtClaims::iss() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:users.v1.JwtClaims.iss)
  return _internal_iss();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void JwtClaims::set_iss(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.iss_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:users.v1.JwtClaims.iss)
}
inline ::std::string* PROTOBUF_NONNULL JwtClaims::mutable_iss()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_iss();
  // @@protoc_insertion_point(field_mutable:users.v1.JwtClaims.iss)
  return _s;
}
inline const ::std::string& JwtClaims::_internal_iss() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.iss_.Get();
}
inline void JwtClaims::_internal_set_iss(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.iss_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL JwtClaims::_internal_mutable_iss() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.iss_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE JwtClaims::release_iss() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:users.v1.JwtClaims.iss)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.iss_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.iss_.Set("", GetArena());
  }
  return released;
}
inline void JwtClaims::set_allocated_iss(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.iss_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.iss_.IsDefault()) {
    _impl_.iss_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:users.v1.JwtClaims.iss)
}

// string sub = 2 [json_name = "sub"];
inline void JwtClaims::clear_sub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sub_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& JwtClaims::sub() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:users.v1.JwtClaims.sub)
  return _internal_sub();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void JwtClaims::set_sub(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.sub_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:users.v1.JwtClaims.sub)
}
inline ::std::string* PROTOBUF_NONNULL JwtClaims::mutable_sub()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_sub();
  // @@protoc_insertion_point(field_mutable:users.v1.JwtClaims.sub)
  return _s;
}
inline const ::std::string& JwtClaims::_internal_sub() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sub_.Get();
}
inline void JwtClaims::_internal_set_sub(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.sub_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL JwtClaims::_internal_mutable_sub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.sub_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE JwtClaims::release_sub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:users.v1.JwtClaims.sub)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.sub_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.sub_.Set("", GetArena());
  }
  return released;
}
inline void JwtClaims::set_allocated_sub(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.sub_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sub_.IsDefault()) {
    _impl_.sub_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:users.v1.JwtClaims.sub)
}

// repeated string aud = 3 [json_name = "aud"];
inline int JwtClaims::_internal_aud_size() const {
  return _internal_aud().size();
}
inline int JwtClaims::aud_size() const {
  return _internal_aud_size();
}
inline void JwtClaims::clear_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL JwtClaims::add_aud()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_aud()->Add();
  // @@protoc_insertion_point(field_add_mutable:users.v1.JwtClaims.aud)
  return _s;
}
inline const ::std::string& JwtClaims::aud(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:users.v1.JwtClaims.aud)
  return _internal_aud().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL JwtClaims::mutable_aud(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:users.v1.JwtClaims.aud)
  return _internal_mutable_aud()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void JwtClaims::set_aud(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_aud()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:users.v1.JwtClaims.aud)
}
template <typename Arg_, typename... Args_>
inline void JwtClaims::add_aud(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_aud(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:users.v1.JwtClaims.aud)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& JwtClaims::aud()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:users.v1.JwtClaims.aud)
  return _internal_aud();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
JwtClaims::mutable_aud() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:users.v1.JwtClaims.aud)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_aud();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
JwtClaims::_internal_aud() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.aud_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
JwtClaims::_internal_mutable_aud() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.aud_;
}

// .shared.v1.Timestamp exp = 4 [json_name = "exp"];
inline bool JwtClaims::has_exp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.exp_ != nullptr);
  return value;
}
inline const ::shared::v1::Timestamp& JwtClaims::_internal_exp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::shared::v1::Timestamp* p = _impl_.exp_;
  return p != nullptr ? *p : reinterpret_cast<const ::shared::v1::Timestamp&>(::shared::v1::_Timestamp_default_instance_);
}
inline const ::shared::v1::Timestamp& JwtClaims::exp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:users.v1.JwtClaims.exp)
  return _internal_exp();
}
inline void JwtClaims::unsafe_arena_set_allocated_exp(
    ::shared::v1::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.exp_);
  }
  _impl_.exp_ = reinterpret_cast<::shared::v1::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:users.v1.JwtClaims.exp)
}
inline ::shared::v1::Timestamp* PROTOBUF_NULLABLE JwtClaims::release_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::shared::v1::Timestamp* released = _impl_.exp_;
  _impl_.exp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::shared::v1::Timestamp* PROTOBUF_NULLABLE JwtClaims::unsafe_arena_release_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:users.v1.JwtClaims.exp)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::shared::v1::Timestamp* temp = _impl_.exp_;
  _impl_.exp_ = nullptr;
  return temp;
}
inline ::shared::v1::Timestamp* PROTOBUF_NONNULL JwtClaims::_internal_mutable_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::shared::v1::Timestamp>(GetArena());
    _impl_.exp_ = reinterpret_cast<::shared::v1::Timestamp*>(p);
  }
  return _impl_.exp_;
}
inline ::shared::v1::Timestamp* PROTOBUF_NONNULL JwtClaims::mutable_exp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::shared::v1::Timestamp* _msg = _internal_mutable_exp();
  // @@protoc_insertion_point(field_mutable:users.v1.JwtClaims.exp)
  return _msg;
}
inline void JwtClaims::set_allocated_exp(::shared::v1::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.exp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.exp_ = reinterpret_cast<::shared::v1::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:users.v1.JwtClaims.exp)
}

// .shared.v1.Timestamp nbf = 5 [json_name = "nbf"];
inline bool JwtClaims::has_nbf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nbf_ != nullptr);
  return value;
}
inline const ::shared::v1::Timestamp& JwtClaims::_internal_nbf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::shared::v1::Timestamp* p = _impl_.nbf_;
  return p != nullptr ? *p : reinterpret_cast<const ::shared::v1::Timestamp&>(::shared::v1::_Timestamp_default_instance_);
}
inline const ::shared::v1::Timestamp& JwtClaims::nbf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:users.v1.JwtClaims.nbf)
  return _internal_nbf();
}
inline void JwtClaims::unsafe_arena_set_allocated_nbf(
    ::shared::v1::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nbf_);
  }
  _impl_.nbf_ = reinterpret_cast<::shared::v1::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:users.v1.JwtClaims.nbf)
}
inline ::shared::v1::Timestamp* PROTOBUF_NULLABLE JwtClaims::release_nbf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::shared::v1::Timestamp* released = _impl_.nbf_;
  _impl_.nbf_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::shared::v1::Timestamp* PROTOBUF_NULLABLE JwtClaims::unsafe_arena_release_nbf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:users.v1.JwtClaims.nbf)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::shared::v1::Timestamp* temp = _impl_.nbf_;
  _impl_.nbf_ = nullptr;
  return temp;
}
inline ::shared::v1::Timestamp* PROTOBUF_NONNULL JwtClaims::_internal_mutable_nbf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nbf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::shared::v1::Timestamp>(GetArena());
    _impl_.nbf_ = reinterpret_cast<::shared::v1::Timestamp*>(p);
  }
  return _impl_.nbf_;
}
inline ::shared::v1::Timestamp* PROTOBUF_NONNULL JwtClaims::mutable_nbf()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::shared::v1::Timestamp* _msg = _internal_mutable_nbf();
  // @@protoc_insertion_point(field_mutable:users.v1.JwtClaims.nbf)
  return _msg;
}
inline void JwtClaims::set_allocated_nbf(::shared::v1::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nbf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.nbf_ = reinterpret_cast<::shared::v1::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:users.v1.JwtClaims.nbf)
}

// .shared.v1.Timestamp iat = 6 [json_name = "iat"];
inline bool JwtClaims::has_iat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.iat_ != nullptr);
  return value;
}
inline const ::shared::v1::Timestamp& JwtClaims::_internal_iat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::shared::v1::Timestamp* p = _impl_.iat_;
  return p != nullptr ? *p : reinterpret_cast<const ::shared::v1::Timestamp&>(::shared::v1::_Timestamp_default_instance_);
}
inline const ::shared::v1::Timestamp& JwtClaims::iat() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:users.v1.JwtClaims.iat)
  return _internal_iat();
}
inline void JwtClaims::unsafe_arena_set_allocated_iat(
    ::shared::v1::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.iat_);
  }
  _impl_.iat_ = reinterpret_cast<::shared::v1::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:users.v1.JwtClaims.iat)
}
inline ::shared::v1::Timestamp* PROTOBUF_NULLABLE JwtClaims::release_iat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::shared::v1::Timestamp* released = _impl_.iat_;
  _impl_.iat_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::shared::v1::Timestamp* PROTOBUF_NULLABLE JwtClaims::unsafe_arena_release_iat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:users.v1.JwtClaims.iat)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::shared::v1::Timestamp* temp = _impl_.iat_;
  _impl_.iat_ = nullptr;
  return temp;
}
inline ::shared::v1::Timestamp* PROTOBUF_NONNULL JwtClaims::_internal_mutable_iat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.iat_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::shared::v1::Timestamp>(GetArena());
    _impl_.iat_ = reinterpret_cast<::shared::v1::Timestamp*>(p);
  }
  return _impl_.iat_;
}
inline ::shared::v1::Timestamp* PROTOBUF_NONNULL JwtClaims::mutable_iat()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::shared::v1::Timestamp* _msg = _internal_mutable_iat();
  // @@protoc_insertion_point(field_mutable:users.v1.JwtClaims.iat)
  return _msg;
}
inline void JwtClaims::set_allocated_iat(::shared::v1::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.iat_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.iat_ = reinterpret_cast<::shared::v1::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:users.v1.JwtClaims.iat)
}

// string jti = 7 [json_name = "jti"];
inline void JwtClaims::clear_jti() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jti_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& JwtClaims::jti() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:users.v1.JwtClaims.jti)
  return _internal_jti();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void JwtClaims::set_jti(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.jti_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:users.v1.JwtClaims.jti)
}
inline ::std::string* PROTOBUF_NONNULL JwtClaims::mutable_jti()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_jti();
  // @@protoc_insertion_point(field_mutable:users.v1.JwtClaims.jti)
  return _s;
}
inline const ::std::string& JwtClaims::_internal_jti() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.jti_.Get();
}
inline void JwtClaims::_internal_set_jti(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.jti_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL JwtClaims::_internal_mutable_jti() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.jti_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE JwtClaims::release_jti() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:users.v1.JwtClaims.jti)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.jti_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.jti_.Set("", GetArena());
  }
  return released;
}
inline void JwtClaims::set_allocated_jti(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.jti_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.jti_.IsDefault()) {
    _impl_.jti_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:users.v1.JwtClaims.jti)
}

// map<string, .shared.v1.Value> custom = 100 [json_name = "custom"];
inline int JwtClaims::_internal_custom_size() const {
  return _internal_custom().size();
}
inline int JwtClaims::custom_size() const {
  return _internal_custom_size();
}
inline const ::google::protobuf::Map<std::string, ::shared::v1::Value>& JwtClaims::_internal_custom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::shared::v1::Value>& JwtClaims::custom() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:users.v1.JwtClaims.custom)
  return _internal_custom();
}
inline ::google::protobuf::Map<std::string, ::shared::v1::Value>* PROTOBUF_NONNULL JwtClaims::_internal_mutable_custom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::shared::v1::Value>* PROTOBUF_NONNULL JwtClaims::mutable_custom()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:users.v1.JwtClaims.custom)
  return _internal_mutable_custom();
}

// -------------------------------------------------------------------

// Token

// string id = 1 [json_name = "id"];
inline void Token::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Token::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:users.v1.Token.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Token::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:users.v1.Token.id)
}
inline ::std::string* PROTOBUF_NONNULL Token::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:users.v1.Token.id)
  return _s;
}
inline const ::std::string& Token::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Token::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Token::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Token::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:users.v1.Token.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void Token::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:users.v1.Token.id)
}

// string user_id = 2 [json_name = "userId"];
inline void Token::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Token::user_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:users.v1.Token.user_id)
  return _internal_user_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Token::set_user_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.user_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:users.v1.Token.user_id)
}
inline ::std::string* PROTOBUF_NONNULL Token::mutable_user_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_user_id();
  // @@protoc_insertion_point(field_mutable:users.v1.Token.user_id)
  return _s;
}
inline const ::std::string& Token::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_.Get();
}
inline void Token::_internal_set_user_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.user_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Token::_internal_mutable_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.user_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Token::release_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:users.v1.Token.user_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.user_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.user_id_.Set("", GetArena());
  }
  return released;
}
inline void Token::set_allocated_user_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.user_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.user_id_.IsDefault()) {
    _impl_.user_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:users.v1.Token.user_id)
}

// string token = 3 [json_name = "token"];
inline void Token::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& Token::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:users.v1.Token.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Token::set_token(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:users.v1.Token.token)
}
inline ::std::string* PROTOBUF_NONNULL Token::mutable_token()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:users.v1.Token.token)
  return _s;
}
inline const ::std::string& Token::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void Token::_internal_set_token(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.token_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Token::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.token_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Token::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:users.v1.Token.token)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.token_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.token_.Set("", GetArena());
  }
  return released;
}
inline void Token::set_allocated_token(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.token_.IsDefault()) {
    _impl_.token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:users.v1.Token.token)
}

// string type = 4 [json_name = "type"];
inline void Token::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& Token::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:users.v1.Token.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Token::set_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:users.v1.Token.type)
}
inline ::std::string* PROTOBUF_NONNULL Token::mutable_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:users.v1.Token.type)
  return _s;
}
inline const ::std::string& Token::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void Token::_internal_set_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Token::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Token::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:users.v1.Token.type)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.type_.Set("", GetArena());
  }
  return released;
}
inline void Token::set_allocated_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:users.v1.Token.type)
}

// bool used = 5 [json_name = "used"];
inline void Token::clear_used() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.used_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool Token::used() const {
  // @@protoc_insertion_point(field_get:users.v1.Token.used)
  return _internal_used();
}
inline void Token::set_used(bool value) {
  _internal_set_used(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:users.v1.Token.used)
}
inline bool Token::_internal_used() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.used_;
}
inline void Token::_internal_set_used(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.used_ = value;
}

// int64 created_at = 6 [json_name = "createdAt"];
inline void Token::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t Token::created_at() const {
  // @@protoc_insertion_point(field_get:users.v1.Token.created_at)
  return _internal_created_at();
}
inline void Token::set_created_at(::int64_t value) {
  _internal_set_created_at(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:users.v1.Token.created_at)
}
inline ::int64_t Token::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_;
}
inline void Token::_internal_set_created_at(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_ = value;
}

// int64 expires_at = 7 [json_name = "expiresAt"];
inline void Token::clear_expires_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_at_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t Token::expires_at() const {
  // @@protoc_insertion_point(field_get:users.v1.Token.expires_at)
  return _internal_expires_at();
}
inline void Token::set_expires_at(::int64_t value) {
  _internal_set_expires_at(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:users.v1.Token.expires_at)
}
inline ::int64_t Token::_internal_expires_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expires_at_;
}
inline void Token::_internal_set_expires_at(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_at_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace users


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // users_2fv1_2ftoken_2eproto_2epb_2eh
