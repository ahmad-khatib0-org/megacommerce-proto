// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: users/v1/token.proto
// Protobuf C++ Version: 6.31.1

#include "users/v1/token.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace users {
namespace v1 {

inline constexpr Token::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_{::int64_t{0}},
        expires_at_{::int64_t{0}},
        used_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Token::Token(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Token_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TokenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TokenDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TokenDefaultTypeInternal() {}
  union {
    Token _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TokenDefaultTypeInternal _Token_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR JwtClaims_CustomEntry_DoNotUse::JwtClaims_CustomEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : JwtClaims_CustomEntry_DoNotUse::MapEntry(JwtClaims_CustomEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : JwtClaims_CustomEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct JwtClaims_CustomEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JwtClaims_CustomEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JwtClaims_CustomEntry_DoNotUseDefaultTypeInternal() {}
  union {
    JwtClaims_CustomEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JwtClaims_CustomEntry_DoNotUseDefaultTypeInternal _JwtClaims_CustomEntry_DoNotUse_default_instance_;

inline constexpr JwtClaims::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        aud_{},
        custom_{},
        iss_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sub_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        jti_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exp_{nullptr},
        nbf_{nullptr},
        iat_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR JwtClaims::JwtClaims(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(JwtClaims_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct JwtClaimsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JwtClaimsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JwtClaimsDefaultTypeInternal() {}
  union {
    JwtClaims _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JwtClaimsDefaultTypeInternal _JwtClaims_default_instance_;
}  // namespace v1
}  // namespace users
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_users_2fv1_2ftoken_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_users_2fv1_2ftoken_2eproto = nullptr;
const ::uint32_t
    TableStruct_users_2fv1_2ftoken_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::users::v1::JwtClaims_CustomEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::users::v1::JwtClaims_CustomEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::users::v1::JwtClaims_CustomEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::users::v1::JwtClaims, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::users::v1::JwtClaims, _impl_.iss_),
        PROTOBUF_FIELD_OFFSET(::users::v1::JwtClaims, _impl_.sub_),
        PROTOBUF_FIELD_OFFSET(::users::v1::JwtClaims, _impl_.aud_),
        PROTOBUF_FIELD_OFFSET(::users::v1::JwtClaims, _impl_.exp_),
        PROTOBUF_FIELD_OFFSET(::users::v1::JwtClaims, _impl_.nbf_),
        PROTOBUF_FIELD_OFFSET(::users::v1::JwtClaims, _impl_.iat_),
        PROTOBUF_FIELD_OFFSET(::users::v1::JwtClaims, _impl_.jti_),
        PROTOBUF_FIELD_OFFSET(::users::v1::JwtClaims, _impl_.custom_),
        0,
        1,
        ~0u,
        3,
        4,
        5,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::users::v1::Token, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::users::v1::Token, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::users::v1::Token, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::users::v1::Token, _impl_.token_),
        PROTOBUF_FIELD_OFFSET(::users::v1::Token, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::users::v1::Token, _impl_.used_),
        PROTOBUF_FIELD_OFFSET(::users::v1::Token, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::users::v1::Token, _impl_.expires_at_),
        0,
        1,
        2,
        3,
        6,
        4,
        5,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::users::v1::JwtClaims_CustomEntry_DoNotUse)},
        {7, sizeof(::users::v1::JwtClaims)},
        {26, sizeof(::users::v1::Token)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::users::v1::_JwtClaims_CustomEntry_DoNotUse_default_instance_._instance,
    &::users::v1::_JwtClaims_default_instance_._instance,
    &::users::v1::_Token_default_instance_._instance,
};
const char descriptor_table_protodef_users_2fv1_2ftoken_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\024users/v1/token.proto\022\010users.v1\032\026shared"
    "/v1/struct.proto\032\024shared/v1/time.proto\"\321"
    "\002\n\tJwtClaims\022\020\n\003iss\030\001 \001(\tR\003iss\022\020\n\003sub\030\002 "
    "\001(\tR\003sub\022\020\n\003aud\030\003 \003(\tR\003aud\022&\n\003exp\030\004 \001(\0132"
    "\024.shared.v1.TimestampR\003exp\022&\n\003nbf\030\005 \001(\0132"
    "\024.shared.v1.TimestampR\003nbf\022&\n\003iat\030\006 \001(\0132"
    "\024.shared.v1.TimestampR\003iat\022\020\n\003jti\030\007 \001(\tR"
    "\003jti\0227\n\006custom\030d \003(\0132\037.users.v1.JwtClaim"
    "s.CustomEntryR\006custom\032K\n\013CustomEntry\022\020\n\003"
    "key\030\001 \001(\tR\003key\022&\n\005value\030\002 \001(\0132\020.shared.v"
    "1.ValueR\005value:\0028\001\"\254\001\n\005Token\022\016\n\002id\030\001 \001(\t"
    "R\002id\022\027\n\007user_id\030\002 \001(\tR\006userId\022\024\n\005token\030\003"
    " \001(\tR\005token\022\022\n\004type\030\004 \001(\tR\004type\022\022\n\004used\030"
    "\005 \001(\010R\004used\022\035\n\ncreated_at\030\006 \001(\003R\tcreated"
    "At\022\035\n\nexpires_at\030\007 \001(\003R\texpiresAtBn\n\031org"
    ".megacommerce.users.v1B\nTokenProtoZBgith"
    "ub.com/ahmad-khatib0-org/megacommerce-pr"
    "oto/gen/go/users/v1;v1\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_users_2fv1_2ftoken_2eproto_deps[2] = {
        &::descriptor_table_shared_2fv1_2fstruct_2eproto,
        &::descriptor_table_shared_2fv1_2ftime_2eproto,
};
static ::absl::once_flag descriptor_table_users_2fv1_2ftoken_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_users_2fv1_2ftoken_2eproto = {
    false,
    false,
    713,
    descriptor_table_protodef_users_2fv1_2ftoken_2eproto,
    "users/v1/token.proto",
    &descriptor_table_users_2fv1_2ftoken_2eproto_once,
    descriptor_table_users_2fv1_2ftoken_2eproto_deps,
    2,
    3,
    schemas,
    file_default_instances,
    TableStruct_users_2fv1_2ftoken_2eproto::offsets,
    file_level_enum_descriptors_users_2fv1_2ftoken_2eproto,
    file_level_service_descriptors_users_2fv1_2ftoken_2eproto,
};
namespace users {
namespace v1 {
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
JwtClaims_CustomEntry_DoNotUse::JwtClaims_CustomEntry_DoNotUse()
    : SuperType(JwtClaims_CustomEntry_DoNotUse_class_data_.base()) {}
JwtClaims_CustomEntry_DoNotUse::JwtClaims_CustomEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, JwtClaims_CustomEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
JwtClaims_CustomEntry_DoNotUse::JwtClaims_CustomEntry_DoNotUse() : SuperType() {}
JwtClaims_CustomEntry_DoNotUse::JwtClaims_CustomEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL JwtClaims_CustomEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) JwtClaims_CustomEntry_DoNotUse(arena);
}
constexpr auto JwtClaims_CustomEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(JwtClaims_CustomEntry_DoNotUse),
                                            alignof(JwtClaims_CustomEntry_DoNotUse));
}
constexpr auto JwtClaims_CustomEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_JwtClaims_CustomEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &JwtClaims_CustomEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<JwtClaims_CustomEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &JwtClaims_CustomEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&JwtClaims_CustomEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(JwtClaims_CustomEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &JwtClaims_CustomEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_users_2fv1_2ftoken_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull JwtClaims_CustomEntry_DoNotUse_class_data_ =
        JwtClaims_CustomEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
JwtClaims_CustomEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&JwtClaims_CustomEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(JwtClaims_CustomEntry_DoNotUse_class_data_.tc_table);
  return JwtClaims_CustomEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 42, 2>
JwtClaims_CustomEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(JwtClaims_CustomEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    JwtClaims_CustomEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::users::v1::JwtClaims_CustomEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .shared.v1.Value value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(JwtClaims_CustomEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(JwtClaims_CustomEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(JwtClaims_CustomEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .shared.v1.Value value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(JwtClaims_CustomEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::shared::v1::Value>()},
  }},
  {{
    "\36\3\0\0\0\0\0\0"
    "users.v1.JwtClaims.CustomEntry"
    "key"
  }},
};
// ===================================================================

class JwtClaims::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<JwtClaims>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_._has_bits_);
};

void JwtClaims::clear_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exp_ != nullptr) _impl_.exp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void JwtClaims::clear_nbf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nbf_ != nullptr) _impl_.nbf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void JwtClaims::clear_iat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.iat_ != nullptr) _impl_.iat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void JwtClaims::clear_custom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_.Clear();
}
JwtClaims::JwtClaims(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, JwtClaims_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:users.v1.JwtClaims)
}
PROTOBUF_NDEBUG_INLINE JwtClaims::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::users::v1::JwtClaims& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        aud_{visibility, arena, from.aud_},
        custom_{visibility, arena, from.custom_},
        iss_(arena, from.iss_),
        sub_(arena, from.sub_),
        jti_(arena, from.jti_) {}

JwtClaims::JwtClaims(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const JwtClaims& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, JwtClaims_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  JwtClaims* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.exp_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exp_)
                : nullptr;
  _impl_.nbf_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.nbf_)
                : nullptr;
  _impl_.iat_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.iat_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:users.v1.JwtClaims)
}
PROTOBUF_NDEBUG_INLINE JwtClaims::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        aud_{visibility, arena},
        custom_{visibility, arena},
        iss_(arena),
        sub_(arena),
        jti_(arena) {}

inline void JwtClaims::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, exp_),
           0,
           offsetof(Impl_, iat_) -
               offsetof(Impl_, exp_) +
               sizeof(Impl_::iat_));
}
JwtClaims::~JwtClaims() {
  // @@protoc_insertion_point(destructor:users.v1.JwtClaims)
  SharedDtor(*this);
}
inline void JwtClaims::SharedDtor(MessageLite& self) {
  JwtClaims& this_ = static_cast<JwtClaims&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.iss_.Destroy();
  this_._impl_.sub_.Destroy();
  this_._impl_.jti_.Destroy();
  delete this_._impl_.exp_;
  delete this_._impl_.nbf_;
  delete this_._impl_.iat_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL JwtClaims::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) JwtClaims(arena);
}
constexpr auto JwtClaims::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.aud_) +
          decltype(JwtClaims::_impl_.aud_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.custom_) +
          decltype(JwtClaims::_impl_.custom_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.custom_) +
          decltype(JwtClaims::_impl_.custom_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(JwtClaims), alignof(JwtClaims), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&JwtClaims::PlacementNew_,
                                 sizeof(JwtClaims),
                                 alignof(JwtClaims));
  }
}
constexpr auto JwtClaims::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_JwtClaims_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &JwtClaims::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<JwtClaims>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &JwtClaims::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<JwtClaims>(), &JwtClaims::ByteSizeLong,
              &JwtClaims::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_._cached_size_),
          false,
      },
      &JwtClaims::kDescriptorMethods,
      &descriptor_table_users_2fv1_2ftoken_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull JwtClaims_class_data_ =
        JwtClaims::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
JwtClaims::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&JwtClaims_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(JwtClaims_class_data_.tc_table);
  return JwtClaims_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 5, 53, 7>
JwtClaims::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_._has_bits_),
    0, // no _extensions_
    100, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    JwtClaims_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::users::v1::JwtClaims>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string iss = 1 [json_name = "iss"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.iss_)}},
    // string sub = 2 [json_name = "sub"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.sub_)}},
    // repeated string aud = 3 [json_name = "aud"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.aud_)}},
    // .shared.v1.Timestamp exp = 4 [json_name = "exp"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.exp_)}},
    // .shared.v1.Timestamp nbf = 5 [json_name = "nbf"];
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 1, PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.nbf_)}},
    // .shared.v1.Timestamp iat = 6 [json_name = "iat"];
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 2, PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.iat_)}},
    // string jti = 7 [json_name = "jti"];
    {::_pbi::TcParser::FastUS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.jti_)}},
  }}, {{
    100, 0, 1,
    65534, 7,
    65535, 65535
  }}, {{
    // string iss = 1 [json_name = "iss"];
    {PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.iss_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sub = 2 [json_name = "sub"];
    {PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.sub_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string aud = 3 [json_name = "aud"];
    {PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.aud_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .shared.v1.Timestamp exp = 4 [json_name = "exp"];
    {PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.exp_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .shared.v1.Timestamp nbf = 5 [json_name = "nbf"];
    {PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.nbf_), _Internal::kHasBitsOffset + 4, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .shared.v1.Timestamp iat = 6 [json_name = "iat"];
    {PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.iat_), _Internal::kHasBitsOffset + 5, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string jti = 7 [json_name = "jti"];
    {PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.jti_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, .shared.v1.Value> custom = 100 [json_name = "custom"];
    {PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.custom_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::shared::v1::Timestamp>()},
      {::_pbi::TcParser::GetTable<::shared::v1::Timestamp>()},
      {::_pbi::TcParser::GetTable<::shared::v1::Timestamp>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::shared::v1::Value>()},
  }},
  {{
    "\22\3\3\3\0\0\0\3\6\0\0\0\0\0\0\0"
    "users.v1.JwtClaims"
    "iss"
    "sub"
    "aud"
    "jti"
    "custom"
  }},
};
PROTOBUF_NOINLINE void JwtClaims::Clear() {
// @@protoc_insertion_point(message_clear_start:users.v1.JwtClaims)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.aud_.Clear();
  _impl_.custom_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.iss_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.sub_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.jti_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.exp_ != nullptr);
      _impl_.exp_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.nbf_ != nullptr);
      _impl_.nbf_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.iat_ != nullptr);
      _impl_.iat_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL JwtClaims::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const JwtClaims& this_ = static_cast<const JwtClaims&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL JwtClaims::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const JwtClaims& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:users.v1.JwtClaims)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string iss = 1 [json_name = "iss"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_iss().empty()) {
      const ::std::string& _s = this_._internal_iss();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "users.v1.JwtClaims.iss");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string sub = 2 [json_name = "sub"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_sub().empty()) {
      const ::std::string& _s = this_._internal_sub();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "users.v1.JwtClaims.sub");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // repeated string aud = 3 [json_name = "aud"];
  for (int i = 0, n = this_._internal_aud_size(); i < n; ++i) {
    const auto& s = this_._internal_aud().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "users.v1.JwtClaims.aud");
    target = stream->WriteString(3, s, target);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .shared.v1.Timestamp exp = 4 [json_name = "exp"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.exp_, this_._impl_.exp_->GetCachedSize(), target,
        stream);
  }

  // .shared.v1.Timestamp nbf = 5 [json_name = "nbf"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.nbf_, this_._impl_.nbf_->GetCachedSize(), target,
        stream);
  }

  // .shared.v1.Timestamp iat = 6 [json_name = "iat"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.iat_, this_._impl_.iat_->GetCachedSize(), target,
        stream);
  }

  // string jti = 7 [json_name = "jti"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_jti().empty()) {
      const ::std::string& _s = this_._internal_jti();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "users.v1.JwtClaims.jti");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  // map<string, .shared.v1.Value> custom = 100 [json_name = "custom"];
  if (!this_._internal_custom().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::shared::v1::Value>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::shared::v1::Value,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_custom();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            100, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "users.v1.JwtClaims.custom");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            100, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "users.v1.JwtClaims.custom");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:users.v1.JwtClaims)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t JwtClaims::ByteSizeLong(const MessageLite& base) {
  const JwtClaims& this_ = static_cast<const JwtClaims&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t JwtClaims::ByteSizeLong() const {
  const JwtClaims& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:users.v1.JwtClaims)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string aud = 3 [json_name = "aud"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_aud().size());
      for (int i = 0, n = this_._internal_aud().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_aud().Get(i));
      }
    }
    // map<string, .shared.v1.Value> custom = 100 [json_name = "custom"];
    {
      total_size +=
          2 * ::google::protobuf::internal::FromIntSize(this_._internal_custom_size());
      for (const auto& entry : this_._internal_custom()) {
        total_size += _pbi::MapEntryFuncs<std::string, ::shared::v1::Value,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string iss = 1 [json_name = "iss"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_iss().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_iss());
      }
    }
    // string sub = 2 [json_name = "sub"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_sub().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_sub());
      }
    }
    // string jti = 7 [json_name = "jti"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_jti().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_jti());
      }
    }
    // .shared.v1.Timestamp exp = 4 [json_name = "exp"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.exp_);
    }
    // .shared.v1.Timestamp nbf = 5 [json_name = "nbf"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.nbf_);
    }
    // .shared.v1.Timestamp iat = 6 [json_name = "iat"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.iat_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void JwtClaims::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<JwtClaims*>(&to_msg);
  auto& from = static_cast<const JwtClaims&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:users.v1.JwtClaims)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_aud()->MergeFrom(from._internal_aud());
  _this->_impl_.custom_.MergeFrom(from._impl_.custom_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_iss().empty()) {
        _this->_internal_set_iss(from._internal_iss());
      } else {
        if (_this->_impl_.iss_.IsDefault()) {
          _this->_internal_set_iss("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_sub().empty()) {
        _this->_internal_set_sub(from._internal_sub());
      } else {
        if (_this->_impl_.sub_.IsDefault()) {
          _this->_internal_set_sub("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_jti().empty()) {
        _this->_internal_set_jti(from._internal_jti());
      } else {
        if (_this->_impl_.jti_.IsDefault()) {
          _this->_internal_set_jti("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.exp_ != nullptr);
      if (_this->_impl_.exp_ == nullptr) {
        _this->_impl_.exp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exp_);
      } else {
        _this->_impl_.exp_->MergeFrom(*from._impl_.exp_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.nbf_ != nullptr);
      if (_this->_impl_.nbf_ == nullptr) {
        _this->_impl_.nbf_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.nbf_);
      } else {
        _this->_impl_.nbf_->MergeFrom(*from._impl_.nbf_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.iat_ != nullptr);
      if (_this->_impl_.iat_ == nullptr) {
        _this->_impl_.iat_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.iat_);
      } else {
        _this->_impl_.iat_->MergeFrom(*from._impl_.iat_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JwtClaims::CopyFrom(const JwtClaims& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:users.v1.JwtClaims)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void JwtClaims::InternalSwap(JwtClaims* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.aud_.InternalSwap(&other->_impl_.aud_);
  _impl_.custom_.InternalSwap(&other->_impl_.custom_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.iss_, &other->_impl_.iss_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sub_, &other->_impl_.sub_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.jti_, &other->_impl_.jti_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.iat_)
      + sizeof(JwtClaims::_impl_.iat_)
      - PROTOBUF_FIELD_OFFSET(JwtClaims, _impl_.exp_)>(
          reinterpret_cast<char*>(&_impl_.exp_),
          reinterpret_cast<char*>(&other->_impl_.exp_));
}

::google::protobuf::Metadata JwtClaims::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Token::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Token>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Token, _impl_._has_bits_);
};

Token::Token(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Token_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:users.v1.Token)
}
PROTOBUF_NDEBUG_INLINE Token::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::users::v1::Token& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        user_id_(arena, from.user_id_),
        token_(arena, from.token_),
        type_(arena, from.type_) {}

Token::Token(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Token& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Token_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Token* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_at_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, created_at_),
           offsetof(Impl_, used_) -
               offsetof(Impl_, created_at_) +
               sizeof(Impl_::used_));

  // @@protoc_insertion_point(copy_constructor:users.v1.Token)
}
PROTOBUF_NDEBUG_INLINE Token::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        id_(arena),
        user_id_(arena),
        token_(arena),
        type_(arena) {}

inline void Token::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_at_),
           0,
           offsetof(Impl_, used_) -
               offsetof(Impl_, created_at_) +
               sizeof(Impl_::used_));
}
Token::~Token() {
  // @@protoc_insertion_point(destructor:users.v1.Token)
  SharedDtor(*this);
}
inline void Token::SharedDtor(MessageLite& self) {
  Token& this_ = static_cast<Token&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.user_id_.Destroy();
  this_._impl_.token_.Destroy();
  this_._impl_.type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Token::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Token(arena);
}
constexpr auto Token::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Token),
                                            alignof(Token));
}
constexpr auto Token::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Token_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Token::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Token>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Token::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Token>(), &Token::ByteSizeLong,
              &Token::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Token, _impl_._cached_size_),
          false,
      },
      &Token::kDescriptorMethods,
      &descriptor_table_users_2fv1_2ftoken_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Token_class_data_ =
        Token::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Token::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Token_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Token_class_data_.tc_table);
  return Token_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 41, 2>
Token::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Token, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Token_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::users::v1::Token>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Token, _impl_.id_)}},
    // string user_id = 2 [json_name = "userId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Token, _impl_.user_id_)}},
    // string token = 3 [json_name = "token"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(Token, _impl_.token_)}},
    // string type = 4 [json_name = "type"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(Token, _impl_.type_)}},
    // bool used = 5 [json_name = "used"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Token, _impl_.used_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(Token, _impl_.used_)}},
    // int64 created_at = 6 [json_name = "createdAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Token, _impl_.created_at_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(Token, _impl_.created_at_)}},
    // int64 expires_at = 7 [json_name = "expiresAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Token, _impl_.expires_at_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(Token, _impl_.expires_at_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Token, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_id = 2 [json_name = "userId"];
    {PROTOBUF_FIELD_OFFSET(Token, _impl_.user_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string token = 3 [json_name = "token"];
    {PROTOBUF_FIELD_OFFSET(Token, _impl_.token_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 4 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Token, _impl_.type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool used = 5 [json_name = "used"];
    {PROTOBUF_FIELD_OFFSET(Token, _impl_.used_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int64 created_at = 6 [json_name = "createdAt"];
    {PROTOBUF_FIELD_OFFSET(Token, _impl_.created_at_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 expires_at = 7 [json_name = "expiresAt"];
    {PROTOBUF_FIELD_OFFSET(Token, _impl_.expires_at_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\16\2\7\5\4\0\0\0"
    "users.v1.Token"
    "id"
    "user_id"
    "token"
    "type"
  }},
};
PROTOBUF_NOINLINE void Token::Clear() {
// @@protoc_insertion_point(message_clear_start:users.v1.Token)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.user_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.token_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.type_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000070u) != 0) {
    ::memset(&_impl_.created_at_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.used_) -
        reinterpret_cast<char*>(&_impl_.created_at_)) + sizeof(_impl_.used_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Token::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Token& this_ = static_cast<const Token&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Token::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Token& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:users.v1.Token)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "users.v1.Token.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string user_id = 2 [json_name = "userId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_user_id().empty()) {
      const ::std::string& _s = this_._internal_user_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "users.v1.Token.user_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string token = 3 [json_name = "token"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_token().empty()) {
      const ::std::string& _s = this_._internal_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "users.v1.Token.token");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string type = 4 [json_name = "type"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_type().empty()) {
      const ::std::string& _s = this_._internal_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "users.v1.Token.type");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // bool used = 5 [json_name = "used"];
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_used() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_used(), target);
    }
  }

  // int64 created_at = 6 [json_name = "createdAt"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_created_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<6>(
              stream, this_._internal_created_at(), target);
    }
  }

  // int64 expires_at = 7 [json_name = "expiresAt"];
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_expires_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<7>(
              stream, this_._internal_expires_at(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:users.v1.Token)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Token::ByteSizeLong(const MessageLite& base) {
  const Token& this_ = static_cast<const Token&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Token::ByteSizeLong() const {
  const Token& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:users.v1.Token)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string user_id = 2 [json_name = "userId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_user_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_user_id());
      }
    }
    // string token = 3 [json_name = "token"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_token());
      }
    }
    // string type = 4 [json_name = "type"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_type());
      }
    }
    // int64 created_at = 6 [json_name = "createdAt"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_created_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_created_at());
      }
    }
    // int64 expires_at = 7 [json_name = "expiresAt"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_expires_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_expires_at());
      }
    }
    // bool used = 5 [json_name = "used"];
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_used() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Token::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Token*>(&to_msg);
  auto& from = static_cast<const Token&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:users.v1.Token)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_user_id().empty()) {
        _this->_internal_set_user_id(from._internal_user_id());
      } else {
        if (_this->_impl_.user_id_.IsDefault()) {
          _this->_internal_set_user_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_token().empty()) {
        _this->_internal_set_token(from._internal_token());
      } else {
        if (_this->_impl_.token_.IsDefault()) {
          _this->_internal_set_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_type().empty()) {
        _this->_internal_set_type(from._internal_type());
      } else {
        if (_this->_impl_.type_.IsDefault()) {
          _this->_internal_set_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_created_at() != 0) {
        _this->_impl_.created_at_ = from._impl_.created_at_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_expires_at() != 0) {
        _this->_impl_.expires_at_ = from._impl_.expires_at_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_used() != 0) {
        _this->_impl_.used_ = from._impl_.used_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Token::CopyFrom(const Token& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:users.v1.Token)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Token::InternalSwap(Token* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Token, _impl_.used_)
      + sizeof(Token::_impl_.used_)
      - PROTOBUF_FIELD_OFFSET(Token, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::google::protobuf::Metadata Token::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace users
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_users_2fv1_2ftoken_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
