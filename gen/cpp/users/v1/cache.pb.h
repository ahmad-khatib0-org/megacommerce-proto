// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: users/v1/cache.proto
// Protobuf C++ Version: 6.31.1

#ifndef users_2fv1_2fcache_2eproto_2epb_2eh
#define users_2fv1_2fcache_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_users_2fv1_2fcache_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_users_2fv1_2fcache_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_users_2fv1_2fcache_2eproto;
}  // extern "C"
namespace users {
namespace v1 {
class CachedTokenStatus;
struct CachedTokenStatusDefaultTypeInternal;
extern CachedTokenStatusDefaultTypeInternal _CachedTokenStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CachedTokenStatus_class_data_;
class CachedUserData;
struct CachedUserDataDefaultTypeInternal;
extern CachedUserDataDefaultTypeInternal _CachedUserData_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CachedUserData_class_data_;
}  // namespace v1
}  // namespace users
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace users {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class CachedUserData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:users.v1.CachedUserData) */ {
 public:
  inline CachedUserData() : CachedUserData(nullptr) {}
  ~CachedUserData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CachedUserData* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CachedUserData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CachedUserData(::google::protobuf::internal::ConstantInitialized);

  inline CachedUserData(const CachedUserData& from) : CachedUserData(nullptr, from) {}
  inline CachedUserData(CachedUserData&& from) noexcept
      : CachedUserData(nullptr, ::std::move(from)) {}
  inline CachedUserData& operator=(const CachedUserData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CachedUserData& operator=(CachedUserData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CachedUserData& default_instance() {
    return *reinterpret_cast<const CachedUserData*>(
        &_CachedUserData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CachedUserData& a, CachedUserData& b) { a.Swap(&b); }
  inline void Swap(CachedUserData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CachedUserData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CachedUserData* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CachedUserData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CachedUserData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CachedUserData& from) { CachedUserData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CachedUserData* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "users.v1.CachedUserData"; }

 protected:
  explicit CachedUserData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CachedUserData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CachedUserData& from);
  CachedUserData(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CachedUserData&& from) noexcept
      : CachedUserData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRolesFieldNumber = 2,
    kPropsFieldNumber = 3,
    kIsOauthFieldNumber = 1,
  };
  // string roles = 2 [json_name = "roles"];
  void clear_roles() ;
  const ::std::string& roles() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_roles(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_roles();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_roles();
  void set_allocated_roles(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_roles() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_roles(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_roles();

  public:
  // string props = 3 [json_name = "props"];
  void clear_props() ;
  const ::std::string& props() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_props(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_props();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_props();
  void set_allocated_props(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_props() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_props(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_props();

  public:
  // bool is_oauth = 1 [json_name = "isOauth"];
  void clear_is_oauth() ;
  bool is_oauth() const;
  void set_is_oauth(bool value);

  private:
  bool _internal_is_oauth() const;
  void _internal_set_is_oauth(bool value);

  public:
  // @@protoc_insertion_point(class_scope:users.v1.CachedUserData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 42,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CachedUserData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr roles_;
    ::google::protobuf::internal::ArenaStringPtr props_;
    bool is_oauth_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_users_2fv1_2fcache_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CachedUserData_class_data_;
// -------------------------------------------------------------------

class CachedTokenStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:users.v1.CachedTokenStatus) */ {
 public:
  inline CachedTokenStatus() : CachedTokenStatus(nullptr) {}
  ~CachedTokenStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CachedTokenStatus* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CachedTokenStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CachedTokenStatus(::google::protobuf::internal::ConstantInitialized);

  inline CachedTokenStatus(const CachedTokenStatus& from) : CachedTokenStatus(nullptr, from) {}
  inline CachedTokenStatus(CachedTokenStatus&& from) noexcept
      : CachedTokenStatus(nullptr, ::std::move(from)) {}
  inline CachedTokenStatus& operator=(const CachedTokenStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CachedTokenStatus& operator=(CachedTokenStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CachedTokenStatus& default_instance() {
    return *reinterpret_cast<const CachedTokenStatus*>(
        &_CachedTokenStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CachedTokenStatus& a, CachedTokenStatus& b) { a.Swap(&b); }
  inline void Swap(CachedTokenStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CachedTokenStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CachedTokenStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CachedTokenStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CachedTokenStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CachedTokenStatus& from) { CachedTokenStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CachedTokenStatus* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "users.v1.CachedTokenStatus"; }

 protected:
  explicit CachedTokenStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CachedTokenStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CachedTokenStatus& from);
  CachedTokenStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CachedTokenStatus&& from) noexcept
      : CachedTokenStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDevIdFieldNumber = 1,
    kLastCheckedFieldNumber = 2,
    kRevokedFieldNumber = 3,
  };
  // string dev_id = 1 [json_name = "devId"];
  void clear_dev_id() ;
  const ::std::string& dev_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_dev_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_dev_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_dev_id();
  void set_allocated_dev_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_dev_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_dev_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_dev_id();

  public:
  // int64 last_checked = 2 [json_name = "lastChecked"];
  void clear_last_checked() ;
  ::int64_t last_checked() const;
  void set_last_checked(::int64_t value);

  private:
  ::int64_t _internal_last_checked() const;
  void _internal_set_last_checked(::int64_t value);

  public:
  // bool revoked = 3 [json_name = "revoked"];
  void clear_revoked() ;
  bool revoked() const;
  void set_revoked(bool value);

  private:
  bool _internal_revoked() const;
  void _internal_set_revoked(bool value);

  public:
  // @@protoc_insertion_point(class_scope:users.v1.CachedTokenStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 41,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CachedTokenStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr dev_id_;
    ::int64_t last_checked_;
    bool revoked_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_users_2fv1_2fcache_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CachedTokenStatus_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CachedUserData

// bool is_oauth = 1 [json_name = "isOauth"];
inline void CachedUserData::clear_is_oauth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_oauth_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CachedUserData::is_oauth() const {
  // @@protoc_insertion_point(field_get:users.v1.CachedUserData.is_oauth)
  return _internal_is_oauth();
}
inline void CachedUserData::set_is_oauth(bool value) {
  _internal_set_is_oauth(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:users.v1.CachedUserData.is_oauth)
}
inline bool CachedUserData::_internal_is_oauth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_oauth_;
}
inline void CachedUserData::_internal_set_is_oauth(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_oauth_ = value;
}

// string roles = 2 [json_name = "roles"];
inline void CachedUserData::clear_roles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roles_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CachedUserData::roles() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:users.v1.CachedUserData.roles)
  return _internal_roles();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CachedUserData::set_roles(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.roles_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:users.v1.CachedUserData.roles)
}
inline ::std::string* PROTOBUF_NONNULL CachedUserData::mutable_roles()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_roles();
  // @@protoc_insertion_point(field_mutable:users.v1.CachedUserData.roles)
  return _s;
}
inline const ::std::string& CachedUserData::_internal_roles() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.roles_.Get();
}
inline void CachedUserData::_internal_set_roles(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.roles_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CachedUserData::_internal_mutable_roles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.roles_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CachedUserData::release_roles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:users.v1.CachedUserData.roles)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.roles_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.roles_.Set("", GetArena());
  }
  return released;
}
inline void CachedUserData::set_allocated_roles(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.roles_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.roles_.IsDefault()) {
    _impl_.roles_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:users.v1.CachedUserData.roles)
}

// string props = 3 [json_name = "props"];
inline void CachedUserData::clear_props() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.props_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CachedUserData::props() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:users.v1.CachedUserData.props)
  return _internal_props();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CachedUserData::set_props(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.props_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:users.v1.CachedUserData.props)
}
inline ::std::string* PROTOBUF_NONNULL CachedUserData::mutable_props()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_props();
  // @@protoc_insertion_point(field_mutable:users.v1.CachedUserData.props)
  return _s;
}
inline const ::std::string& CachedUserData::_internal_props() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.props_.Get();
}
inline void CachedUserData::_internal_set_props(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.props_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CachedUserData::_internal_mutable_props() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.props_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CachedUserData::release_props() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:users.v1.CachedUserData.props)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.props_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.props_.Set("", GetArena());
  }
  return released;
}
inline void CachedUserData::set_allocated_props(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.props_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.props_.IsDefault()) {
    _impl_.props_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:users.v1.CachedUserData.props)
}

// -------------------------------------------------------------------

// CachedTokenStatus

// string dev_id = 1 [json_name = "devId"];
inline void CachedTokenStatus::clear_dev_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CachedTokenStatus::dev_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:users.v1.CachedTokenStatus.dev_id)
  return _internal_dev_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CachedTokenStatus::set_dev_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.dev_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:users.v1.CachedTokenStatus.dev_id)
}
inline ::std::string* PROTOBUF_NONNULL CachedTokenStatus::mutable_dev_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_dev_id();
  // @@protoc_insertion_point(field_mutable:users.v1.CachedTokenStatus.dev_id)
  return _s;
}
inline const ::std::string& CachedTokenStatus::_internal_dev_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dev_id_.Get();
}
inline void CachedTokenStatus::_internal_set_dev_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.dev_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CachedTokenStatus::_internal_mutable_dev_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.dev_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CachedTokenStatus::release_dev_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:users.v1.CachedTokenStatus.dev_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.dev_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.dev_id_.Set("", GetArena());
  }
  return released;
}
inline void CachedTokenStatus::set_allocated_dev_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.dev_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dev_id_.IsDefault()) {
    _impl_.dev_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:users.v1.CachedTokenStatus.dev_id)
}

// int64 last_checked = 2 [json_name = "lastChecked"];
inline void CachedTokenStatus::clear_last_checked() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_checked_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t CachedTokenStatus::last_checked() const {
  // @@protoc_insertion_point(field_get:users.v1.CachedTokenStatus.last_checked)
  return _internal_last_checked();
}
inline void CachedTokenStatus::set_last_checked(::int64_t value) {
  _internal_set_last_checked(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:users.v1.CachedTokenStatus.last_checked)
}
inline ::int64_t CachedTokenStatus::_internal_last_checked() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_checked_;
}
inline void CachedTokenStatus::_internal_set_last_checked(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_checked_ = value;
}

// bool revoked = 3 [json_name = "revoked"];
inline void CachedTokenStatus::clear_revoked() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revoked_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CachedTokenStatus::revoked() const {
  // @@protoc_insertion_point(field_get:users.v1.CachedTokenStatus.revoked)
  return _internal_revoked();
}
inline void CachedTokenStatus::set_revoked(bool value) {
  _internal_set_revoked(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:users.v1.CachedTokenStatus.revoked)
}
inline bool CachedTokenStatus::_internal_revoked() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.revoked_;
}
inline void CachedTokenStatus::_internal_set_revoked(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revoked_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace users


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // users_2fv1_2fcache_2eproto_2epb_2eh
