// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: uploader/v1/uploader.proto

package v1

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

// UploaderServiceClient is the client API for UploaderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UploaderServiceClient interface {
}

type uploaderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUploaderServiceClient(cc grpc.ClientConnInterface) UploaderServiceClient {
	return &uploaderServiceClient{cc}
}

// UploaderServiceServer is the server API for UploaderService service.
// All implementations must embed UnimplementedUploaderServiceServer
// for forward compatibility.
type UploaderServiceServer interface {
	mustEmbedUnimplementedUploaderServiceServer()
}

// UnimplementedUploaderServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedUploaderServiceServer struct{}

func (UnimplementedUploaderServiceServer) mustEmbedUnimplementedUploaderServiceServer() {}
func (UnimplementedUploaderServiceServer) testEmbeddedByValue()                         {}

// UnsafeUploaderServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UploaderServiceServer will
// result in compilation errors.
type UnsafeUploaderServiceServer interface {
	mustEmbedUnimplementedUploaderServiceServer()
}

func RegisterUploaderServiceServer(s grpc.ServiceRegistrar, srv UploaderServiceServer) {
	// If the following call pancis, it indicates UnimplementedUploaderServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&UploaderService_ServiceDesc, srv)
}

// UploaderService_ServiceDesc is the grpc.ServiceDesc for UploaderService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UploaderService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "uploader.v1.UploaderService",
	HandlerType: (*UploaderServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "uploader/v1/uploader.proto",
}
