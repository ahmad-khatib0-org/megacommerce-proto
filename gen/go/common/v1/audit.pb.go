// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: common/v1/audit.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AuditRecord provides a consistent set of fields used for all audit logging.
type AuditRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventName     string                 `protobuf:"bytes,1,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	EventData     *AuditEventData        `protobuf:"bytes,3,opt,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`
	Actor         *AuditEventActor       `protobuf:"bytes,4,opt,name=actor,proto3" json:"actor,omitempty"`
	Meta          *anypb.Any             `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`
	Error         *AuditEventError       `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditRecord) Reset() {
	*x = AuditRecord{}
	mi := &file_common_v1_audit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditRecord) ProtoMessage() {}

func (x *AuditRecord) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_audit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditRecord.ProtoReflect.Descriptor instead.
func (*AuditRecord) Descriptor() ([]byte, []int) {
	return file_common_v1_audit_proto_rawDescGZIP(), []int{0}
}

func (x *AuditRecord) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *AuditRecord) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AuditRecord) GetEventData() *AuditEventData {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *AuditRecord) GetActor() *AuditEventActor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *AuditRecord) GetMeta() *anypb.Any {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *AuditRecord) GetError() *AuditEventError {
	if x != nil {
		return x.Error
	}
	return nil
}

// AuditEventData contains all event specific data about the modified entity
type AuditEventData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Payload and parameters being processed as part of the request
	Parameters *anypb.Any `protobuf:"bytes,1,opt,name=parameters,proto3" json:"parameters,omitempty"`
	// Prior state of the object being modified, null if no prior state
	PriorState *anypb.Any `protobuf:"bytes,2,opt,name=prior_state,json=priorState,proto3" json:"prior_state,omitempty"`
	// Resulting object after creating or modifying it
	ResultingState *anypb.Any `protobuf:"bytes,3,opt,name=resulting_state,json=resultingState,proto3" json:"resulting_state,omitempty"`
	// String representation of the object type. eg. "user"
	ObjectType    *anypb.Any `protobuf:"bytes,4,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditEventData) Reset() {
	*x = AuditEventData{}
	mi := &file_common_v1_audit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditEventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditEventData) ProtoMessage() {}

func (x *AuditEventData) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_audit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditEventData.ProtoReflect.Descriptor instead.
func (*AuditEventData) Descriptor() ([]byte, []int) {
	return file_common_v1_audit_proto_rawDescGZIP(), []int{1}
}

func (x *AuditEventData) GetParameters() *anypb.Any {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *AuditEventData) GetPriorState() *anypb.Any {
	if x != nil {
		return x.PriorState
	}
	return nil
}

func (x *AuditEventData) GetResultingState() *anypb.Any {
	if x != nil {
		return x.ResultingState
	}
	return nil
}

func (x *AuditEventData) GetObjectType() *anypb.Any {
	if x != nil {
		return x.ObjectType
	}
	return nil
}

// AuditEventActor is the subject triggering the event
type AuditEventActor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Client        string                 `protobuf:"bytes,3,opt,name=client,proto3" json:"client,omitempty"`
	IpAddress     string                 `protobuf:"bytes,4,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	XForwardedFor string                 `protobuf:"bytes,5,opt,name=x_forwarded_for,json=xForwardedFor,proto3" json:"x_forwarded_for,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditEventActor) Reset() {
	*x = AuditEventActor{}
	mi := &file_common_v1_audit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditEventActor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditEventActor) ProtoMessage() {}

func (x *AuditEventActor) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_audit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditEventActor.ProtoReflect.Descriptor instead.
func (*AuditEventActor) Descriptor() ([]byte, []int) {
	return file_common_v1_audit_proto_rawDescGZIP(), []int{2}
}

func (x *AuditEventActor) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuditEventActor) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AuditEventActor) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *AuditEventActor) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *AuditEventActor) GetXForwardedFor() string {
	if x != nil {
		return x.XForwardedFor
	}
	return ""
}

// AuditEventError is a key-value store to store related information to
// the event that is not directly related to the modified entity
type AuditEventError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiPath       string                 `protobuf:"bytes,1,opt,name=api_path,json=apiPath,proto3" json:"api_path,omitempty"`
	ClusterId     string                 `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditEventError) Reset() {
	*x = AuditEventError{}
	mi := &file_common_v1_audit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditEventError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditEventError) ProtoMessage() {}

func (x *AuditEventError) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_audit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditEventError.ProtoReflect.Descriptor instead.
func (*AuditEventError) Descriptor() ([]byte, []int) {
	return file_common_v1_audit_proto_rawDescGZIP(), []int{3}
}

func (x *AuditEventError) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *AuditEventError) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

var File_common_v1_audit_proto protoreflect.FileDescriptor

const file_common_v1_audit_proto_rawDesc = "" +
	"\n" +
	"\x15common/v1/audit.proto\x12\tcommon.v1\x1a\x19google/protobuf/any.proto\"\x8c\x02\n" +
	"\vAuditRecord\x12\x1d\n" +
	"\n" +
	"event_name\x18\x01 \x01(\tR\teventName\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x128\n" +
	"\n" +
	"event_data\x18\x03 \x01(\v2\x19.common.v1.AuditEventDataR\teventData\x120\n" +
	"\x05actor\x18\x04 \x01(\v2\x1a.common.v1.AuditEventActorR\x05actor\x12(\n" +
	"\x04meta\x18\x05 \x01(\v2\x14.google.protobuf.AnyR\x04meta\x120\n" +
	"\x05error\x18\x06 \x01(\v2\x1a.common.v1.AuditEventErrorR\x05error\"\xf3\x01\n" +
	"\x0eAuditEventData\x124\n" +
	"\n" +
	"parameters\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\n" +
	"parameters\x125\n" +
	"\vprior_state\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\n" +
	"priorState\x12=\n" +
	"\x0fresulting_state\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\x0eresultingState\x125\n" +
	"\vobject_type\x18\x04 \x01(\v2\x14.google.protobuf.AnyR\n" +
	"objectType\"\xa8\x01\n" +
	"\x0fAuditEventActor\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x16\n" +
	"\x06client\x18\x03 \x01(\tR\x06client\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x04 \x01(\tR\tipAddress\x12&\n" +
	"\x0fx_forwarded_for\x18\x05 \x01(\tR\rxForwardedFor\"K\n" +
	"\x0fAuditEventError\x12\x19\n" +
	"\bapi_path\x18\x01 \x01(\tR\aapiPath\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x02 \x01(\tR\tclusterIdB\x0eZ\fcommon/v1;v1b\x06proto3"

var (
	file_common_v1_audit_proto_rawDescOnce sync.Once
	file_common_v1_audit_proto_rawDescData []byte
)

func file_common_v1_audit_proto_rawDescGZIP() []byte {
	file_common_v1_audit_proto_rawDescOnce.Do(func() {
		file_common_v1_audit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_v1_audit_proto_rawDesc), len(file_common_v1_audit_proto_rawDesc)))
	})
	return file_common_v1_audit_proto_rawDescData
}

var file_common_v1_audit_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_common_v1_audit_proto_goTypes = []any{
	(*AuditRecord)(nil),     // 0: common.v1.AuditRecord
	(*AuditEventData)(nil),  // 1: common.v1.AuditEventData
	(*AuditEventActor)(nil), // 2: common.v1.AuditEventActor
	(*AuditEventError)(nil), // 3: common.v1.AuditEventError
	(*anypb.Any)(nil),       // 4: google.protobuf.Any
}
var file_common_v1_audit_proto_depIdxs = []int32{
	1, // 0: common.v1.AuditRecord.event_data:type_name -> common.v1.AuditEventData
	2, // 1: common.v1.AuditRecord.actor:type_name -> common.v1.AuditEventActor
	4, // 2: common.v1.AuditRecord.meta:type_name -> google.protobuf.Any
	3, // 3: common.v1.AuditRecord.error:type_name -> common.v1.AuditEventError
	4, // 4: common.v1.AuditEventData.parameters:type_name -> google.protobuf.Any
	4, // 5: common.v1.AuditEventData.prior_state:type_name -> google.protobuf.Any
	4, // 6: common.v1.AuditEventData.resulting_state:type_name -> google.protobuf.Any
	4, // 7: common.v1.AuditEventData.object_type:type_name -> google.protobuf.Any
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_common_v1_audit_proto_init() }
func file_common_v1_audit_proto_init() {
	if File_common_v1_audit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_v1_audit_proto_rawDesc), len(file_common_v1_audit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_audit_proto_goTypes,
		DependencyIndexes: file_common_v1_audit_proto_depIdxs,
		MessageInfos:      file_common_v1_audit_proto_msgTypes,
	}.Build()
	File_common_v1_audit_proto = out.File
	file_common_v1_audit_proto_goTypes = nil
	file_common_v1_audit_proto_depIdxs = nil
}
