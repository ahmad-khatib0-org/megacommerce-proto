// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: common/v1/config.proto

package v1

import (
	v1 "github.com/ahmad-khatib0-org/megacommerce-proto/gen/go/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigMain struct {
	state                                    protoimpl.MessageState `protogen:"open.v1"`
	Env                                      *string                `protobuf:"bytes,1,opt,name=env,proto3,oneof" json:"env,omitempty"`
	SiteName                                 *string                `protobuf:"bytes,2,opt,name=site_name,json=siteName,proto3,oneof" json:"site_name,omitempty"`
	SiteUrl                                  *string                `protobuf:"bytes,3,opt,name=site_url,json=siteUrl,proto3,oneof" json:"site_url,omitempty"`
	EnableLinkPreviews                       *bool                  `protobuf:"varint,5,opt,name=enable_link_previews,json=enableLinkPreviews,proto3,oneof" json:"enable_link_previews,omitempty"`
	RestrictLinkPreviews                     *string                `protobuf:"bytes,6,opt,name=restrict_link_previews,json=restrictLinkPreviews,proto3,oneof" json:"restrict_link_previews,omitempty"`
	EnableClientPerformanceDebugging         *bool                  `protobuf:"varint,7,opt,name=enable_client_performance_debugging,json=enableClientPerformanceDebugging,proto3,oneof" json:"enable_client_performance_debugging,omitempty"`
	EnableGifPicker                          *bool                  `protobuf:"varint,8,opt,name=enable_gif_picker,json=enableGifPicker,proto3,oneof" json:"enable_gif_picker,omitempty"`
	EnableCustomEmoji                        *bool                  `protobuf:"varint,9,opt,name=enable_custom_emoji,json=enableCustomEmoji,proto3,oneof" json:"enable_custom_emoji,omitempty"`
	EnableEmojiPicker                        *bool                  `protobuf:"varint,10,opt,name=enable_emoji_picker,json=enableEmojiPicker,proto3,oneof" json:"enable_emoji_picker,omitempty"`
	TimeBetweenUserTypingUpdatesMilliseconds *int64                 `protobuf:"varint,11,opt,name=time_between_user_typing_updates_milliseconds,json=timeBetweenUserTypingUpdatesMilliseconds,proto3,oneof" json:"time_between_user_typing_updates_milliseconds,omitempty"`
	EnableFileSearch                         *bool                  `protobuf:"varint,12,opt,name=enable_file_search,json=enableFileSearch,proto3,oneof" json:"enable_file_search,omitempty"`
	EnableUserTypingMessages                 *bool                  `protobuf:"varint,13,opt,name=enable_user_typing_messages,json=enableUserTypingMessages,proto3,oneof" json:"enable_user_typing_messages,omitempty"`
	EnableUserStatuses                       *bool                  `protobuf:"varint,14,opt,name=enable_user_statuses,json=enableUserStatuses,proto3,oneof" json:"enable_user_statuses,omitempty"`
	EnableEmailInvitations                   *bool                  `protobuf:"varint,15,opt,name=enable_email_invitations,json=enableEmailInvitations,proto3,oneof" json:"enable_email_invitations,omitempty"`
	EnableSvgs                               *bool                  `protobuf:"varint,16,opt,name=enable_svgs,json=enableSvgs,proto3,oneof" json:"enable_svgs,omitempty"`
	AllowPersistentNotifications             *bool                  `protobuf:"varint,17,opt,name=allow_persistent_notifications,json=allowPersistentNotifications,proto3,oneof" json:"allow_persistent_notifications,omitempty"`
	PersistentNotificationIntervalMinutes    *int32                 `protobuf:"varint,18,opt,name=persistent_notification_interval_minutes,json=persistentNotificationIntervalMinutes,proto3,oneof" json:"persistent_notification_interval_minutes,omitempty"`
	PersistentNotificationMaxCount           *int32                 `protobuf:"varint,19,opt,name=persistent_notification_max_count,json=persistentNotificationMaxCount,proto3,oneof" json:"persistent_notification_max_count,omitempty"`
	PersistentNotificationMaxRecipients      *int32                 `protobuf:"varint,20,opt,name=persistent_notification_max_recipients,json=persistentNotificationMaxRecipients,proto3,oneof" json:"persistent_notification_max_recipients,omitempty"`
	FeatureFlagSyncIntervalSeconds           *int32                 `protobuf:"varint,21,opt,name=feature_flag_sync_interval_seconds,json=featureFlagSyncIntervalSeconds,proto3,oneof" json:"feature_flag_sync_interval_seconds,omitempty"`
	AllowSyncedDrafts                        *bool                  `protobuf:"varint,22,opt,name=allow_synced_drafts,json=allowSyncedDrafts,proto3,oneof" json:"allow_synced_drafts,omitempty"`
	unknownFields                            protoimpl.UnknownFields
	sizeCache                                protoimpl.SizeCache
}

func (x *ConfigMain) Reset() {
	*x = ConfigMain{}
	mi := &file_common_v1_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigMain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigMain) ProtoMessage() {}

func (x *ConfigMain) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigMain.ProtoReflect.Descriptor instead.
func (*ConfigMain) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigMain) GetEnv() string {
	if x != nil && x.Env != nil {
		return *x.Env
	}
	return ""
}

func (x *ConfigMain) GetSiteName() string {
	if x != nil && x.SiteName != nil {
		return *x.SiteName
	}
	return ""
}

func (x *ConfigMain) GetSiteUrl() string {
	if x != nil && x.SiteUrl != nil {
		return *x.SiteUrl
	}
	return ""
}

func (x *ConfigMain) GetEnableLinkPreviews() bool {
	if x != nil && x.EnableLinkPreviews != nil {
		return *x.EnableLinkPreviews
	}
	return false
}

func (x *ConfigMain) GetRestrictLinkPreviews() string {
	if x != nil && x.RestrictLinkPreviews != nil {
		return *x.RestrictLinkPreviews
	}
	return ""
}

func (x *ConfigMain) GetEnableClientPerformanceDebugging() bool {
	if x != nil && x.EnableClientPerformanceDebugging != nil {
		return *x.EnableClientPerformanceDebugging
	}
	return false
}

func (x *ConfigMain) GetEnableGifPicker() bool {
	if x != nil && x.EnableGifPicker != nil {
		return *x.EnableGifPicker
	}
	return false
}

func (x *ConfigMain) GetEnableCustomEmoji() bool {
	if x != nil && x.EnableCustomEmoji != nil {
		return *x.EnableCustomEmoji
	}
	return false
}

func (x *ConfigMain) GetEnableEmojiPicker() bool {
	if x != nil && x.EnableEmojiPicker != nil {
		return *x.EnableEmojiPicker
	}
	return false
}

func (x *ConfigMain) GetTimeBetweenUserTypingUpdatesMilliseconds() int64 {
	if x != nil && x.TimeBetweenUserTypingUpdatesMilliseconds != nil {
		return *x.TimeBetweenUserTypingUpdatesMilliseconds
	}
	return 0
}

func (x *ConfigMain) GetEnableFileSearch() bool {
	if x != nil && x.EnableFileSearch != nil {
		return *x.EnableFileSearch
	}
	return false
}

func (x *ConfigMain) GetEnableUserTypingMessages() bool {
	if x != nil && x.EnableUserTypingMessages != nil {
		return *x.EnableUserTypingMessages
	}
	return false
}

func (x *ConfigMain) GetEnableUserStatuses() bool {
	if x != nil && x.EnableUserStatuses != nil {
		return *x.EnableUserStatuses
	}
	return false
}

func (x *ConfigMain) GetEnableEmailInvitations() bool {
	if x != nil && x.EnableEmailInvitations != nil {
		return *x.EnableEmailInvitations
	}
	return false
}

func (x *ConfigMain) GetEnableSvgs() bool {
	if x != nil && x.EnableSvgs != nil {
		return *x.EnableSvgs
	}
	return false
}

func (x *ConfigMain) GetAllowPersistentNotifications() bool {
	if x != nil && x.AllowPersistentNotifications != nil {
		return *x.AllowPersistentNotifications
	}
	return false
}

func (x *ConfigMain) GetPersistentNotificationIntervalMinutes() int32 {
	if x != nil && x.PersistentNotificationIntervalMinutes != nil {
		return *x.PersistentNotificationIntervalMinutes
	}
	return 0
}

func (x *ConfigMain) GetPersistentNotificationMaxCount() int32 {
	if x != nil && x.PersistentNotificationMaxCount != nil {
		return *x.PersistentNotificationMaxCount
	}
	return 0
}

func (x *ConfigMain) GetPersistentNotificationMaxRecipients() int32 {
	if x != nil && x.PersistentNotificationMaxRecipients != nil {
		return *x.PersistentNotificationMaxRecipients
	}
	return 0
}

func (x *ConfigMain) GetFeatureFlagSyncIntervalSeconds() int32 {
	if x != nil && x.FeatureFlagSyncIntervalSeconds != nil {
		return *x.FeatureFlagSyncIntervalSeconds
	}
	return 0
}

func (x *ConfigMain) GetAllowSyncedDrafts() bool {
	if x != nil && x.AllowSyncedDrafts != nil {
		return *x.AllowSyncedDrafts
	}
	return false
}

type ConfigServices struct {
	state                                  protoimpl.MessageState `protogen:"open.v1"`
	CommonServiceGrpcUrl                   *string                `protobuf:"bytes,1,opt,name=common_service_grpc_url,json=commonServiceGrpcUrl,proto3,oneof" json:"common_service_grpc_url,omitempty"`
	UserServiceGrpcUrl                     *string                `protobuf:"bytes,2,opt,name=user_service_grpc_url,json=userServiceGrpcUrl,proto3,oneof" json:"user_service_grpc_url,omitempty"`
	ProductsServiceGrpcUrl                 *string                `protobuf:"bytes,3,opt,name=products_service_grpc_url,json=productsServiceGrpcUrl,proto3,oneof" json:"products_service_grpc_url,omitempty"`
	JaegerCollectorUrl                     *string                `protobuf:"bytes,4,opt,name=jaeger_collector_url,json=jaegerCollectorUrl,proto3,oneof" json:"jaeger_collector_url,omitempty"`
	CommonServicePrometheusUrl             *string                `protobuf:"bytes,5,opt,name=common_service_prometheus_url,json=commonServicePrometheusUrl,proto3,oneof" json:"common_service_prometheus_url,omitempty"`
	UserServicePrometheusUrl               *string                `protobuf:"bytes,6,opt,name=user_service_prometheus_url,json=userServicePrometheusUrl,proto3,oneof" json:"user_service_prometheus_url,omitempty"`
	ProductsServicePrometheusUrl           *string                `protobuf:"bytes,7,opt,name=products_service_prometheus_url,json=productsServicePrometheusUrl,proto3,oneof" json:"products_service_prometheus_url,omitempty"`
	UsersServiceMaxReceiveMessageSizeBytes *int64                 `protobuf:"varint,8,opt,name=users_service_max_receive_message_size_bytes,json=usersServiceMaxReceiveMessageSizeBytes,proto3,oneof" json:"users_service_max_receive_message_size_bytes,omitempty"`
	unknownFields                          protoimpl.UnknownFields
	sizeCache                              protoimpl.SizeCache
}

func (x *ConfigServices) Reset() {
	*x = ConfigServices{}
	mi := &file_common_v1_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigServices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigServices) ProtoMessage() {}

func (x *ConfigServices) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigServices.ProtoReflect.Descriptor instead.
func (*ConfigServices) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigServices) GetCommonServiceGrpcUrl() string {
	if x != nil && x.CommonServiceGrpcUrl != nil {
		return *x.CommonServiceGrpcUrl
	}
	return ""
}

func (x *ConfigServices) GetUserServiceGrpcUrl() string {
	if x != nil && x.UserServiceGrpcUrl != nil {
		return *x.UserServiceGrpcUrl
	}
	return ""
}

func (x *ConfigServices) GetProductsServiceGrpcUrl() string {
	if x != nil && x.ProductsServiceGrpcUrl != nil {
		return *x.ProductsServiceGrpcUrl
	}
	return ""
}

func (x *ConfigServices) GetJaegerCollectorUrl() string {
	if x != nil && x.JaegerCollectorUrl != nil {
		return *x.JaegerCollectorUrl
	}
	return ""
}

func (x *ConfigServices) GetCommonServicePrometheusUrl() string {
	if x != nil && x.CommonServicePrometheusUrl != nil {
		return *x.CommonServicePrometheusUrl
	}
	return ""
}

func (x *ConfigServices) GetUserServicePrometheusUrl() string {
	if x != nil && x.UserServicePrometheusUrl != nil {
		return *x.UserServicePrometheusUrl
	}
	return ""
}

func (x *ConfigServices) GetProductsServicePrometheusUrl() string {
	if x != nil && x.ProductsServicePrometheusUrl != nil {
		return *x.ProductsServicePrometheusUrl
	}
	return ""
}

func (x *ConfigServices) GetUsersServiceMaxReceiveMessageSizeBytes() int64 {
	if x != nil && x.UsersServiceMaxReceiveMessageSizeBytes != nil {
		return *x.UsersServiceMaxReceiveMessageSizeBytes
	}
	return 0
}

type ConfigSecurity struct {
	state                             protoimpl.MessageState `protogen:"open.v1"`
	RestrictedUsernames               map[string]string      `protobuf:"bytes,1,rep,name=restricted_usernames,json=restrictedUsernames,proto3" json:"restricted_usernames,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MaximumLoginAttempts              *int32                 `protobuf:"varint,2,opt,name=maximum_login_attempts,json=maximumLoginAttempts,proto3,oneof" json:"maximum_login_attempts,omitempty"`
	EnableInsecureOutgoingConnections *bool                  `protobuf:"varint,3,opt,name=enable_insecure_outgoing_connections,json=enableInsecureOutgoingConnections,proto3,oneof" json:"enable_insecure_outgoing_connections,omitempty"`
	EnableMultifactorAuthentication   *bool                  `protobuf:"varint,4,opt,name=enable_multifactor_authentication,json=enableMultifactorAuthentication,proto3,oneof" json:"enable_multifactor_authentication,omitempty"`
	EnforceMultifactorAuthentication  *bool                  `protobuf:"varint,5,opt,name=enforce_multifactor_authentication,json=enforceMultifactorAuthentication,proto3,oneof" json:"enforce_multifactor_authentication,omitempty"`
	EnableOauthServiceProvider        *bool                  `protobuf:"varint,6,opt,name=enable_oauth_service_provider,json=enableOauthServiceProvider,proto3,oneof" json:"enable_oauth_service_provider,omitempty"`
	EnableOutgoingOauthConnections    *bool                  `protobuf:"varint,7,opt,name=enable_outgoing_oauth_connections,json=enableOutgoingOauthConnections,proto3,oneof" json:"enable_outgoing_oauth_connections,omitempty"`
	TerminateSessionsOnPasswordChange *bool                  `protobuf:"varint,8,opt,name=terminate_sessions_on_password_change,json=terminateSessionsOnPasswordChange,proto3,oneof" json:"terminate_sessions_on_password_change,omitempty"`
	SessionLengthWebInHours           *int32                 `protobuf:"varint,9,opt,name=session_length_web_in_hours,json=sessionLengthWebInHours,proto3,oneof" json:"session_length_web_in_hours,omitempty"`
	SessionLengthMobileInHours        *int32                 `protobuf:"varint,10,opt,name=session_length_mobile_in_hours,json=sessionLengthMobileInHours,proto3,oneof" json:"session_length_mobile_in_hours,omitempty"`
	SessionLengthSsoInHours           *int32                 `protobuf:"varint,11,opt,name=session_length_sso_in_hours,json=sessionLengthSsoInHours,proto3,oneof" json:"session_length_sso_in_hours,omitempty"`
	AllowCorsFrom                     *string                `protobuf:"bytes,12,opt,name=allow_cors_from,json=allowCorsFrom,proto3,oneof" json:"allow_cors_from,omitempty"`
	CorsExposedHeaders                *string                `protobuf:"bytes,13,opt,name=cors_exposed_headers,json=corsExposedHeaders,proto3,oneof" json:"cors_exposed_headers,omitempty"`
	CorsAllowCredentials              *bool                  `protobuf:"varint,14,opt,name=cors_allow_credentials,json=corsAllowCredentials,proto3,oneof" json:"cors_allow_credentials,omitempty"`
	CorsDebug                         *bool                  `protobuf:"varint,15,opt,name=cors_debug,json=corsDebug,proto3,oneof" json:"cors_debug,omitempty"`
	AllowCookiesForSubdomains         *bool                  `protobuf:"varint,16,opt,name=allow_cookies_for_subdomains,json=allowCookiesForSubdomains,proto3,oneof" json:"allow_cookies_for_subdomains,omitempty"`
	SessionCacheInMinutes             *int32                 `protobuf:"varint,17,opt,name=session_cache_in_minutes,json=sessionCacheInMinutes,proto3,oneof" json:"session_cache_in_minutes,omitempty"`
	EmailConfirmationUrl              *string                `protobuf:"bytes,18,opt,name=email_confirmation_url,json=emailConfirmationUrl,proto3,oneof" json:"email_confirmation_url,omitempty"`
	TokenConfirmationExpiryInHours    *uint32                `protobuf:"varint,19,opt,name=token_confirmation_expiry_in_hours,json=tokenConfirmationExpiryInHours,proto3,oneof" json:"token_confirmation_expiry_in_hours,omitempty"`
	TokenPasswordResetExpiryInHours   *uint32                `protobuf:"varint,20,opt,name=token_password_reset_expiry_in_hours,json=tokenPasswordResetExpiryInHours,proto3,oneof" json:"token_password_reset_expiry_in_hours,omitempty"`
	PasswordResetUrl                  *string                `protobuf:"bytes,21,opt,name=password_reset_url,json=passwordResetUrl,proto3,oneof" json:"password_reset_url,omitempty"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *ConfigSecurity) Reset() {
	*x = ConfigSecurity{}
	mi := &file_common_v1_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigSecurity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSecurity) ProtoMessage() {}

func (x *ConfigSecurity) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSecurity.ProtoReflect.Descriptor instead.
func (*ConfigSecurity) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigSecurity) GetRestrictedUsernames() map[string]string {
	if x != nil {
		return x.RestrictedUsernames
	}
	return nil
}

func (x *ConfigSecurity) GetMaximumLoginAttempts() int32 {
	if x != nil && x.MaximumLoginAttempts != nil {
		return *x.MaximumLoginAttempts
	}
	return 0
}

func (x *ConfigSecurity) GetEnableInsecureOutgoingConnections() bool {
	if x != nil && x.EnableInsecureOutgoingConnections != nil {
		return *x.EnableInsecureOutgoingConnections
	}
	return false
}

func (x *ConfigSecurity) GetEnableMultifactorAuthentication() bool {
	if x != nil && x.EnableMultifactorAuthentication != nil {
		return *x.EnableMultifactorAuthentication
	}
	return false
}

func (x *ConfigSecurity) GetEnforceMultifactorAuthentication() bool {
	if x != nil && x.EnforceMultifactorAuthentication != nil {
		return *x.EnforceMultifactorAuthentication
	}
	return false
}

func (x *ConfigSecurity) GetEnableOauthServiceProvider() bool {
	if x != nil && x.EnableOauthServiceProvider != nil {
		return *x.EnableOauthServiceProvider
	}
	return false
}

func (x *ConfigSecurity) GetEnableOutgoingOauthConnections() bool {
	if x != nil && x.EnableOutgoingOauthConnections != nil {
		return *x.EnableOutgoingOauthConnections
	}
	return false
}

func (x *ConfigSecurity) GetTerminateSessionsOnPasswordChange() bool {
	if x != nil && x.TerminateSessionsOnPasswordChange != nil {
		return *x.TerminateSessionsOnPasswordChange
	}
	return false
}

func (x *ConfigSecurity) GetSessionLengthWebInHours() int32 {
	if x != nil && x.SessionLengthWebInHours != nil {
		return *x.SessionLengthWebInHours
	}
	return 0
}

func (x *ConfigSecurity) GetSessionLengthMobileInHours() int32 {
	if x != nil && x.SessionLengthMobileInHours != nil {
		return *x.SessionLengthMobileInHours
	}
	return 0
}

func (x *ConfigSecurity) GetSessionLengthSsoInHours() int32 {
	if x != nil && x.SessionLengthSsoInHours != nil {
		return *x.SessionLengthSsoInHours
	}
	return 0
}

func (x *ConfigSecurity) GetAllowCorsFrom() string {
	if x != nil && x.AllowCorsFrom != nil {
		return *x.AllowCorsFrom
	}
	return ""
}

func (x *ConfigSecurity) GetCorsExposedHeaders() string {
	if x != nil && x.CorsExposedHeaders != nil {
		return *x.CorsExposedHeaders
	}
	return ""
}

func (x *ConfigSecurity) GetCorsAllowCredentials() bool {
	if x != nil && x.CorsAllowCredentials != nil {
		return *x.CorsAllowCredentials
	}
	return false
}

func (x *ConfigSecurity) GetCorsDebug() bool {
	if x != nil && x.CorsDebug != nil {
		return *x.CorsDebug
	}
	return false
}

func (x *ConfigSecurity) GetAllowCookiesForSubdomains() bool {
	if x != nil && x.AllowCookiesForSubdomains != nil {
		return *x.AllowCookiesForSubdomains
	}
	return false
}

func (x *ConfigSecurity) GetSessionCacheInMinutes() int32 {
	if x != nil && x.SessionCacheInMinutes != nil {
		return *x.SessionCacheInMinutes
	}
	return 0
}

func (x *ConfigSecurity) GetEmailConfirmationUrl() string {
	if x != nil && x.EmailConfirmationUrl != nil {
		return *x.EmailConfirmationUrl
	}
	return ""
}

func (x *ConfigSecurity) GetTokenConfirmationExpiryInHours() uint32 {
	if x != nil && x.TokenConfirmationExpiryInHours != nil {
		return *x.TokenConfirmationExpiryInHours
	}
	return 0
}

func (x *ConfigSecurity) GetTokenPasswordResetExpiryInHours() uint32 {
	if x != nil && x.TokenPasswordResetExpiryInHours != nil {
		return *x.TokenPasswordResetExpiryInHours
	}
	return 0
}

func (x *ConfigSecurity) GetPasswordResetUrl() string {
	if x != nil && x.PasswordResetUrl != nil {
		return *x.PasswordResetUrl
	}
	return ""
}

type CacheConfig struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CacheType          *string                `protobuf:"bytes,1,opt,name=cache_type,json=cacheType,proto3,oneof" json:"cache_type,omitempty"`
	RedisAddress       *string                `protobuf:"bytes,2,opt,name=redis_address,json=redisAddress,proto3,oneof" json:"redis_address,omitempty"`
	RedisPassword      *string                `protobuf:"bytes,3,opt,name=redis_password,json=redisPassword,proto3,oneof" json:"redis_password,omitempty"`
	RedisDb            *int32                 `protobuf:"varint,4,opt,name=redis_db,json=redisDb,proto3,oneof" json:"redis_db,omitempty"`
	RedisCachePrefix   *string                `protobuf:"bytes,5,opt,name=redis_cache_prefix,json=redisCachePrefix,proto3,oneof" json:"redis_cache_prefix,omitempty"`
	DisableClientCache *bool                  `protobuf:"varint,6,opt,name=disable_client_cache,json=disableClientCache,proto3,oneof" json:"disable_client_cache,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CacheConfig) Reset() {
	*x = CacheConfig{}
	mi := &file_common_v1_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheConfig) ProtoMessage() {}

func (x *CacheConfig) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheConfig.ProtoReflect.Descriptor instead.
func (*CacheConfig) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{3}
}

func (x *CacheConfig) GetCacheType() string {
	if x != nil && x.CacheType != nil {
		return *x.CacheType
	}
	return ""
}

func (x *CacheConfig) GetRedisAddress() string {
	if x != nil && x.RedisAddress != nil {
		return *x.RedisAddress
	}
	return ""
}

func (x *CacheConfig) GetRedisPassword() string {
	if x != nil && x.RedisPassword != nil {
		return *x.RedisPassword
	}
	return ""
}

func (x *CacheConfig) GetRedisDb() int32 {
	if x != nil && x.RedisDb != nil {
		return *x.RedisDb
	}
	return 0
}

func (x *CacheConfig) GetRedisCachePrefix() string {
	if x != nil && x.RedisCachePrefix != nil {
		return *x.RedisCachePrefix
	}
	return ""
}

func (x *CacheConfig) GetDisableClientCache() bool {
	if x != nil && x.DisableClientCache != nil {
		return *x.DisableClientCache
	}
	return false
}

type ConfigMetrics struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Enable                    *bool                  `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	BlockProfileRate          *int32                 `protobuf:"varint,2,opt,name=block_profile_rate,json=blockProfileRate,proto3,oneof" json:"block_profile_rate,omitempty"`
	ListenAddress             *string                `protobuf:"bytes,3,opt,name=listen_address,json=listenAddress,proto3,oneof" json:"listen_address,omitempty"`
	EnableClientMetrics       *bool                  `protobuf:"varint,4,opt,name=enable_client_metrics,json=enableClientMetrics,proto3,oneof" json:"enable_client_metrics,omitempty"`
	EnableNotificationMetrics *bool                  `protobuf:"varint,5,opt,name=enable_notification_metrics,json=enableNotificationMetrics,proto3,oneof" json:"enable_notification_metrics,omitempty"`
	ClientSideUserIds         []string               `protobuf:"bytes,6,rep,name=client_side_user_ids,json=clientSideUserIds,proto3" json:"client_side_user_ids,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ConfigMetrics) Reset() {
	*x = ConfigMetrics{}
	mi := &file_common_v1_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigMetrics) ProtoMessage() {}

func (x *ConfigMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigMetrics.ProtoReflect.Descriptor instead.
func (*ConfigMetrics) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigMetrics) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ConfigMetrics) GetBlockProfileRate() int32 {
	if x != nil && x.BlockProfileRate != nil {
		return *x.BlockProfileRate
	}
	return 0
}

func (x *ConfigMetrics) GetListenAddress() string {
	if x != nil && x.ListenAddress != nil {
		return *x.ListenAddress
	}
	return ""
}

func (x *ConfigMetrics) GetEnableClientMetrics() bool {
	if x != nil && x.EnableClientMetrics != nil {
		return *x.EnableClientMetrics
	}
	return false
}

func (x *ConfigMetrics) GetEnableNotificationMetrics() bool {
	if x != nil && x.EnableNotificationMetrics != nil {
		return *x.EnableNotificationMetrics
	}
	return false
}

func (x *ConfigMetrics) GetClientSideUserIds() []string {
	if x != nil {
		return x.ClientSideUserIds
	}
	return nil
}

type ConfigSSO struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Enable            *bool                  `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	Secret            *string                `protobuf:"bytes,2,opt,name=secret,proto3,oneof" json:"secret,omitempty"`
	Id                *string                `protobuf:"bytes,3,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Scope             *string                `protobuf:"bytes,4,opt,name=scope,proto3,oneof" json:"scope,omitempty"`
	AuthEndpoint      *string                `protobuf:"bytes,5,opt,name=auth_endpoint,json=authEndpoint,proto3,oneof" json:"auth_endpoint,omitempty"`
	TokenEndpoint     *string                `protobuf:"bytes,6,opt,name=token_endpoint,json=tokenEndpoint,proto3,oneof" json:"token_endpoint,omitempty"`
	UserApiEndpoint   *string                `protobuf:"bytes,7,opt,name=user_api_endpoint,json=userApiEndpoint,proto3,oneof" json:"user_api_endpoint,omitempty"`
	DiscoveryEndpoint *string                `protobuf:"bytes,8,opt,name=discovery_endpoint,json=discoveryEndpoint,proto3,oneof" json:"discovery_endpoint,omitempty"`
	ButtonText        *string                `protobuf:"bytes,9,opt,name=button_text,json=buttonText,proto3,oneof" json:"button_text,omitempty"`
	ButtonColor       *string                `protobuf:"bytes,10,opt,name=button_color,json=buttonColor,proto3,oneof" json:"button_color,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ConfigSSO) Reset() {
	*x = ConfigSSO{}
	mi := &file_common_v1_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigSSO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSSO) ProtoMessage() {}

func (x *ConfigSSO) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSSO.ProtoReflect.Descriptor instead.
func (*ConfigSSO) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigSSO) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ConfigSSO) GetSecret() string {
	if x != nil && x.Secret != nil {
		return *x.Secret
	}
	return ""
}

func (x *ConfigSSO) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ConfigSSO) GetScope() string {
	if x != nil && x.Scope != nil {
		return *x.Scope
	}
	return ""
}

func (x *ConfigSSO) GetAuthEndpoint() string {
	if x != nil && x.AuthEndpoint != nil {
		return *x.AuthEndpoint
	}
	return ""
}

func (x *ConfigSSO) GetTokenEndpoint() string {
	if x != nil && x.TokenEndpoint != nil {
		return *x.TokenEndpoint
	}
	return ""
}

func (x *ConfigSSO) GetUserApiEndpoint() string {
	if x != nil && x.UserApiEndpoint != nil {
		return *x.UserApiEndpoint
	}
	return ""
}

func (x *ConfigSSO) GetDiscoveryEndpoint() string {
	if x != nil && x.DiscoveryEndpoint != nil {
		return *x.DiscoveryEndpoint
	}
	return ""
}

func (x *ConfigSSO) GetButtonText() string {
	if x != nil && x.ButtonText != nil {
		return *x.ButtonText
	}
	return ""
}

func (x *ConfigSSO) GetButtonColor() string {
	if x != nil && x.ButtonColor != nil {
		return *x.ButtonColor
	}
	return ""
}

type ConfigSql struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	DriverName                  *string                `protobuf:"bytes,1,opt,name=driver_name,json=driverName,proto3,oneof" json:"driver_name,omitempty"`
	DataSource                  *string                `protobuf:"bytes,2,opt,name=data_source,json=dataSource,proto3,oneof" json:"data_source,omitempty"`
	MaxIdleConns                *int32                 `protobuf:"varint,3,opt,name=max_idle_conns,json=maxIdleConns,proto3,oneof" json:"max_idle_conns,omitempty"`
	ConnMaxLifetimeMilliseconds *int32                 `protobuf:"varint,4,opt,name=conn_max_lifetime_milliseconds,json=connMaxLifetimeMilliseconds,proto3,oneof" json:"conn_max_lifetime_milliseconds,omitempty"`
	ConnMaxIdleTimeMilliseconds *int32                 `protobuf:"varint,5,opt,name=conn_max_idle_time_milliseconds,json=connMaxIdleTimeMilliseconds,proto3,oneof" json:"conn_max_idle_time_milliseconds,omitempty"`
	MaxOpenConns                *int32                 `protobuf:"varint,6,opt,name=max_open_conns,json=maxOpenConns,proto3,oneof" json:"max_open_conns,omitempty"`
	Trace                       *bool                  `protobuf:"varint,7,opt,name=trace,proto3,oneof" json:"trace,omitempty"`
	AtRestEncryptKey            *string                `protobuf:"bytes,8,opt,name=at_rest_encrypt_key,json=atRestEncryptKey,proto3,oneof" json:"at_rest_encrypt_key,omitempty"`
	QueryTimeout                *int32                 `protobuf:"varint,9,opt,name=query_timeout,json=queryTimeout,proto3,oneof" json:"query_timeout,omitempty"`
	DisableDatabaseSearch       *bool                  `protobuf:"varint,10,opt,name=disable_database_search,json=disableDatabaseSearch,proto3,oneof" json:"disable_database_search,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ConfigSql) Reset() {
	*x = ConfigSql{}
	mi := &file_common_v1_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigSql) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSql) ProtoMessage() {}

func (x *ConfigSql) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSql.ProtoReflect.Descriptor instead.
func (*ConfigSql) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{6}
}

func (x *ConfigSql) GetDriverName() string {
	if x != nil && x.DriverName != nil {
		return *x.DriverName
	}
	return ""
}

func (x *ConfigSql) GetDataSource() string {
	if x != nil && x.DataSource != nil {
		return *x.DataSource
	}
	return ""
}

func (x *ConfigSql) GetMaxIdleConns() int32 {
	if x != nil && x.MaxIdleConns != nil {
		return *x.MaxIdleConns
	}
	return 0
}

func (x *ConfigSql) GetConnMaxLifetimeMilliseconds() int32 {
	if x != nil && x.ConnMaxLifetimeMilliseconds != nil {
		return *x.ConnMaxLifetimeMilliseconds
	}
	return 0
}

func (x *ConfigSql) GetConnMaxIdleTimeMilliseconds() int32 {
	if x != nil && x.ConnMaxIdleTimeMilliseconds != nil {
		return *x.ConnMaxIdleTimeMilliseconds
	}
	return 0
}

func (x *ConfigSql) GetMaxOpenConns() int32 {
	if x != nil && x.MaxOpenConns != nil {
		return *x.MaxOpenConns
	}
	return 0
}

func (x *ConfigSql) GetTrace() bool {
	if x != nil && x.Trace != nil {
		return *x.Trace
	}
	return false
}

func (x *ConfigSql) GetAtRestEncryptKey() string {
	if x != nil && x.AtRestEncryptKey != nil {
		return *x.AtRestEncryptKey
	}
	return ""
}

func (x *ConfigSql) GetQueryTimeout() int32 {
	if x != nil && x.QueryTimeout != nil {
		return *x.QueryTimeout
	}
	return 0
}

func (x *ConfigSql) GetDisableDatabaseSearch() bool {
	if x != nil && x.DisableDatabaseSearch != nil {
		return *x.DisableDatabaseSearch
	}
	return false
}

type ConfigPassword struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	MinimumLength    *int32                 `protobuf:"varint,1,opt,name=minimum_length,json=minimumLength,proto3,oneof" json:"minimum_length,omitempty"`
	MaximumLength    *int32                 `protobuf:"varint,2,opt,name=maximum_length,json=maximumLength,proto3,oneof" json:"maximum_length,omitempty"`
	Lowercase        *bool                  `protobuf:"varint,3,opt,name=lowercase,proto3,oneof" json:"lowercase,omitempty"`
	Number           *bool                  `protobuf:"varint,4,opt,name=number,proto3,oneof" json:"number,omitempty"`
	Uppercase        *bool                  `protobuf:"varint,5,opt,name=uppercase,proto3,oneof" json:"uppercase,omitempty"`
	Symbol           *bool                  `protobuf:"varint,6,opt,name=symbol,proto3,oneof" json:"symbol,omitempty"`
	EnableForgotLink *bool                  `protobuf:"varint,7,opt,name=enable_forgot_link,json=enableForgotLink,proto3,oneof" json:"enable_forgot_link,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ConfigPassword) Reset() {
	*x = ConfigPassword{}
	mi := &file_common_v1_config_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigPassword) ProtoMessage() {}

func (x *ConfigPassword) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigPassword.ProtoReflect.Descriptor instead.
func (*ConfigPassword) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{7}
}

func (x *ConfigPassword) GetMinimumLength() int32 {
	if x != nil && x.MinimumLength != nil {
		return *x.MinimumLength
	}
	return 0
}

func (x *ConfigPassword) GetMaximumLength() int32 {
	if x != nil && x.MaximumLength != nil {
		return *x.MaximumLength
	}
	return 0
}

func (x *ConfigPassword) GetLowercase() bool {
	if x != nil && x.Lowercase != nil {
		return *x.Lowercase
	}
	return false
}

func (x *ConfigPassword) GetNumber() bool {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return false
}

func (x *ConfigPassword) GetUppercase() bool {
	if x != nil && x.Uppercase != nil {
		return *x.Uppercase
	}
	return false
}

func (x *ConfigPassword) GetSymbol() bool {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return false
}

func (x *ConfigPassword) GetEnableForgotLink() bool {
	if x != nil && x.EnableForgotLink != nil {
		return *x.EnableForgotLink
	}
	return false
}

type ConfigFile struct {
	state                              protoimpl.MessageState `protogen:"open.v1"`
	EnableFileAttachments              *bool                  `protobuf:"varint,1,opt,name=enable_file_attachments,json=enableFileAttachments,proto3,oneof" json:"enable_file_attachments,omitempty"`
	EnableMobileUpload                 *bool                  `protobuf:"varint,2,opt,name=enable_mobile_upload,json=enableMobileUpload,proto3,oneof" json:"enable_mobile_upload,omitempty"`
	EnableMobileDownload               *bool                  `protobuf:"varint,3,opt,name=enable_mobile_download,json=enableMobileDownload,proto3,oneof" json:"enable_mobile_download,omitempty"`
	MaxImageResolution                 *int64                 `protobuf:"varint,4,opt,name=max_image_resolution,json=maxImageResolution,proto3,oneof" json:"max_image_resolution,omitempty"`
	MaxImageDecoderConcurrency         *int64                 `protobuf:"varint,5,opt,name=max_image_decoder_concurrency,json=maxImageDecoderConcurrency,proto3,oneof" json:"max_image_decoder_concurrency,omitempty"`
	DriverName                         *string                `protobuf:"bytes,6,opt,name=driver_name,json=driverName,proto3,oneof" json:"driver_name,omitempty"`
	AmazonS3AccessKeyId                *string                `protobuf:"bytes,7,opt,name=amazon_s3_access_key_id,json=amazonS3AccessKeyId,proto3,oneof" json:"amazon_s3_access_key_id,omitempty"`
	AmazonS3SecretAccessKey            *string                `protobuf:"bytes,8,opt,name=amazon_s3_secret_access_key,json=amazonS3SecretAccessKey,proto3,oneof" json:"amazon_s3_secret_access_key,omitempty"`
	AmazonS3Bucket                     *string                `protobuf:"bytes,9,opt,name=amazon_s3_bucket,json=amazonS3Bucket,proto3,oneof" json:"amazon_s3_bucket,omitempty"`
	AmazonS3PathPrefix                 *string                `protobuf:"bytes,10,opt,name=amazon_s3_path_prefix,json=amazonS3PathPrefix,proto3,oneof" json:"amazon_s3_path_prefix,omitempty"`
	AmazonS3Region                     *string                `protobuf:"bytes,11,opt,name=amazon_s3_region,json=amazonS3Region,proto3,oneof" json:"amazon_s3_region,omitempty"`
	AmazonS3Endpoint                   *string                `protobuf:"bytes,12,opt,name=amazon_s3_endpoint,json=amazonS3Endpoint,proto3,oneof" json:"amazon_s3_endpoint,omitempty"`
	AmazonS3Ssl                        *bool                  `protobuf:"varint,13,opt,name=amazon_s3_ssl,json=amazonS3Ssl,proto3,oneof" json:"amazon_s3_ssl,omitempty"`
	AmazonS3SignV2                     *bool                  `protobuf:"varint,14,opt,name=amazon_s3_sign_v2,json=amazonS3SignV2,proto3,oneof" json:"amazon_s3_sign_v2,omitempty"`
	AmazonS3Sse                        *bool                  `protobuf:"varint,15,opt,name=amazon_s3_sse,json=amazonS3Sse,proto3,oneof" json:"amazon_s3_sse,omitempty"`
	AmazonS3Trace                      *bool                  `protobuf:"varint,16,opt,name=amazon_s3_trace,json=amazonS3Trace,proto3,oneof" json:"amazon_s3_trace,omitempty"`
	AmazonS3RequestTimeoutMilliseconds *int64                 `protobuf:"varint,17,opt,name=amazon_s3_request_timeout_milliseconds,json=amazonS3RequestTimeoutMilliseconds,proto3,oneof" json:"amazon_s3_request_timeout_milliseconds,omitempty"`
	AmazonS3UploadPartSizeBytes        *int64                 `protobuf:"varint,18,opt,name=amazon_s3_upload_part_size_bytes,json=amazonS3UploadPartSizeBytes,proto3,oneof" json:"amazon_s3_upload_part_size_bytes,omitempty"`
	AmazonS3StorageClass               *string                `protobuf:"bytes,19,opt,name=amazon_s3_storage_class,json=amazonS3StorageClass,proto3,oneof" json:"amazon_s3_storage_class,omitempty"`
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *ConfigFile) Reset() {
	*x = ConfigFile{}
	mi := &file_common_v1_config_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigFile) ProtoMessage() {}

func (x *ConfigFile) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigFile.ProtoReflect.Descriptor instead.
func (*ConfigFile) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{8}
}

func (x *ConfigFile) GetEnableFileAttachments() bool {
	if x != nil && x.EnableFileAttachments != nil {
		return *x.EnableFileAttachments
	}
	return false
}

func (x *ConfigFile) GetEnableMobileUpload() bool {
	if x != nil && x.EnableMobileUpload != nil {
		return *x.EnableMobileUpload
	}
	return false
}

func (x *ConfigFile) GetEnableMobileDownload() bool {
	if x != nil && x.EnableMobileDownload != nil {
		return *x.EnableMobileDownload
	}
	return false
}

func (x *ConfigFile) GetMaxImageResolution() int64 {
	if x != nil && x.MaxImageResolution != nil {
		return *x.MaxImageResolution
	}
	return 0
}

func (x *ConfigFile) GetMaxImageDecoderConcurrency() int64 {
	if x != nil && x.MaxImageDecoderConcurrency != nil {
		return *x.MaxImageDecoderConcurrency
	}
	return 0
}

func (x *ConfigFile) GetDriverName() string {
	if x != nil && x.DriverName != nil {
		return *x.DriverName
	}
	return ""
}

func (x *ConfigFile) GetAmazonS3AccessKeyId() string {
	if x != nil && x.AmazonS3AccessKeyId != nil {
		return *x.AmazonS3AccessKeyId
	}
	return ""
}

func (x *ConfigFile) GetAmazonS3SecretAccessKey() string {
	if x != nil && x.AmazonS3SecretAccessKey != nil {
		return *x.AmazonS3SecretAccessKey
	}
	return ""
}

func (x *ConfigFile) GetAmazonS3Bucket() string {
	if x != nil && x.AmazonS3Bucket != nil {
		return *x.AmazonS3Bucket
	}
	return ""
}

func (x *ConfigFile) GetAmazonS3PathPrefix() string {
	if x != nil && x.AmazonS3PathPrefix != nil {
		return *x.AmazonS3PathPrefix
	}
	return ""
}

func (x *ConfigFile) GetAmazonS3Region() string {
	if x != nil && x.AmazonS3Region != nil {
		return *x.AmazonS3Region
	}
	return ""
}

func (x *ConfigFile) GetAmazonS3Endpoint() string {
	if x != nil && x.AmazonS3Endpoint != nil {
		return *x.AmazonS3Endpoint
	}
	return ""
}

func (x *ConfigFile) GetAmazonS3Ssl() bool {
	if x != nil && x.AmazonS3Ssl != nil {
		return *x.AmazonS3Ssl
	}
	return false
}

func (x *ConfigFile) GetAmazonS3SignV2() bool {
	if x != nil && x.AmazonS3SignV2 != nil {
		return *x.AmazonS3SignV2
	}
	return false
}

func (x *ConfigFile) GetAmazonS3Sse() bool {
	if x != nil && x.AmazonS3Sse != nil {
		return *x.AmazonS3Sse
	}
	return false
}

func (x *ConfigFile) GetAmazonS3Trace() bool {
	if x != nil && x.AmazonS3Trace != nil {
		return *x.AmazonS3Trace
	}
	return false
}

func (x *ConfigFile) GetAmazonS3RequestTimeoutMilliseconds() int64 {
	if x != nil && x.AmazonS3RequestTimeoutMilliseconds != nil {
		return *x.AmazonS3RequestTimeoutMilliseconds
	}
	return 0
}

func (x *ConfigFile) GetAmazonS3UploadPartSizeBytes() int64 {
	if x != nil && x.AmazonS3UploadPartSizeBytes != nil {
		return *x.AmazonS3UploadPartSizeBytes
	}
	return 0
}

func (x *ConfigFile) GetAmazonS3StorageClass() string {
	if x != nil && x.AmazonS3StorageClass != nil {
		return *x.AmazonS3StorageClass
	}
	return ""
}

type ConfigEmail struct {
	state                             protoimpl.MessageState `protogen:"open.v1"`
	SendEmailNotifications            *bool                  `protobuf:"varint,1,opt,name=send_email_notifications,json=sendEmailNotifications,proto3,oneof" json:"send_email_notifications,omitempty"`
	RequireEmailVerification          *bool                  `protobuf:"varint,2,opt,name=require_email_verification,json=requireEmailVerification,proto3,oneof" json:"require_email_verification,omitempty"`
	FeedbackEmail                     *string                `protobuf:"bytes,3,opt,name=feedback_email,json=feedbackEmail,proto3,oneof" json:"feedback_email,omitempty"`
	ReplyToAddress                    *string                `protobuf:"bytes,4,opt,name=reply_to_address,json=replyToAddress,proto3,oneof" json:"reply_to_address,omitempty"`
	EnableSmtpAuth                    *bool                  `protobuf:"varint,5,opt,name=enable_smtp_auth,json=enableSmtpAuth,proto3,oneof" json:"enable_smtp_auth,omitempty"`
	SmtpUsername                      *string                `protobuf:"bytes,6,opt,name=smtp_username,json=smtpUsername,proto3,oneof" json:"smtp_username,omitempty"`
	SmtpPassword                      *string                `protobuf:"bytes,7,opt,name=smtp_password,json=smtpPassword,proto3,oneof" json:"smtp_password,omitempty"`
	SmtpServer                        *string                `protobuf:"bytes,8,opt,name=smtp_server,json=smtpServer,proto3,oneof" json:"smtp_server,omitempty"`
	SmtpPort                          *string                `protobuf:"bytes,9,opt,name=smtp_port,json=smtpPort,proto3,oneof" json:"smtp_port,omitempty"`
	SmtpServerTimeout                 *int32                 `protobuf:"varint,10,opt,name=smtp_server_timeout,json=smtpServerTimeout,proto3,oneof" json:"smtp_server_timeout,omitempty"`
	ConnectionSecurity                *string                `protobuf:"bytes,11,opt,name=connection_security,json=connectionSecurity,proto3,oneof" json:"connection_security,omitempty"`
	SendPushNotifications             *bool                  `protobuf:"varint,12,opt,name=send_push_notifications,json=sendPushNotifications,proto3,oneof" json:"send_push_notifications,omitempty"`
	PushNotificationServer            *string                `protobuf:"bytes,13,opt,name=push_notification_server,json=pushNotificationServer,proto3,oneof" json:"push_notification_server,omitempty"`
	PushNotificationContents          *string                `protobuf:"bytes,14,opt,name=push_notification_contents,json=pushNotificationContents,proto3,oneof" json:"push_notification_contents,omitempty"`
	PushNotificationBuffer            *int32                 `protobuf:"varint,15,opt,name=push_notification_buffer,json=pushNotificationBuffer,proto3,oneof" json:"push_notification_buffer,omitempty"`
	EnableEmailBatching               *bool                  `protobuf:"varint,16,opt,name=enable_email_batching,json=enableEmailBatching,proto3,oneof" json:"enable_email_batching,omitempty"`
	EmailBatchingBufferSize           *int32                 `protobuf:"varint,17,opt,name=email_batching_buffer_size,json=emailBatchingBufferSize,proto3,oneof" json:"email_batching_buffer_size,omitempty"`
	EmailBatchingInterval             *int32                 `protobuf:"varint,18,opt,name=email_batching_interval,json=emailBatchingInterval,proto3,oneof" json:"email_batching_interval,omitempty"`
	SkipServerCertificateVerification *bool                  `protobuf:"varint,19,opt,name=skip_server_certificate_verification,json=skipServerCertificateVerification,proto3,oneof" json:"skip_server_certificate_verification,omitempty"`
	EmailNotificationContentsType     *string                `protobuf:"bytes,20,opt,name=email_notification_contents_type,json=emailNotificationContentsType,proto3,oneof" json:"email_notification_contents_type,omitempty"`
	LoginButtonColor                  *string                `protobuf:"bytes,21,opt,name=login_button_color,json=loginButtonColor,proto3,oneof" json:"login_button_color,omitempty"`
	LoginButtonBorderColor            *string                `protobuf:"bytes,22,opt,name=login_button_border_color,json=loginButtonBorderColor,proto3,oneof" json:"login_button_border_color,omitempty"`
	LoginButtonTextColor              *string                `protobuf:"bytes,23,opt,name=login_button_text_color,json=loginButtonTextColor,proto3,oneof" json:"login_button_text_color,omitempty"`
	RateLimitingMemorySize            *int32                 `protobuf:"varint,24,opt,name=rate_limiting_memory_size,json=rateLimitingMemorySize,proto3,oneof" json:"rate_limiting_memory_size,omitempty"`
	RateLimitingPerHour               *int32                 `protobuf:"varint,25,opt,name=rate_limiting_per_hour,json=rateLimitingPerHour,proto3,oneof" json:"rate_limiting_per_hour,omitempty"`
	RateLimitingMaxBurst              *int32                 `protobuf:"varint,26,opt,name=rate_limiting_max_burst,json=rateLimitingMaxBurst,proto3,oneof" json:"rate_limiting_max_burst,omitempty"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *ConfigEmail) Reset() {
	*x = ConfigEmail{}
	mi := &file_common_v1_config_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigEmail) ProtoMessage() {}

func (x *ConfigEmail) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigEmail.ProtoReflect.Descriptor instead.
func (*ConfigEmail) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{9}
}

func (x *ConfigEmail) GetSendEmailNotifications() bool {
	if x != nil && x.SendEmailNotifications != nil {
		return *x.SendEmailNotifications
	}
	return false
}

func (x *ConfigEmail) GetRequireEmailVerification() bool {
	if x != nil && x.RequireEmailVerification != nil {
		return *x.RequireEmailVerification
	}
	return false
}

func (x *ConfigEmail) GetFeedbackEmail() string {
	if x != nil && x.FeedbackEmail != nil {
		return *x.FeedbackEmail
	}
	return ""
}

func (x *ConfigEmail) GetReplyToAddress() string {
	if x != nil && x.ReplyToAddress != nil {
		return *x.ReplyToAddress
	}
	return ""
}

func (x *ConfigEmail) GetEnableSmtpAuth() bool {
	if x != nil && x.EnableSmtpAuth != nil {
		return *x.EnableSmtpAuth
	}
	return false
}

func (x *ConfigEmail) GetSmtpUsername() string {
	if x != nil && x.SmtpUsername != nil {
		return *x.SmtpUsername
	}
	return ""
}

func (x *ConfigEmail) GetSmtpPassword() string {
	if x != nil && x.SmtpPassword != nil {
		return *x.SmtpPassword
	}
	return ""
}

func (x *ConfigEmail) GetSmtpServer() string {
	if x != nil && x.SmtpServer != nil {
		return *x.SmtpServer
	}
	return ""
}

func (x *ConfigEmail) GetSmtpPort() string {
	if x != nil && x.SmtpPort != nil {
		return *x.SmtpPort
	}
	return ""
}

func (x *ConfigEmail) GetSmtpServerTimeout() int32 {
	if x != nil && x.SmtpServerTimeout != nil {
		return *x.SmtpServerTimeout
	}
	return 0
}

func (x *ConfigEmail) GetConnectionSecurity() string {
	if x != nil && x.ConnectionSecurity != nil {
		return *x.ConnectionSecurity
	}
	return ""
}

func (x *ConfigEmail) GetSendPushNotifications() bool {
	if x != nil && x.SendPushNotifications != nil {
		return *x.SendPushNotifications
	}
	return false
}

func (x *ConfigEmail) GetPushNotificationServer() string {
	if x != nil && x.PushNotificationServer != nil {
		return *x.PushNotificationServer
	}
	return ""
}

func (x *ConfigEmail) GetPushNotificationContents() string {
	if x != nil && x.PushNotificationContents != nil {
		return *x.PushNotificationContents
	}
	return ""
}

func (x *ConfigEmail) GetPushNotificationBuffer() int32 {
	if x != nil && x.PushNotificationBuffer != nil {
		return *x.PushNotificationBuffer
	}
	return 0
}

func (x *ConfigEmail) GetEnableEmailBatching() bool {
	if x != nil && x.EnableEmailBatching != nil {
		return *x.EnableEmailBatching
	}
	return false
}

func (x *ConfigEmail) GetEmailBatchingBufferSize() int32 {
	if x != nil && x.EmailBatchingBufferSize != nil {
		return *x.EmailBatchingBufferSize
	}
	return 0
}

func (x *ConfigEmail) GetEmailBatchingInterval() int32 {
	if x != nil && x.EmailBatchingInterval != nil {
		return *x.EmailBatchingInterval
	}
	return 0
}

func (x *ConfigEmail) GetSkipServerCertificateVerification() bool {
	if x != nil && x.SkipServerCertificateVerification != nil {
		return *x.SkipServerCertificateVerification
	}
	return false
}

func (x *ConfigEmail) GetEmailNotificationContentsType() string {
	if x != nil && x.EmailNotificationContentsType != nil {
		return *x.EmailNotificationContentsType
	}
	return ""
}

func (x *ConfigEmail) GetLoginButtonColor() string {
	if x != nil && x.LoginButtonColor != nil {
		return *x.LoginButtonColor
	}
	return ""
}

func (x *ConfigEmail) GetLoginButtonBorderColor() string {
	if x != nil && x.LoginButtonBorderColor != nil {
		return *x.LoginButtonBorderColor
	}
	return ""
}

func (x *ConfigEmail) GetLoginButtonTextColor() string {
	if x != nil && x.LoginButtonTextColor != nil {
		return *x.LoginButtonTextColor
	}
	return ""
}

func (x *ConfigEmail) GetRateLimitingMemorySize() int32 {
	if x != nil && x.RateLimitingMemorySize != nil {
		return *x.RateLimitingMemorySize
	}
	return 0
}

func (x *ConfigEmail) GetRateLimitingPerHour() int32 {
	if x != nil && x.RateLimitingPerHour != nil {
		return *x.RateLimitingPerHour
	}
	return 0
}

func (x *ConfigEmail) GetRateLimitingMaxBurst() int32 {
	if x != nil && x.RateLimitingMaxBurst != nil {
		return *x.RateLimitingMaxBurst
	}
	return 0
}

type ConfigRateLimit struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Enable           *bool                  `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	PerSec           *int32                 `protobuf:"varint,2,opt,name=per_sec,json=perSec,proto3,oneof" json:"per_sec,omitempty"`
	MaxBurst         *int32                 `protobuf:"varint,3,opt,name=max_burst,json=maxBurst,proto3,oneof" json:"max_burst,omitempty"`
	MemoryStoreSize  *int32                 `protobuf:"varint,4,opt,name=memory_store_size,json=memoryStoreSize,proto3,oneof" json:"memory_store_size,omitempty"`
	VaryByRemoteAddr *bool                  `protobuf:"varint,5,opt,name=vary_by_remote_addr,json=varyByRemoteAddr,proto3,oneof" json:"vary_by_remote_addr,omitempty"`
	VaryByUser       *bool                  `protobuf:"varint,6,opt,name=vary_by_user,json=varyByUser,proto3,oneof" json:"vary_by_user,omitempty"`
	VaryByHeader     string                 `protobuf:"bytes,7,opt,name=vary_by_header,json=varyByHeader,proto3" json:"vary_by_header,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ConfigRateLimit) Reset() {
	*x = ConfigRateLimit{}
	mi := &file_common_v1_config_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigRateLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRateLimit) ProtoMessage() {}

func (x *ConfigRateLimit) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRateLimit.ProtoReflect.Descriptor instead.
func (*ConfigRateLimit) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{10}
}

func (x *ConfigRateLimit) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ConfigRateLimit) GetPerSec() int32 {
	if x != nil && x.PerSec != nil {
		return *x.PerSec
	}
	return 0
}

func (x *ConfigRateLimit) GetMaxBurst() int32 {
	if x != nil && x.MaxBurst != nil {
		return *x.MaxBurst
	}
	return 0
}

func (x *ConfigRateLimit) GetMemoryStoreSize() int32 {
	if x != nil && x.MemoryStoreSize != nil {
		return *x.MemoryStoreSize
	}
	return 0
}

func (x *ConfigRateLimit) GetVaryByRemoteAddr() bool {
	if x != nil && x.VaryByRemoteAddr != nil {
		return *x.VaryByRemoteAddr
	}
	return false
}

func (x *ConfigRateLimit) GetVaryByUser() bool {
	if x != nil && x.VaryByUser != nil {
		return *x.VaryByUser
	}
	return false
}

func (x *ConfigRateLimit) GetVaryByHeader() string {
	if x != nil {
		return x.VaryByHeader
	}
	return ""
}

type ConfigPrivacy struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ShowEmailAddress *bool                  `protobuf:"varint,1,opt,name=show_email_address,json=showEmailAddress,proto3,oneof" json:"show_email_address,omitempty"`
	ShowFullName     *bool                  `protobuf:"varint,2,opt,name=show_full_name,json=showFullName,proto3,oneof" json:"show_full_name,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ConfigPrivacy) Reset() {
	*x = ConfigPrivacy{}
	mi := &file_common_v1_config_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigPrivacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigPrivacy) ProtoMessage() {}

func (x *ConfigPrivacy) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigPrivacy.ProtoReflect.Descriptor instead.
func (*ConfigPrivacy) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{11}
}

func (x *ConfigPrivacy) GetShowEmailAddress() bool {
	if x != nil && x.ShowEmailAddress != nil {
		return *x.ShowEmailAddress
	}
	return false
}

func (x *ConfigPrivacy) GetShowFullName() bool {
	if x != nil && x.ShowFullName != nil {
		return *x.ShowFullName
	}
	return false
}

type ConfigSupport struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	TermsOfServiceLink *string                `protobuf:"bytes,1,opt,name=terms_of_service_link,json=termsOfServiceLink,proto3,oneof" json:"terms_of_service_link,omitempty"`
	PrivacyPolicyLink  *string                `protobuf:"bytes,2,opt,name=privacy_policy_link,json=privacyPolicyLink,proto3,oneof" json:"privacy_policy_link,omitempty"`
	AboutLink          *string                `protobuf:"bytes,3,opt,name=about_link,json=aboutLink,proto3,oneof" json:"about_link,omitempty"`
	HelpLink           *string                `protobuf:"bytes,4,opt,name=help_link,json=helpLink,proto3,oneof" json:"help_link,omitempty"`
	ReportAProblemLink *string                `protobuf:"bytes,5,opt,name=report_a_problem_link,json=reportAProblemLink,proto3,oneof" json:"report_a_problem_link,omitempty"`
	ForgotPasswordLink *string                `protobuf:"bytes,6,opt,name=forgot_password_link,json=forgotPasswordLink,proto3,oneof" json:"forgot_password_link,omitempty"`
	SupportEmail       *string                `protobuf:"bytes,7,opt,name=support_email,json=supportEmail,proto3,oneof" json:"support_email,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ConfigSupport) Reset() {
	*x = ConfigSupport{}
	mi := &file_common_v1_config_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSupport) ProtoMessage() {}

func (x *ConfigSupport) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSupport.ProtoReflect.Descriptor instead.
func (*ConfigSupport) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{12}
}

func (x *ConfigSupport) GetTermsOfServiceLink() string {
	if x != nil && x.TermsOfServiceLink != nil {
		return *x.TermsOfServiceLink
	}
	return ""
}

func (x *ConfigSupport) GetPrivacyPolicyLink() string {
	if x != nil && x.PrivacyPolicyLink != nil {
		return *x.PrivacyPolicyLink
	}
	return ""
}

func (x *ConfigSupport) GetAboutLink() string {
	if x != nil && x.AboutLink != nil {
		return *x.AboutLink
	}
	return ""
}

func (x *ConfigSupport) GetHelpLink() string {
	if x != nil && x.HelpLink != nil {
		return *x.HelpLink
	}
	return ""
}

func (x *ConfigSupport) GetReportAProblemLink() string {
	if x != nil && x.ReportAProblemLink != nil {
		return *x.ReportAProblemLink
	}
	return ""
}

func (x *ConfigSupport) GetForgotPasswordLink() string {
	if x != nil && x.ForgotPasswordLink != nil {
		return *x.ForgotPasswordLink
	}
	return ""
}

func (x *ConfigSupport) GetSupportEmail() string {
	if x != nil && x.SupportEmail != nil {
		return *x.SupportEmail
	}
	return ""
}

type ConfigLocalization struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	DefaultServerLocale *string                `protobuf:"bytes,1,opt,name=default_server_locale,json=defaultServerLocale,proto3,oneof" json:"default_server_locale,omitempty"`
	DefaultClientLocale *string                `protobuf:"bytes,2,opt,name=default_client_locale,json=defaultClientLocale,proto3,oneof" json:"default_client_locale,omitempty"`
	AvailableLocales    []string               `protobuf:"bytes,3,rep,name=available_locales,json=availableLocales,proto3" json:"available_locales,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ConfigLocalization) Reset() {
	*x = ConfigLocalization{}
	mi := &file_common_v1_config_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigLocalization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigLocalization) ProtoMessage() {}

func (x *ConfigLocalization) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigLocalization.ProtoReflect.Descriptor instead.
func (*ConfigLocalization) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{13}
}

func (x *ConfigLocalization) GetDefaultServerLocale() string {
	if x != nil && x.DefaultServerLocale != nil {
		return *x.DefaultServerLocale
	}
	return ""
}

func (x *ConfigLocalization) GetDefaultClientLocale() string {
	if x != nil && x.DefaultClientLocale != nil {
		return *x.DefaultClientLocale
	}
	return ""
}

func (x *ConfigLocalization) GetAvailableLocales() []string {
	if x != nil {
		return x.AvailableLocales
	}
	return nil
}

type ConfigLdap struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Basic
	Enable               *bool   `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	EnableSync           *bool   `protobuf:"varint,2,opt,name=enable_sync,json=enableSync,proto3,oneof" json:"enable_sync,omitempty"`
	LdapServer           *string `protobuf:"bytes,3,opt,name=ldap_server,json=ldapServer,proto3,oneof" json:"ldap_server,omitempty"`
	LdapPort             *int32  `protobuf:"varint,4,opt,name=ldap_port,json=ldapPort,proto3,oneof" json:"ldap_port,omitempty"`
	ConnectionSecurity   *string `protobuf:"bytes,5,opt,name=connection_security,json=connectionSecurity,proto3,oneof" json:"connection_security,omitempty"`
	BaseDn               *string `protobuf:"bytes,6,opt,name=base_dn,json=baseDn,proto3,oneof" json:"base_dn,omitempty"`
	BindUsername         *string `protobuf:"bytes,7,opt,name=bind_username,json=bindUsername,proto3,oneof" json:"bind_username,omitempty"`
	BindPassword         *string `protobuf:"bytes,8,opt,name=bind_password,json=bindPassword,proto3,oneof" json:"bind_password,omitempty"`
	MaximumLoginAttempts *int32  `protobuf:"varint,9,opt,name=maximum_login_attempts,json=maximumLoginAttempts,proto3,oneof" json:"maximum_login_attempts,omitempty"`
	// Filtering
	UserFilter        *string `protobuf:"bytes,10,opt,name=user_filter,json=userFilter,proto3,oneof" json:"user_filter,omitempty"`
	GroupFilter       *string `protobuf:"bytes,11,opt,name=group_filter,json=groupFilter,proto3,oneof" json:"group_filter,omitempty"`
	EnableAdminFilter *bool   `protobuf:"varint,12,opt,name=enable_admin_filter,json=enableAdminFilter,proto3,oneof" json:"enable_admin_filter,omitempty"`
	AdminFilter       *string `protobuf:"bytes,13,opt,name=admin_filter,json=adminFilter,proto3,oneof" json:"admin_filter,omitempty"`
	// Group Mapping
	GroupDisplayNameAttribute *string `protobuf:"bytes,14,opt,name=group_display_name_attribute,json=groupDisplayNameAttribute,proto3,oneof" json:"group_display_name_attribute,omitempty"`
	GroupIdAttribute          *string `protobuf:"bytes,15,opt,name=group_id_attribute,json=groupIdAttribute,proto3,oneof" json:"group_id_attribute,omitempty"`
	// User Mapping
	FirstNameAttribute *string `protobuf:"bytes,16,opt,name=first_name_attribute,json=firstNameAttribute,proto3,oneof" json:"first_name_attribute,omitempty"`
	LastNameAttribute  *string `protobuf:"bytes,17,opt,name=last_name_attribute,json=lastNameAttribute,proto3,oneof" json:"last_name_attribute,omitempty"`
	EmailAttribute     *string `protobuf:"bytes,18,opt,name=email_attribute,json=emailAttribute,proto3,oneof" json:"email_attribute,omitempty"`
	UsernameAttribute  *string `protobuf:"bytes,19,opt,name=username_attribute,json=usernameAttribute,proto3,oneof" json:"username_attribute,omitempty"`
	NicknameAttribute  *string `protobuf:"bytes,20,opt,name=nickname_attribute,json=nicknameAttribute,proto3,oneof" json:"nickname_attribute,omitempty"`
	IdAttribute        *string `protobuf:"bytes,21,opt,name=id_attribute,json=idAttribute,proto3,oneof" json:"id_attribute,omitempty"`
	PositionAttribute  *string `protobuf:"bytes,22,opt,name=position_attribute,json=positionAttribute,proto3,oneof" json:"position_attribute,omitempty"`
	LoginIdAttribute   *string `protobuf:"bytes,23,opt,name=login_id_attribute,json=loginIdAttribute,proto3,oneof" json:"login_id_attribute,omitempty"`
	PictureAttribute   *string `protobuf:"bytes,24,opt,name=picture_attribute,json=pictureAttribute,proto3,oneof" json:"picture_attribute,omitempty"`
	// Synchronization
	SyncIntervalMinutes *int32 `protobuf:"varint,25,opt,name=sync_interval_minutes,json=syncIntervalMinutes,proto3,oneof" json:"sync_interval_minutes,omitempty"`
	// Advanced
	QueryTimeout *int32 `protobuf:"varint,26,opt,name=query_timeout,json=queryTimeout,proto3,oneof" json:"query_timeout,omitempty"`
	MaxPageSize  *int32 `protobuf:"varint,27,opt,name=max_page_size,json=maxPageSize,proto3,oneof" json:"max_page_size,omitempty"`
	// Customization
	LoginFieldName         *string `protobuf:"bytes,28,opt,name=login_field_name,json=loginFieldName,proto3,oneof" json:"login_field_name,omitempty"`
	LoginButtonColor       *string `protobuf:"bytes,29,opt,name=login_button_color,json=loginButtonColor,proto3,oneof" json:"login_button_color,omitempty"`
	LoginButtonBorderColor *string `protobuf:"bytes,30,opt,name=login_button_border_color,json=loginButtonBorderColor,proto3,oneof" json:"login_button_border_color,omitempty"`
	LoginButtonTextColor   *string `protobuf:"bytes,31,opt,name=login_button_text_color,json=loginButtonTextColor,proto3,oneof" json:"login_button_text_color,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ConfigLdap) Reset() {
	*x = ConfigLdap{}
	mi := &file_common_v1_config_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigLdap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigLdap) ProtoMessage() {}

func (x *ConfigLdap) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigLdap.ProtoReflect.Descriptor instead.
func (*ConfigLdap) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{14}
}

func (x *ConfigLdap) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ConfigLdap) GetEnableSync() bool {
	if x != nil && x.EnableSync != nil {
		return *x.EnableSync
	}
	return false
}

func (x *ConfigLdap) GetLdapServer() string {
	if x != nil && x.LdapServer != nil {
		return *x.LdapServer
	}
	return ""
}

func (x *ConfigLdap) GetLdapPort() int32 {
	if x != nil && x.LdapPort != nil {
		return *x.LdapPort
	}
	return 0
}

func (x *ConfigLdap) GetConnectionSecurity() string {
	if x != nil && x.ConnectionSecurity != nil {
		return *x.ConnectionSecurity
	}
	return ""
}

func (x *ConfigLdap) GetBaseDn() string {
	if x != nil && x.BaseDn != nil {
		return *x.BaseDn
	}
	return ""
}

func (x *ConfigLdap) GetBindUsername() string {
	if x != nil && x.BindUsername != nil {
		return *x.BindUsername
	}
	return ""
}

func (x *ConfigLdap) GetBindPassword() string {
	if x != nil && x.BindPassword != nil {
		return *x.BindPassword
	}
	return ""
}

func (x *ConfigLdap) GetMaximumLoginAttempts() int32 {
	if x != nil && x.MaximumLoginAttempts != nil {
		return *x.MaximumLoginAttempts
	}
	return 0
}

func (x *ConfigLdap) GetUserFilter() string {
	if x != nil && x.UserFilter != nil {
		return *x.UserFilter
	}
	return ""
}

func (x *ConfigLdap) GetGroupFilter() string {
	if x != nil && x.GroupFilter != nil {
		return *x.GroupFilter
	}
	return ""
}

func (x *ConfigLdap) GetEnableAdminFilter() bool {
	if x != nil && x.EnableAdminFilter != nil {
		return *x.EnableAdminFilter
	}
	return false
}

func (x *ConfigLdap) GetAdminFilter() string {
	if x != nil && x.AdminFilter != nil {
		return *x.AdminFilter
	}
	return ""
}

func (x *ConfigLdap) GetGroupDisplayNameAttribute() string {
	if x != nil && x.GroupDisplayNameAttribute != nil {
		return *x.GroupDisplayNameAttribute
	}
	return ""
}

func (x *ConfigLdap) GetGroupIdAttribute() string {
	if x != nil && x.GroupIdAttribute != nil {
		return *x.GroupIdAttribute
	}
	return ""
}

func (x *ConfigLdap) GetFirstNameAttribute() string {
	if x != nil && x.FirstNameAttribute != nil {
		return *x.FirstNameAttribute
	}
	return ""
}

func (x *ConfigLdap) GetLastNameAttribute() string {
	if x != nil && x.LastNameAttribute != nil {
		return *x.LastNameAttribute
	}
	return ""
}

func (x *ConfigLdap) GetEmailAttribute() string {
	if x != nil && x.EmailAttribute != nil {
		return *x.EmailAttribute
	}
	return ""
}

func (x *ConfigLdap) GetUsernameAttribute() string {
	if x != nil && x.UsernameAttribute != nil {
		return *x.UsernameAttribute
	}
	return ""
}

func (x *ConfigLdap) GetNicknameAttribute() string {
	if x != nil && x.NicknameAttribute != nil {
		return *x.NicknameAttribute
	}
	return ""
}

func (x *ConfigLdap) GetIdAttribute() string {
	if x != nil && x.IdAttribute != nil {
		return *x.IdAttribute
	}
	return ""
}

func (x *ConfigLdap) GetPositionAttribute() string {
	if x != nil && x.PositionAttribute != nil {
		return *x.PositionAttribute
	}
	return ""
}

func (x *ConfigLdap) GetLoginIdAttribute() string {
	if x != nil && x.LoginIdAttribute != nil {
		return *x.LoginIdAttribute
	}
	return ""
}

func (x *ConfigLdap) GetPictureAttribute() string {
	if x != nil && x.PictureAttribute != nil {
		return *x.PictureAttribute
	}
	return ""
}

func (x *ConfigLdap) GetSyncIntervalMinutes() int32 {
	if x != nil && x.SyncIntervalMinutes != nil {
		return *x.SyncIntervalMinutes
	}
	return 0
}

func (x *ConfigLdap) GetQueryTimeout() int32 {
	if x != nil && x.QueryTimeout != nil {
		return *x.QueryTimeout
	}
	return 0
}

func (x *ConfigLdap) GetMaxPageSize() int32 {
	if x != nil && x.MaxPageSize != nil {
		return *x.MaxPageSize
	}
	return 0
}

func (x *ConfigLdap) GetLoginFieldName() string {
	if x != nil && x.LoginFieldName != nil {
		return *x.LoginFieldName
	}
	return ""
}

func (x *ConfigLdap) GetLoginButtonColor() string {
	if x != nil && x.LoginButtonColor != nil {
		return *x.LoginButtonColor
	}
	return ""
}

func (x *ConfigLdap) GetLoginButtonBorderColor() string {
	if x != nil && x.LoginButtonBorderColor != nil {
		return *x.LoginButtonBorderColor
	}
	return ""
}

func (x *ConfigLdap) GetLoginButtonTextColor() string {
	if x != nil && x.LoginButtonTextColor != nil {
		return *x.LoginButtonTextColor
	}
	return ""
}

type ConfigSaml struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Basic
	Enable                        *bool   `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	EnableSyncWithLdap            *bool   `protobuf:"varint,2,opt,name=enable_sync_with_ldap,json=enableSyncWithLdap,proto3,oneof" json:"enable_sync_with_ldap,omitempty"`
	EnableSyncWithLdapIncludeAuth *bool   `protobuf:"varint,3,opt,name=enable_sync_with_ldap_include_auth,json=enableSyncWithLdapIncludeAuth,proto3,oneof" json:"enable_sync_with_ldap_include_auth,omitempty"`
	IgnoreGuestsLdapSync          *bool   `protobuf:"varint,4,opt,name=ignore_guests_ldap_sync,json=ignoreGuestsLdapSync,proto3,oneof" json:"ignore_guests_ldap_sync,omitempty"`
	Verify                        *bool   `protobuf:"varint,5,opt,name=verify,proto3,oneof" json:"verify,omitempty"`
	Encrypt                       *bool   `protobuf:"varint,6,opt,name=encrypt,proto3,oneof" json:"encrypt,omitempty"`
	SignRequest                   *bool   `protobuf:"varint,7,opt,name=sign_request,json=signRequest,proto3,oneof" json:"sign_request,omitempty"`
	IdpUrl                        *string `protobuf:"bytes,8,opt,name=idp_url,json=idpUrl,proto3,oneof" json:"idp_url,omitempty"`
	IdpDescriptorUrl              *string `protobuf:"bytes,9,opt,name=idp_descriptor_url,json=idpDescriptorUrl,proto3,oneof" json:"idp_descriptor_url,omitempty"`
	IdpMetadataUrl                *string `protobuf:"bytes,10,opt,name=idp_metadata_url,json=idpMetadataUrl,proto3,oneof" json:"idp_metadata_url,omitempty"`
	ServiceProviderIdentifier     *string `protobuf:"bytes,11,opt,name=service_provider_identifier,json=serviceProviderIdentifier,proto3,oneof" json:"service_provider_identifier,omitempty"`
	AssertionConsumerServiceUrl   *string `protobuf:"bytes,12,opt,name=assertion_consumer_service_url,json=assertionConsumerServiceUrl,proto3,oneof" json:"assertion_consumer_service_url,omitempty"`
	SignatureAlgorithm            *string `protobuf:"bytes,13,opt,name=signature_algorithm,json=signatureAlgorithm,proto3,oneof" json:"signature_algorithm,omitempty"`
	CanonicalAlgorithm            *string `protobuf:"bytes,14,opt,name=canonical_algorithm,json=canonicalAlgorithm,proto3,oneof" json:"canonical_algorithm,omitempty"`
	ScopingIdpProviderId          *string `protobuf:"bytes,15,opt,name=scoping_idp_provider_id,json=scopingIdpProviderId,proto3,oneof" json:"scoping_idp_provider_id,omitempty"`
	ScopingIdpName                *string `protobuf:"bytes,16,opt,name=scoping_idp_name,json=scopingIdpName,proto3,oneof" json:"scoping_idp_name,omitempty"`
	IdpCertificateFile            *string `protobuf:"bytes,17,opt,name=idp_certificate_file,json=idpCertificateFile,proto3,oneof" json:"idp_certificate_file,omitempty"`
	PublicCertificateFile         *string `protobuf:"bytes,18,opt,name=public_certificate_file,json=publicCertificateFile,proto3,oneof" json:"public_certificate_file,omitempty"`
	PrivateKeyFile                *string `protobuf:"bytes,19,opt,name=private_key_file,json=privateKeyFile,proto3,oneof" json:"private_key_file,omitempty"`
	// User Mapping
	IdAttribute            *string `protobuf:"bytes,20,opt,name=id_attribute,json=idAttribute,proto3,oneof" json:"id_attribute,omitempty"`
	EnableAdminAttribute   *bool   `protobuf:"varint,21,opt,name=enable_admin_attribute,json=enableAdminAttribute,proto3,oneof" json:"enable_admin_attribute,omitempty"`
	AdminAttribute         *string `protobuf:"bytes,22,opt,name=admin_attribute,json=adminAttribute,proto3,oneof" json:"admin_attribute,omitempty"`
	FirstNameAttribute     *string `protobuf:"bytes,23,opt,name=first_name_attribute,json=firstNameAttribute,proto3,oneof" json:"first_name_attribute,omitempty"`
	LastNameAttribute      *string `protobuf:"bytes,24,opt,name=last_name_attribute,json=lastNameAttribute,proto3,oneof" json:"last_name_attribute,omitempty"`
	EmailAttribute         *string `protobuf:"bytes,25,opt,name=email_attribute,json=emailAttribute,proto3,oneof" json:"email_attribute,omitempty"`
	UsernameAttribute      *string `protobuf:"bytes,26,opt,name=username_attribute,json=usernameAttribute,proto3,oneof" json:"username_attribute,omitempty"`
	NicknameAttribute      *string `protobuf:"bytes,27,opt,name=nickname_attribute,json=nicknameAttribute,proto3,oneof" json:"nickname_attribute,omitempty"`
	LocaleAttribute        *string `protobuf:"bytes,28,opt,name=locale_attribute,json=localeAttribute,proto3,oneof" json:"locale_attribute,omitempty"`
	PositionAttribute      *string `protobuf:"bytes,29,opt,name=position_attribute,json=positionAttribute,proto3,oneof" json:"position_attribute,omitempty"`
	LoginButtonText        *string `protobuf:"bytes,30,opt,name=login_button_text,json=loginButtonText,proto3,oneof" json:"login_button_text,omitempty"`
	LoginButtonColor       *string `protobuf:"bytes,31,opt,name=login_button_color,json=loginButtonColor,proto3,oneof" json:"login_button_color,omitempty"`
	LoginButtonBorderColor *string `protobuf:"bytes,32,opt,name=login_button_border_color,json=loginButtonBorderColor,proto3,oneof" json:"login_button_border_color,omitempty"`
	LoginButtonTextColor   *string `protobuf:"bytes,33,opt,name=login_button_text_color,json=loginButtonTextColor,proto3,oneof" json:"login_button_text_color,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ConfigSaml) Reset() {
	*x = ConfigSaml{}
	mi := &file_common_v1_config_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigSaml) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSaml) ProtoMessage() {}

func (x *ConfigSaml) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSaml.ProtoReflect.Descriptor instead.
func (*ConfigSaml) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{15}
}

func (x *ConfigSaml) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ConfigSaml) GetEnableSyncWithLdap() bool {
	if x != nil && x.EnableSyncWithLdap != nil {
		return *x.EnableSyncWithLdap
	}
	return false
}

func (x *ConfigSaml) GetEnableSyncWithLdapIncludeAuth() bool {
	if x != nil && x.EnableSyncWithLdapIncludeAuth != nil {
		return *x.EnableSyncWithLdapIncludeAuth
	}
	return false
}

func (x *ConfigSaml) GetIgnoreGuestsLdapSync() bool {
	if x != nil && x.IgnoreGuestsLdapSync != nil {
		return *x.IgnoreGuestsLdapSync
	}
	return false
}

func (x *ConfigSaml) GetVerify() bool {
	if x != nil && x.Verify != nil {
		return *x.Verify
	}
	return false
}

func (x *ConfigSaml) GetEncrypt() bool {
	if x != nil && x.Encrypt != nil {
		return *x.Encrypt
	}
	return false
}

func (x *ConfigSaml) GetSignRequest() bool {
	if x != nil && x.SignRequest != nil {
		return *x.SignRequest
	}
	return false
}

func (x *ConfigSaml) GetIdpUrl() string {
	if x != nil && x.IdpUrl != nil {
		return *x.IdpUrl
	}
	return ""
}

func (x *ConfigSaml) GetIdpDescriptorUrl() string {
	if x != nil && x.IdpDescriptorUrl != nil {
		return *x.IdpDescriptorUrl
	}
	return ""
}

func (x *ConfigSaml) GetIdpMetadataUrl() string {
	if x != nil && x.IdpMetadataUrl != nil {
		return *x.IdpMetadataUrl
	}
	return ""
}

func (x *ConfigSaml) GetServiceProviderIdentifier() string {
	if x != nil && x.ServiceProviderIdentifier != nil {
		return *x.ServiceProviderIdentifier
	}
	return ""
}

func (x *ConfigSaml) GetAssertionConsumerServiceUrl() string {
	if x != nil && x.AssertionConsumerServiceUrl != nil {
		return *x.AssertionConsumerServiceUrl
	}
	return ""
}

func (x *ConfigSaml) GetSignatureAlgorithm() string {
	if x != nil && x.SignatureAlgorithm != nil {
		return *x.SignatureAlgorithm
	}
	return ""
}

func (x *ConfigSaml) GetCanonicalAlgorithm() string {
	if x != nil && x.CanonicalAlgorithm != nil {
		return *x.CanonicalAlgorithm
	}
	return ""
}

func (x *ConfigSaml) GetScopingIdpProviderId() string {
	if x != nil && x.ScopingIdpProviderId != nil {
		return *x.ScopingIdpProviderId
	}
	return ""
}

func (x *ConfigSaml) GetScopingIdpName() string {
	if x != nil && x.ScopingIdpName != nil {
		return *x.ScopingIdpName
	}
	return ""
}

func (x *ConfigSaml) GetIdpCertificateFile() string {
	if x != nil && x.IdpCertificateFile != nil {
		return *x.IdpCertificateFile
	}
	return ""
}

func (x *ConfigSaml) GetPublicCertificateFile() string {
	if x != nil && x.PublicCertificateFile != nil {
		return *x.PublicCertificateFile
	}
	return ""
}

func (x *ConfigSaml) GetPrivateKeyFile() string {
	if x != nil && x.PrivateKeyFile != nil {
		return *x.PrivateKeyFile
	}
	return ""
}

func (x *ConfigSaml) GetIdAttribute() string {
	if x != nil && x.IdAttribute != nil {
		return *x.IdAttribute
	}
	return ""
}

func (x *ConfigSaml) GetEnableAdminAttribute() bool {
	if x != nil && x.EnableAdminAttribute != nil {
		return *x.EnableAdminAttribute
	}
	return false
}

func (x *ConfigSaml) GetAdminAttribute() string {
	if x != nil && x.AdminAttribute != nil {
		return *x.AdminAttribute
	}
	return ""
}

func (x *ConfigSaml) GetFirstNameAttribute() string {
	if x != nil && x.FirstNameAttribute != nil {
		return *x.FirstNameAttribute
	}
	return ""
}

func (x *ConfigSaml) GetLastNameAttribute() string {
	if x != nil && x.LastNameAttribute != nil {
		return *x.LastNameAttribute
	}
	return ""
}

func (x *ConfigSaml) GetEmailAttribute() string {
	if x != nil && x.EmailAttribute != nil {
		return *x.EmailAttribute
	}
	return ""
}

func (x *ConfigSaml) GetUsernameAttribute() string {
	if x != nil && x.UsernameAttribute != nil {
		return *x.UsernameAttribute
	}
	return ""
}

func (x *ConfigSaml) GetNicknameAttribute() string {
	if x != nil && x.NicknameAttribute != nil {
		return *x.NicknameAttribute
	}
	return ""
}

func (x *ConfigSaml) GetLocaleAttribute() string {
	if x != nil && x.LocaleAttribute != nil {
		return *x.LocaleAttribute
	}
	return ""
}

func (x *ConfigSaml) GetPositionAttribute() string {
	if x != nil && x.PositionAttribute != nil {
		return *x.PositionAttribute
	}
	return ""
}

func (x *ConfigSaml) GetLoginButtonText() string {
	if x != nil && x.LoginButtonText != nil {
		return *x.LoginButtonText
	}
	return ""
}

func (x *ConfigSaml) GetLoginButtonColor() string {
	if x != nil && x.LoginButtonColor != nil {
		return *x.LoginButtonColor
	}
	return ""
}

func (x *ConfigSaml) GetLoginButtonBorderColor() string {
	if x != nil && x.LoginButtonBorderColor != nil {
		return *x.LoginButtonBorderColor
	}
	return ""
}

func (x *ConfigSaml) GetLoginButtonTextColor() string {
	if x != nil && x.LoginButtonTextColor != nil {
		return *x.LoginButtonTextColor
	}
	return ""
}

type ConfigNativeApp struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	AppCustomUrlSchemes        []string               `protobuf:"bytes,1,rep,name=app_custom_url_schemes,json=appCustomUrlSchemes,proto3" json:"app_custom_url_schemes,omitempty"`
	AppDownloadLink            *string                `protobuf:"bytes,2,opt,name=app_download_link,json=appDownloadLink,proto3,oneof" json:"app_download_link,omitempty"`
	AndroidAppDownloadLink     *string                `protobuf:"bytes,3,opt,name=android_app_download_link,json=androidAppDownloadLink,proto3,oneof" json:"android_app_download_link,omitempty"`
	IosAppDownloadLink         *string                `protobuf:"bytes,4,opt,name=ios_app_download_link,json=iosAppDownloadLink,proto3,oneof" json:"ios_app_download_link,omitempty"`
	MobileExternalBrowser      *bool                  `protobuf:"varint,5,opt,name=mobile_external_browser,json=mobileExternalBrowser,proto3,oneof" json:"mobile_external_browser,omitempty"`
	MobileEnableBiometrics     *bool                  `protobuf:"varint,6,opt,name=mobile_enable_biometrics,json=mobileEnableBiometrics,proto3,oneof" json:"mobile_enable_biometrics,omitempty"`
	MobilePreventScreenCapture *bool                  `protobuf:"varint,7,opt,name=mobile_prevent_screen_capture,json=mobilePreventScreenCapture,proto3,oneof" json:"mobile_prevent_screen_capture,omitempty"`
	MobileJailbreakProtection  *bool                  `protobuf:"varint,8,opt,name=mobile_jailbreak_protection,json=mobileJailbreakProtection,proto3,oneof" json:"mobile_jailbreak_protection,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ConfigNativeApp) Reset() {
	*x = ConfigNativeApp{}
	mi := &file_common_v1_config_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigNativeApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigNativeApp) ProtoMessage() {}

func (x *ConfigNativeApp) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigNativeApp.ProtoReflect.Descriptor instead.
func (*ConfigNativeApp) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{16}
}

func (x *ConfigNativeApp) GetAppCustomUrlSchemes() []string {
	if x != nil {
		return x.AppCustomUrlSchemes
	}
	return nil
}

func (x *ConfigNativeApp) GetAppDownloadLink() string {
	if x != nil && x.AppDownloadLink != nil {
		return *x.AppDownloadLink
	}
	return ""
}

func (x *ConfigNativeApp) GetAndroidAppDownloadLink() string {
	if x != nil && x.AndroidAppDownloadLink != nil {
		return *x.AndroidAppDownloadLink
	}
	return ""
}

func (x *ConfigNativeApp) GetIosAppDownloadLink() string {
	if x != nil && x.IosAppDownloadLink != nil {
		return *x.IosAppDownloadLink
	}
	return ""
}

func (x *ConfigNativeApp) GetMobileExternalBrowser() bool {
	if x != nil && x.MobileExternalBrowser != nil {
		return *x.MobileExternalBrowser
	}
	return false
}

func (x *ConfigNativeApp) GetMobileEnableBiometrics() bool {
	if x != nil && x.MobileEnableBiometrics != nil {
		return *x.MobileEnableBiometrics
	}
	return false
}

func (x *ConfigNativeApp) GetMobilePreventScreenCapture() bool {
	if x != nil && x.MobilePreventScreenCapture != nil {
		return *x.MobilePreventScreenCapture
	}
	return false
}

func (x *ConfigNativeApp) GetMobileJailbreakProtection() bool {
	if x != nil && x.MobileJailbreakProtection != nil {
		return *x.MobileJailbreakProtection
	}
	return false
}

type ConfigMeilisearch struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	ServerUrl             *string                `protobuf:"bytes,1,opt,name=server_url,proto3,oneof" json:"server_url,omitempty"`
	MasterKey             *string                `protobuf:"bytes,2,opt,name=master_key,json=masterKey,proto3,oneof" json:"master_key,omitempty"` // Meilisearch-specific authentication
	EnableIndexing        *bool                  `protobuf:"varint,3,opt,name=enable_indexing,json=enableIndexing,proto3,oneof" json:"enable_indexing,omitempty"`
	EnableSearching       *bool                  `protobuf:"varint,4,opt,name=enable_searching,json=enableSearching,proto3,oneof" json:"enable_searching,omitempty"`
	EnableAutocomplete    *bool                  `protobuf:"varint,5,opt,name=enable_autocomplete,json=enableAutocomplete,proto3,oneof" json:"enable_autocomplete,omitempty"`
	BatchSize             *int32                 `protobuf:"varint,6,opt,name=batch_size,json=batchSize,proto3,oneof" json:"batch_size,omitempty"`
	RequestTimeoutSeconds *int32                 `protobuf:"varint,7,opt,name=request_timeout_seconds,json=requestTimeoutSeconds,proto3,oneof" json:"request_timeout_seconds,omitempty"`
	// Meilisearch-specific options
	IndexPrefix         *string `protobuf:"bytes,8,opt,name=index_prefix,json=indexPrefix,proto3,oneof" json:"index_prefix,omitempty"`
	SearchCutoffMs      *int32  `protobuf:"varint,9,opt,name=search_cutoff_ms,json=searchCutoffMs,proto3,oneof" json:"search_cutoff_ms,omitempty"` // performance tuning
	EnableTypoTolerance *bool   `protobuf:"varint,10,opt,name=enable_typo_tolerance,json=enableTypoTolerance,proto3,oneof" json:"enable_typo_tolerance,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ConfigMeilisearch) Reset() {
	*x = ConfigMeilisearch{}
	mi := &file_common_v1_config_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigMeilisearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigMeilisearch) ProtoMessage() {}

func (x *ConfigMeilisearch) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigMeilisearch.ProtoReflect.Descriptor instead.
func (*ConfigMeilisearch) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{17}
}

func (x *ConfigMeilisearch) GetServerUrl() string {
	if x != nil && x.ServerUrl != nil {
		return *x.ServerUrl
	}
	return ""
}

func (x *ConfigMeilisearch) GetMasterKey() string {
	if x != nil && x.MasterKey != nil {
		return *x.MasterKey
	}
	return ""
}

func (x *ConfigMeilisearch) GetEnableIndexing() bool {
	if x != nil && x.EnableIndexing != nil {
		return *x.EnableIndexing
	}
	return false
}

func (x *ConfigMeilisearch) GetEnableSearching() bool {
	if x != nil && x.EnableSearching != nil {
		return *x.EnableSearching
	}
	return false
}

func (x *ConfigMeilisearch) GetEnableAutocomplete() bool {
	if x != nil && x.EnableAutocomplete != nil {
		return *x.EnableAutocomplete
	}
	return false
}

func (x *ConfigMeilisearch) GetBatchSize() int32 {
	if x != nil && x.BatchSize != nil {
		return *x.BatchSize
	}
	return 0
}

func (x *ConfigMeilisearch) GetRequestTimeoutSeconds() int32 {
	if x != nil && x.RequestTimeoutSeconds != nil {
		return *x.RequestTimeoutSeconds
	}
	return 0
}

func (x *ConfigMeilisearch) GetIndexPrefix() string {
	if x != nil && x.IndexPrefix != nil {
		return *x.IndexPrefix
	}
	return ""
}

func (x *ConfigMeilisearch) GetSearchCutoffMs() int32 {
	if x != nil && x.SearchCutoffMs != nil {
		return *x.SearchCutoffMs
	}
	return 0
}

func (x *ConfigMeilisearch) GetEnableTypoTolerance() bool {
	if x != nil && x.EnableTypoTolerance != nil {
		return *x.EnableTypoTolerance
	}
	return false
}

type ConfigBleve struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	IndexDir                      *string                `protobuf:"bytes,1,opt,name=index_dir,json=indexDir,proto3,oneof" json:"index_dir,omitempty"`
	EnableIndexing                *bool                  `protobuf:"varint,2,opt,name=enable_indexing,json=enableIndexing,proto3,oneof" json:"enable_indexing,omitempty"`
	EnableSearching               *bool                  `protobuf:"varint,3,opt,name=enable_searching,json=enableSearching,proto3,oneof" json:"enable_searching,omitempty"`
	EnableAutocomplete            *bool                  `protobuf:"varint,4,opt,name=enable_autocomplete,json=enableAutocomplete,proto3,oneof" json:"enable_autocomplete,omitempty"`
	BulkIndexingTimeWindowSeconds *int32                 `protobuf:"varint,5,opt,name=bulk_indexing_time_window_seconds,json=bulkIndexingTimeWindowSeconds,proto3,oneof" json:"bulk_indexing_time_window_seconds,omitempty"`
	BatchSize                     *int32                 `protobuf:"varint,6,opt,name=batch_size,json=batchSize,proto3,oneof" json:"batch_size,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ConfigBleve) Reset() {
	*x = ConfigBleve{}
	mi := &file_common_v1_config_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigBleve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigBleve) ProtoMessage() {}

func (x *ConfigBleve) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigBleve.ProtoReflect.Descriptor instead.
func (*ConfigBleve) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{18}
}

func (x *ConfigBleve) GetIndexDir() string {
	if x != nil && x.IndexDir != nil {
		return *x.IndexDir
	}
	return ""
}

func (x *ConfigBleve) GetEnableIndexing() bool {
	if x != nil && x.EnableIndexing != nil {
		return *x.EnableIndexing
	}
	return false
}

func (x *ConfigBleve) GetEnableSearching() bool {
	if x != nil && x.EnableSearching != nil {
		return *x.EnableSearching
	}
	return false
}

func (x *ConfigBleve) GetEnableAutocomplete() bool {
	if x != nil && x.EnableAutocomplete != nil {
		return *x.EnableAutocomplete
	}
	return false
}

func (x *ConfigBleve) GetBulkIndexingTimeWindowSeconds() int32 {
	if x != nil && x.BulkIndexingTimeWindowSeconds != nil {
		return *x.BulkIndexingTimeWindowSeconds
	}
	return 0
}

func (x *ConfigBleve) GetBatchSize() int32 {
	if x != nil && x.BatchSize != nil {
		return *x.BatchSize
	}
	return 0
}

type ConfigDataRetention struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	EnableMessageDeletion          *bool                  `protobuf:"varint,1,opt,name=enable_message_deletion,json=enableMessageDeletion,proto3,oneof" json:"enable_message_deletion,omitempty"`
	EnableFileDeletion             *bool                  `protobuf:"varint,2,opt,name=enable_file_deletion,json=enableFileDeletion,proto3,oneof" json:"enable_file_deletion,omitempty"`
	EnableBoardsDeletion           *bool                  `protobuf:"varint,3,opt,name=enable_boards_deletion,json=enableBoardsDeletion,proto3,oneof" json:"enable_boards_deletion,omitempty"`
	MessageRetentionHours          *int32                 `protobuf:"varint,4,opt,name=message_retention_hours,json=messageRetentionHours,proto3,oneof" json:"message_retention_hours,omitempty"`
	FileRetentionHours             *int32                 `protobuf:"varint,5,opt,name=file_retention_hours,json=fileRetentionHours,proto3,oneof" json:"file_retention_hours,omitempty"`
	BoardsRetentionDays            *int32                 `protobuf:"varint,6,opt,name=boards_retention_days,json=boardsRetentionDays,proto3,oneof" json:"boards_retention_days,omitempty"`
	DeletionJobStartTime           *string                `protobuf:"bytes,7,opt,name=deletion_job_start_time,json=deletionJobStartTime,proto3,oneof" json:"deletion_job_start_time,omitempty"`
	BatchSize                      *int32                 `protobuf:"varint,8,opt,name=batch_size,json=batchSize,proto3,oneof" json:"batch_size,omitempty"`
	TimeBetweenBatchesMilliseconds *int32                 `protobuf:"varint,9,opt,name=time_between_batches_milliseconds,json=timeBetweenBatchesMilliseconds,proto3,oneof" json:"time_between_batches_milliseconds,omitempty"`
	RetentionIdsBatchSize          *int32                 `protobuf:"varint,10,opt,name=retention_ids_batch_size,json=retentionIdsBatchSize,proto3,oneof" json:"retention_ids_batch_size,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *ConfigDataRetention) Reset() {
	*x = ConfigDataRetention{}
	mi := &file_common_v1_config_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigDataRetention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDataRetention) ProtoMessage() {}

func (x *ConfigDataRetention) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDataRetention.ProtoReflect.Descriptor instead.
func (*ConfigDataRetention) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{19}
}

func (x *ConfigDataRetention) GetEnableMessageDeletion() bool {
	if x != nil && x.EnableMessageDeletion != nil {
		return *x.EnableMessageDeletion
	}
	return false
}

func (x *ConfigDataRetention) GetEnableFileDeletion() bool {
	if x != nil && x.EnableFileDeletion != nil {
		return *x.EnableFileDeletion
	}
	return false
}

func (x *ConfigDataRetention) GetEnableBoardsDeletion() bool {
	if x != nil && x.EnableBoardsDeletion != nil {
		return *x.EnableBoardsDeletion
	}
	return false
}

func (x *ConfigDataRetention) GetMessageRetentionHours() int32 {
	if x != nil && x.MessageRetentionHours != nil {
		return *x.MessageRetentionHours
	}
	return 0
}

func (x *ConfigDataRetention) GetFileRetentionHours() int32 {
	if x != nil && x.FileRetentionHours != nil {
		return *x.FileRetentionHours
	}
	return 0
}

func (x *ConfigDataRetention) GetBoardsRetentionDays() int32 {
	if x != nil && x.BoardsRetentionDays != nil {
		return *x.BoardsRetentionDays
	}
	return 0
}

func (x *ConfigDataRetention) GetDeletionJobStartTime() string {
	if x != nil && x.DeletionJobStartTime != nil {
		return *x.DeletionJobStartTime
	}
	return ""
}

func (x *ConfigDataRetention) GetBatchSize() int32 {
	if x != nil && x.BatchSize != nil {
		return *x.BatchSize
	}
	return 0
}

func (x *ConfigDataRetention) GetTimeBetweenBatchesMilliseconds() int32 {
	if x != nil && x.TimeBetweenBatchesMilliseconds != nil {
		return *x.TimeBetweenBatchesMilliseconds
	}
	return 0
}

func (x *ConfigDataRetention) GetRetentionIdsBatchSize() int32 {
	if x != nil && x.RetentionIdsBatchSize != nil {
		return *x.RetentionIdsBatchSize
	}
	return 0
}

type ConfigImageProxy struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Enable                  *bool                  `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	ImageProxyType          *string                `protobuf:"bytes,2,opt,name=image_proxy_type,json=imageProxyType,proto3,oneof" json:"image_proxy_type,omitempty"`
	RemoteImageProxyUrl     *string                `protobuf:"bytes,3,opt,name=remote_image_proxy_url,json=remoteImageProxyUrl,proto3,oneof" json:"remote_image_proxy_url,omitempty"`
	RemoteImageProxyOptions *string                `protobuf:"bytes,4,opt,name=remote_image_proxy_options,json=remoteImageProxyOptions,proto3,oneof" json:"remote_image_proxy_options,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ConfigImageProxy) Reset() {
	*x = ConfigImageProxy{}
	mi := &file_common_v1_config_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigImageProxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigImageProxy) ProtoMessage() {}

func (x *ConfigImageProxy) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigImageProxy.ProtoReflect.Descriptor instead.
func (*ConfigImageProxy) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{20}
}

func (x *ConfigImageProxy) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ConfigImageProxy) GetImageProxyType() string {
	if x != nil && x.ImageProxyType != nil {
		return *x.ImageProxyType
	}
	return ""
}

func (x *ConfigImageProxy) GetRemoteImageProxyUrl() string {
	if x != nil && x.RemoteImageProxyUrl != nil {
		return *x.RemoteImageProxyUrl
	}
	return ""
}

func (x *ConfigImageProxy) GetRemoteImageProxyOptions() string {
	if x != nil && x.RemoteImageProxyOptions != nil {
		return *x.RemoteImageProxyOptions
	}
	return ""
}

type Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Main          *ConfigMain            `protobuf:"bytes,1,opt,name=main,proto3" json:"main,omitempty"`
	Services      *ConfigServices        `protobuf:"bytes,2,opt,name=services,proto3" json:"services,omitempty"`
	Security      *ConfigSecurity        `protobuf:"bytes,3,opt,name=security,proto3" json:"security,omitempty"`
	Cache         *CacheConfig           `protobuf:"bytes,4,opt,name=cache,proto3" json:"cache,omitempty"`
	Metrics       *ConfigMetrics         `protobuf:"bytes,5,opt,name=metrics,proto3" json:"metrics,omitempty"`
	Sso           *ConfigSSO             `protobuf:"bytes,6,opt,name=sso,proto3" json:"sso,omitempty"`
	Sql           *ConfigSql             `protobuf:"bytes,7,opt,name=sql,proto3" json:"sql,omitempty"`
	Password      *ConfigPassword        `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
	File          *ConfigFile            `protobuf:"bytes,9,opt,name=file,proto3" json:"file,omitempty"`
	Email         *ConfigEmail           `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`
	RateLimit     *ConfigRateLimit       `protobuf:"bytes,11,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
	Privacy       *ConfigPrivacy         `protobuf:"bytes,12,opt,name=privacy,proto3" json:"privacy,omitempty"`
	Support       *ConfigSupport         `protobuf:"bytes,13,opt,name=support,proto3" json:"support,omitempty"`
	Localization  *ConfigLocalization    `protobuf:"bytes,14,opt,name=localization,proto3" json:"localization,omitempty"`
	Ldap          *ConfigLdap            `protobuf:"bytes,15,opt,name=ldap,proto3" json:"ldap,omitempty"`
	Saml          *ConfigSaml            `protobuf:"bytes,16,opt,name=saml,proto3" json:"saml,omitempty"`
	NativeApp     *ConfigNativeApp       `protobuf:"bytes,17,opt,name=native_app,json=nativeApp,proto3" json:"native_app,omitempty"`
	Meilisearch   *ConfigMeilisearch     `protobuf:"bytes,18,opt,name=meilisearch,proto3" json:"meilisearch,omitempty"`
	Bleve         *ConfigBleve           `protobuf:"bytes,19,opt,name=bleve,proto3" json:"bleve,omitempty"`
	DataRetention *ConfigDataRetention   `protobuf:"bytes,20,opt,name=data_retention,json=dataRetention,proto3" json:"data_retention,omitempty"`
	ImageProxy    *ConfigImageProxy      `protobuf:"bytes,21,opt,name=image_proxy,json=imageProxy,proto3" json:"image_proxy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_common_v1_config_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{21}
}

func (x *Config) GetMain() *ConfigMain {
	if x != nil {
		return x.Main
	}
	return nil
}

func (x *Config) GetServices() *ConfigServices {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *Config) GetSecurity() *ConfigSecurity {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *Config) GetCache() *CacheConfig {
	if x != nil {
		return x.Cache
	}
	return nil
}

func (x *Config) GetMetrics() *ConfigMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *Config) GetSso() *ConfigSSO {
	if x != nil {
		return x.Sso
	}
	return nil
}

func (x *Config) GetSql() *ConfigSql {
	if x != nil {
		return x.Sql
	}
	return nil
}

func (x *Config) GetPassword() *ConfigPassword {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *Config) GetFile() *ConfigFile {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *Config) GetEmail() *ConfigEmail {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *Config) GetRateLimit() *ConfigRateLimit {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

func (x *Config) GetPrivacy() *ConfigPrivacy {
	if x != nil {
		return x.Privacy
	}
	return nil
}

func (x *Config) GetSupport() *ConfigSupport {
	if x != nil {
		return x.Support
	}
	return nil
}

func (x *Config) GetLocalization() *ConfigLocalization {
	if x != nil {
		return x.Localization
	}
	return nil
}

func (x *Config) GetLdap() *ConfigLdap {
	if x != nil {
		return x.Ldap
	}
	return nil
}

func (x *Config) GetSaml() *ConfigSaml {
	if x != nil {
		return x.Saml
	}
	return nil
}

func (x *Config) GetNativeApp() *ConfigNativeApp {
	if x != nil {
		return x.NativeApp
	}
	return nil
}

func (x *Config) GetMeilisearch() *ConfigMeilisearch {
	if x != nil {
		return x.Meilisearch
	}
	return nil
}

func (x *Config) GetBleve() *ConfigBleve {
	if x != nil {
		return x.Bleve
	}
	return nil
}

func (x *Config) GetDataRetention() *ConfigDataRetention {
	if x != nil {
		return x.DataRetention
	}
	return nil
}

func (x *Config) GetImageProxy() *ConfigImageProxy {
	if x != nil {
		return x.ImageProxy
	}
	return nil
}

type ConfigGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigGetRequest) Reset() {
	*x = ConfigGetRequest{}
	mi := &file_common_v1_config_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetRequest) ProtoMessage() {}

func (x *ConfigGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetRequest.ProtoReflect.Descriptor instead.
func (*ConfigGetRequest) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{22}
}

type ConfigGetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*ConfigGetResponse_Data
	//	*ConfigGetResponse_Error
	Response      isConfigGetResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigGetResponse) Reset() {
	*x = ConfigGetResponse{}
	mi := &file_common_v1_config_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetResponse) ProtoMessage() {}

func (x *ConfigGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetResponse.ProtoReflect.Descriptor instead.
func (*ConfigGetResponse) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{23}
}

func (x *ConfigGetResponse) GetResponse() isConfigGetResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ConfigGetResponse) GetData() *Config {
	if x != nil {
		if x, ok := x.Response.(*ConfigGetResponse_Data); ok {
			return x.Data
		}
	}
	return nil
}

func (x *ConfigGetResponse) GetError() *v1.AppError {
	if x != nil {
		if x, ok := x.Response.(*ConfigGetResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isConfigGetResponse_Response interface {
	isConfigGetResponse_Response()
}

type ConfigGetResponse_Data struct {
	Data *Config `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type ConfigGetResponse_Error struct {
	Error *v1.AppError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ConfigGetResponse_Data) isConfigGetResponse_Response() {}

func (*ConfigGetResponse_Error) isConfigGetResponse_Response() {}

type ConfigUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *Config                `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigUpdateRequest) Reset() {
	*x = ConfigUpdateRequest{}
	mi := &file_common_v1_config_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdateRequest) ProtoMessage() {}

func (x *ConfigUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdateRequest.ProtoReflect.Descriptor instead.
func (*ConfigUpdateRequest) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{24}
}

func (x *ConfigUpdateRequest) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type ConfigUpdateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*ConfigUpdateResponse_Data
	//	*ConfigUpdateResponse_Error
	Response      isConfigUpdateResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigUpdateResponse) Reset() {
	*x = ConfigUpdateResponse{}
	mi := &file_common_v1_config_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdateResponse) ProtoMessage() {}

func (x *ConfigUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdateResponse.ProtoReflect.Descriptor instead.
func (*ConfigUpdateResponse) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{25}
}

func (x *ConfigUpdateResponse) GetResponse() isConfigUpdateResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ConfigUpdateResponse) GetData() *Config {
	if x != nil {
		if x, ok := x.Response.(*ConfigUpdateResponse_Data); ok {
			return x.Data
		}
	}
	return nil
}

func (x *ConfigUpdateResponse) GetError() *v1.AppError {
	if x != nil {
		if x, ok := x.Response.(*ConfigUpdateResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isConfigUpdateResponse_Response interface {
	isConfigUpdateResponse_Response()
}

type ConfigUpdateResponse_Data struct {
	Data *Config `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type ConfigUpdateResponse_Error struct {
	Error *v1.AppError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ConfigUpdateResponse_Data) isConfigUpdateResponse_Response() {}

func (*ConfigUpdateResponse_Error) isConfigUpdateResponse_Response() {}

type ConfigListenerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*ConfigListenerResponse_Data
	//	*ConfigListenerResponse_Error
	Response      isConfigListenerResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigListenerResponse) Reset() {
	*x = ConfigListenerResponse{}
	mi := &file_common_v1_config_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigListenerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigListenerResponse) ProtoMessage() {}

func (x *ConfigListenerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigListenerResponse.ProtoReflect.Descriptor instead.
func (*ConfigListenerResponse) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{26}
}

func (x *ConfigListenerResponse) GetResponse() isConfigListenerResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ConfigListenerResponse) GetData() *Config {
	if x != nil {
		if x, ok := x.Response.(*ConfigListenerResponse_Data); ok {
			return x.Data
		}
	}
	return nil
}

func (x *ConfigListenerResponse) GetError() *v1.AppError {
	if x != nil {
		if x, ok := x.Response.(*ConfigListenerResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isConfigListenerResponse_Response interface {
	isConfigListenerResponse_Response()
}

type ConfigListenerResponse_Data struct {
	Data *Config `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type ConfigListenerResponse_Error struct {
	Error *v1.AppError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ConfigListenerResponse_Data) isConfigListenerResponse_Response() {}

func (*ConfigListenerResponse_Error) isConfigListenerResponse_Response() {}

type ConfigListenerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigListenerRequest) Reset() {
	*x = ConfigListenerRequest{}
	mi := &file_common_v1_config_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigListenerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigListenerRequest) ProtoMessage() {}

func (x *ConfigListenerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_config_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigListenerRequest.ProtoReflect.Descriptor instead.
func (*ConfigListenerRequest) Descriptor() ([]byte, []int) {
	return file_common_v1_config_proto_rawDescGZIP(), []int{27}
}

func (x *ConfigListenerRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

var File_common_v1_config_proto protoreflect.FileDescriptor

const file_common_v1_config_proto_rawDesc = "" +
	"\n" +
	"\x16common/v1/config.proto\x12\tcommon.v1\x1a\x15shared/v1/error.proto\"\xec\x0e\n" +
	"\n" +
	"ConfigMain\x12\x15\n" +
	"\x03env\x18\x01 \x01(\tH\x00R\x03env\x88\x01\x01\x12 \n" +
	"\tsite_name\x18\x02 \x01(\tH\x01R\bsiteName\x88\x01\x01\x12\x1e\n" +
	"\bsite_url\x18\x03 \x01(\tH\x02R\asiteUrl\x88\x01\x01\x125\n" +
	"\x14enable_link_previews\x18\x05 \x01(\bH\x03R\x12enableLinkPreviews\x88\x01\x01\x129\n" +
	"\x16restrict_link_previews\x18\x06 \x01(\tH\x04R\x14restrictLinkPreviews\x88\x01\x01\x12R\n" +
	"#enable_client_performance_debugging\x18\a \x01(\bH\x05R enableClientPerformanceDebugging\x88\x01\x01\x12/\n" +
	"\x11enable_gif_picker\x18\b \x01(\bH\x06R\x0fenableGifPicker\x88\x01\x01\x123\n" +
	"\x13enable_custom_emoji\x18\t \x01(\bH\aR\x11enableCustomEmoji\x88\x01\x01\x123\n" +
	"\x13enable_emoji_picker\x18\n" +
	" \x01(\bH\bR\x11enableEmojiPicker\x88\x01\x01\x12d\n" +
	"-time_between_user_typing_updates_milliseconds\x18\v \x01(\x03H\tR(timeBetweenUserTypingUpdatesMilliseconds\x88\x01\x01\x121\n" +
	"\x12enable_file_search\x18\f \x01(\bH\n" +
	"R\x10enableFileSearch\x88\x01\x01\x12B\n" +
	"\x1benable_user_typing_messages\x18\r \x01(\bH\vR\x18enableUserTypingMessages\x88\x01\x01\x125\n" +
	"\x14enable_user_statuses\x18\x0e \x01(\bH\fR\x12enableUserStatuses\x88\x01\x01\x12=\n" +
	"\x18enable_email_invitations\x18\x0f \x01(\bH\rR\x16enableEmailInvitations\x88\x01\x01\x12$\n" +
	"\venable_svgs\x18\x10 \x01(\bH\x0eR\n" +
	"enableSvgs\x88\x01\x01\x12I\n" +
	"\x1eallow_persistent_notifications\x18\x11 \x01(\bH\x0fR\x1callowPersistentNotifications\x88\x01\x01\x12\\\n" +
	"(persistent_notification_interval_minutes\x18\x12 \x01(\x05H\x10R%persistentNotificationIntervalMinutes\x88\x01\x01\x12N\n" +
	"!persistent_notification_max_count\x18\x13 \x01(\x05H\x11R\x1epersistentNotificationMaxCount\x88\x01\x01\x12X\n" +
	"&persistent_notification_max_recipients\x18\x14 \x01(\x05H\x12R#persistentNotificationMaxRecipients\x88\x01\x01\x12O\n" +
	"\"feature_flag_sync_interval_seconds\x18\x15 \x01(\x05H\x13R\x1efeatureFlagSyncIntervalSeconds\x88\x01\x01\x123\n" +
	"\x13allow_synced_drafts\x18\x16 \x01(\bH\x14R\x11allowSyncedDrafts\x88\x01\x01B\x06\n" +
	"\x04_envB\f\n" +
	"\n" +
	"_site_nameB\v\n" +
	"\t_site_urlB\x17\n" +
	"\x15_enable_link_previewsB\x19\n" +
	"\x17_restrict_link_previewsB&\n" +
	"$_enable_client_performance_debuggingB\x14\n" +
	"\x12_enable_gif_pickerB\x16\n" +
	"\x14_enable_custom_emojiB\x16\n" +
	"\x14_enable_emoji_pickerB0\n" +
	"._time_between_user_typing_updates_millisecondsB\x15\n" +
	"\x13_enable_file_searchB\x1e\n" +
	"\x1c_enable_user_typing_messagesB\x17\n" +
	"\x15_enable_user_statusesB\x1b\n" +
	"\x19_enable_email_invitationsB\x0e\n" +
	"\f_enable_svgsB!\n" +
	"\x1f_allow_persistent_notificationsB+\n" +
	")_persistent_notification_interval_minutesB$\n" +
	"\"_persistent_notification_max_countB)\n" +
	"'_persistent_notification_max_recipientsB%\n" +
	"#_feature_flag_sync_interval_secondsB\x16\n" +
	"\x14_allow_synced_drafts\"\xba\x06\n" +
	"\x0eConfigServices\x12:\n" +
	"\x17common_service_grpc_url\x18\x01 \x01(\tH\x00R\x14commonServiceGrpcUrl\x88\x01\x01\x126\n" +
	"\x15user_service_grpc_url\x18\x02 \x01(\tH\x01R\x12userServiceGrpcUrl\x88\x01\x01\x12>\n" +
	"\x19products_service_grpc_url\x18\x03 \x01(\tH\x02R\x16productsServiceGrpcUrl\x88\x01\x01\x125\n" +
	"\x14jaeger_collector_url\x18\x04 \x01(\tH\x03R\x12jaegerCollectorUrl\x88\x01\x01\x12F\n" +
	"\x1dcommon_service_prometheus_url\x18\x05 \x01(\tH\x04R\x1acommonServicePrometheusUrl\x88\x01\x01\x12B\n" +
	"\x1buser_service_prometheus_url\x18\x06 \x01(\tH\x05R\x18userServicePrometheusUrl\x88\x01\x01\x12J\n" +
	"\x1fproducts_service_prometheus_url\x18\a \x01(\tH\x06R\x1cproductsServicePrometheusUrl\x88\x01\x01\x12a\n" +
	",users_service_max_receive_message_size_bytes\x18\b \x01(\x03H\aR&usersServiceMaxReceiveMessageSizeBytes\x88\x01\x01B\x1a\n" +
	"\x18_common_service_grpc_urlB\x18\n" +
	"\x16_user_service_grpc_urlB\x1c\n" +
	"\x1a_products_service_grpc_urlB\x17\n" +
	"\x15_jaeger_collector_urlB \n" +
	"\x1e_common_service_prometheus_urlB\x1e\n" +
	"\x1c_user_service_prometheus_urlB\"\n" +
	" _products_service_prometheus_urlB/\n" +
	"-_users_service_max_receive_message_size_bytes\"\x89\x11\n" +
	"\x0eConfigSecurity\x12e\n" +
	"\x14restricted_usernames\x18\x01 \x03(\v22.common.v1.ConfigSecurity.RestrictedUsernamesEntryR\x13restrictedUsernames\x129\n" +
	"\x16maximum_login_attempts\x18\x02 \x01(\x05H\x00R\x14maximumLoginAttempts\x88\x01\x01\x12T\n" +
	"$enable_insecure_outgoing_connections\x18\x03 \x01(\bH\x01R!enableInsecureOutgoingConnections\x88\x01\x01\x12O\n" +
	"!enable_multifactor_authentication\x18\x04 \x01(\bH\x02R\x1fenableMultifactorAuthentication\x88\x01\x01\x12Q\n" +
	"\"enforce_multifactor_authentication\x18\x05 \x01(\bH\x03R enforceMultifactorAuthentication\x88\x01\x01\x12F\n" +
	"\x1denable_oauth_service_provider\x18\x06 \x01(\bH\x04R\x1aenableOauthServiceProvider\x88\x01\x01\x12N\n" +
	"!enable_outgoing_oauth_connections\x18\a \x01(\bH\x05R\x1eenableOutgoingOauthConnections\x88\x01\x01\x12U\n" +
	"%terminate_sessions_on_password_change\x18\b \x01(\bH\x06R!terminateSessionsOnPasswordChange\x88\x01\x01\x12A\n" +
	"\x1bsession_length_web_in_hours\x18\t \x01(\x05H\aR\x17sessionLengthWebInHours\x88\x01\x01\x12G\n" +
	"\x1esession_length_mobile_in_hours\x18\n" +
	" \x01(\x05H\bR\x1asessionLengthMobileInHours\x88\x01\x01\x12A\n" +
	"\x1bsession_length_sso_in_hours\x18\v \x01(\x05H\tR\x17sessionLengthSsoInHours\x88\x01\x01\x12+\n" +
	"\x0fallow_cors_from\x18\f \x01(\tH\n" +
	"R\rallowCorsFrom\x88\x01\x01\x125\n" +
	"\x14cors_exposed_headers\x18\r \x01(\tH\vR\x12corsExposedHeaders\x88\x01\x01\x129\n" +
	"\x16cors_allow_credentials\x18\x0e \x01(\bH\fR\x14corsAllowCredentials\x88\x01\x01\x12\"\n" +
	"\n" +
	"cors_debug\x18\x0f \x01(\bH\rR\tcorsDebug\x88\x01\x01\x12D\n" +
	"\x1callow_cookies_for_subdomains\x18\x10 \x01(\bH\x0eR\x19allowCookiesForSubdomains\x88\x01\x01\x12<\n" +
	"\x18session_cache_in_minutes\x18\x11 \x01(\x05H\x0fR\x15sessionCacheInMinutes\x88\x01\x01\x129\n" +
	"\x16email_confirmation_url\x18\x12 \x01(\tH\x10R\x14emailConfirmationUrl\x88\x01\x01\x12O\n" +
	"\"token_confirmation_expiry_in_hours\x18\x13 \x01(\rH\x11R\x1etokenConfirmationExpiryInHours\x88\x01\x01\x12R\n" +
	"$token_password_reset_expiry_in_hours\x18\x14 \x01(\rH\x12R\x1ftokenPasswordResetExpiryInHours\x88\x01\x01\x121\n" +
	"\x12password_reset_url\x18\x15 \x01(\tH\x13R\x10passwordResetUrl\x88\x01\x01\x1aF\n" +
	"\x18RestrictedUsernamesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x19\n" +
	"\x17_maximum_login_attemptsB'\n" +
	"%_enable_insecure_outgoing_connectionsB$\n" +
	"\"_enable_multifactor_authenticationB%\n" +
	"#_enforce_multifactor_authenticationB \n" +
	"\x1e_enable_oauth_service_providerB$\n" +
	"\"_enable_outgoing_oauth_connectionsB(\n" +
	"&_terminate_sessions_on_password_changeB\x1e\n" +
	"\x1c_session_length_web_in_hoursB!\n" +
	"\x1f_session_length_mobile_in_hoursB\x1e\n" +
	"\x1c_session_length_sso_in_hoursB\x12\n" +
	"\x10_allow_cors_fromB\x17\n" +
	"\x15_cors_exposed_headersB\x19\n" +
	"\x17_cors_allow_credentialsB\r\n" +
	"\v_cors_debugB\x1f\n" +
	"\x1d_allow_cookies_for_subdomainsB\x1b\n" +
	"\x19_session_cache_in_minutesB\x19\n" +
	"\x17_email_confirmation_urlB%\n" +
	"#_token_confirmation_expiry_in_hoursB'\n" +
	"%_token_password_reset_expiry_in_hoursB\x15\n" +
	"\x13_password_reset_url\"\x82\x03\n" +
	"\vCacheConfig\x12\"\n" +
	"\n" +
	"cache_type\x18\x01 \x01(\tH\x00R\tcacheType\x88\x01\x01\x12(\n" +
	"\rredis_address\x18\x02 \x01(\tH\x01R\fredisAddress\x88\x01\x01\x12*\n" +
	"\x0eredis_password\x18\x03 \x01(\tH\x02R\rredisPassword\x88\x01\x01\x12\x1e\n" +
	"\bredis_db\x18\x04 \x01(\x05H\x03R\aredisDb\x88\x01\x01\x121\n" +
	"\x12redis_cache_prefix\x18\x05 \x01(\tH\x04R\x10redisCachePrefix\x88\x01\x01\x125\n" +
	"\x14disable_client_cache\x18\x06 \x01(\bH\x05R\x12disableClientCache\x88\x01\x01B\r\n" +
	"\v_cache_typeB\x10\n" +
	"\x0e_redis_addressB\x11\n" +
	"\x0f_redis_passwordB\v\n" +
	"\t_redis_dbB\x15\n" +
	"\x13_redis_cache_prefixB\x17\n" +
	"\x15_disable_client_cache\"\xa9\x03\n" +
	"\rConfigMetrics\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x121\n" +
	"\x12block_profile_rate\x18\x02 \x01(\x05H\x01R\x10blockProfileRate\x88\x01\x01\x12*\n" +
	"\x0elisten_address\x18\x03 \x01(\tH\x02R\rlistenAddress\x88\x01\x01\x127\n" +
	"\x15enable_client_metrics\x18\x04 \x01(\bH\x03R\x13enableClientMetrics\x88\x01\x01\x12C\n" +
	"\x1benable_notification_metrics\x18\x05 \x01(\bH\x04R\x19enableNotificationMetrics\x88\x01\x01\x12/\n" +
	"\x14client_side_user_ids\x18\x06 \x03(\tR\x11clientSideUserIdsB\t\n" +
	"\a_enableB\x15\n" +
	"\x13_block_profile_rateB\x11\n" +
	"\x0f_listen_addressB\x18\n" +
	"\x16_enable_client_metricsB\x1e\n" +
	"\x1c_enable_notification_metrics\"\x98\x04\n" +
	"\tConfigSSO\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12\x1b\n" +
	"\x06secret\x18\x02 \x01(\tH\x01R\x06secret\x88\x01\x01\x12\x13\n" +
	"\x02id\x18\x03 \x01(\tH\x02R\x02id\x88\x01\x01\x12\x19\n" +
	"\x05scope\x18\x04 \x01(\tH\x03R\x05scope\x88\x01\x01\x12(\n" +
	"\rauth_endpoint\x18\x05 \x01(\tH\x04R\fauthEndpoint\x88\x01\x01\x12*\n" +
	"\x0etoken_endpoint\x18\x06 \x01(\tH\x05R\rtokenEndpoint\x88\x01\x01\x12/\n" +
	"\x11user_api_endpoint\x18\a \x01(\tH\x06R\x0fuserApiEndpoint\x88\x01\x01\x122\n" +
	"\x12discovery_endpoint\x18\b \x01(\tH\aR\x11discoveryEndpoint\x88\x01\x01\x12$\n" +
	"\vbutton_text\x18\t \x01(\tH\bR\n" +
	"buttonText\x88\x01\x01\x12&\n" +
	"\fbutton_color\x18\n" +
	" \x01(\tH\tR\vbuttonColor\x88\x01\x01B\t\n" +
	"\a_enableB\t\n" +
	"\a_secretB\x05\n" +
	"\x03_idB\b\n" +
	"\x06_scopeB\x10\n" +
	"\x0e_auth_endpointB\x11\n" +
	"\x0f_token_endpointB\x14\n" +
	"\x12_user_api_endpointB\x15\n" +
	"\x13_discovery_endpointB\x0e\n" +
	"\f_button_textB\x0f\n" +
	"\r_button_color\"\xd5\x05\n" +
	"\tConfigSql\x12$\n" +
	"\vdriver_name\x18\x01 \x01(\tH\x00R\n" +
	"driverName\x88\x01\x01\x12$\n" +
	"\vdata_source\x18\x02 \x01(\tH\x01R\n" +
	"dataSource\x88\x01\x01\x12)\n" +
	"\x0emax_idle_conns\x18\x03 \x01(\x05H\x02R\fmaxIdleConns\x88\x01\x01\x12H\n" +
	"\x1econn_max_lifetime_milliseconds\x18\x04 \x01(\x05H\x03R\x1bconnMaxLifetimeMilliseconds\x88\x01\x01\x12I\n" +
	"\x1fconn_max_idle_time_milliseconds\x18\x05 \x01(\x05H\x04R\x1bconnMaxIdleTimeMilliseconds\x88\x01\x01\x12)\n" +
	"\x0emax_open_conns\x18\x06 \x01(\x05H\x05R\fmaxOpenConns\x88\x01\x01\x12\x19\n" +
	"\x05trace\x18\a \x01(\bH\x06R\x05trace\x88\x01\x01\x122\n" +
	"\x13at_rest_encrypt_key\x18\b \x01(\tH\aR\x10atRestEncryptKey\x88\x01\x01\x12(\n" +
	"\rquery_timeout\x18\t \x01(\x05H\bR\fqueryTimeout\x88\x01\x01\x12;\n" +
	"\x17disable_database_search\x18\n" +
	" \x01(\bH\tR\x15disableDatabaseSearch\x88\x01\x01B\x0e\n" +
	"\f_driver_nameB\x0e\n" +
	"\f_data_sourceB\x11\n" +
	"\x0f_max_idle_connsB!\n" +
	"\x1f_conn_max_lifetime_millisecondsB\"\n" +
	" _conn_max_idle_time_millisecondsB\x11\n" +
	"\x0f_max_open_connsB\b\n" +
	"\x06_traceB\x16\n" +
	"\x14_at_rest_encrypt_keyB\x10\n" +
	"\x0e_query_timeoutB\x1a\n" +
	"\x18_disable_database_search\"\x8a\x03\n" +
	"\x0eConfigPassword\x12*\n" +
	"\x0eminimum_length\x18\x01 \x01(\x05H\x00R\rminimumLength\x88\x01\x01\x12*\n" +
	"\x0emaximum_length\x18\x02 \x01(\x05H\x01R\rmaximumLength\x88\x01\x01\x12!\n" +
	"\tlowercase\x18\x03 \x01(\bH\x02R\tlowercase\x88\x01\x01\x12\x1b\n" +
	"\x06number\x18\x04 \x01(\bH\x03R\x06number\x88\x01\x01\x12!\n" +
	"\tuppercase\x18\x05 \x01(\bH\x04R\tuppercase\x88\x01\x01\x12\x1b\n" +
	"\x06symbol\x18\x06 \x01(\bH\x05R\x06symbol\x88\x01\x01\x121\n" +
	"\x12enable_forgot_link\x18\a \x01(\bH\x06R\x10enableForgotLink\x88\x01\x01B\x11\n" +
	"\x0f_minimum_lengthB\x11\n" +
	"\x0f_maximum_lengthB\f\n" +
	"\n" +
	"_lowercaseB\t\n" +
	"\a_numberB\f\n" +
	"\n" +
	"_uppercaseB\t\n" +
	"\a_symbolB\x15\n" +
	"\x13_enable_forgot_link\"\xa3\f\n" +
	"\n" +
	"ConfigFile\x12;\n" +
	"\x17enable_file_attachments\x18\x01 \x01(\bH\x00R\x15enableFileAttachments\x88\x01\x01\x125\n" +
	"\x14enable_mobile_upload\x18\x02 \x01(\bH\x01R\x12enableMobileUpload\x88\x01\x01\x129\n" +
	"\x16enable_mobile_download\x18\x03 \x01(\bH\x02R\x14enableMobileDownload\x88\x01\x01\x125\n" +
	"\x14max_image_resolution\x18\x04 \x01(\x03H\x03R\x12maxImageResolution\x88\x01\x01\x12F\n" +
	"\x1dmax_image_decoder_concurrency\x18\x05 \x01(\x03H\x04R\x1amaxImageDecoderConcurrency\x88\x01\x01\x12$\n" +
	"\vdriver_name\x18\x06 \x01(\tH\x05R\n" +
	"driverName\x88\x01\x01\x129\n" +
	"\x17amazon_s3_access_key_id\x18\a \x01(\tH\x06R\x13amazonS3AccessKeyId\x88\x01\x01\x12A\n" +
	"\x1bamazon_s3_secret_access_key\x18\b \x01(\tH\aR\x17amazonS3SecretAccessKey\x88\x01\x01\x12-\n" +
	"\x10amazon_s3_bucket\x18\t \x01(\tH\bR\x0eamazonS3Bucket\x88\x01\x01\x126\n" +
	"\x15amazon_s3_path_prefix\x18\n" +
	" \x01(\tH\tR\x12amazonS3PathPrefix\x88\x01\x01\x12-\n" +
	"\x10amazon_s3_region\x18\v \x01(\tH\n" +
	"R\x0eamazonS3Region\x88\x01\x01\x121\n" +
	"\x12amazon_s3_endpoint\x18\f \x01(\tH\vR\x10amazonS3Endpoint\x88\x01\x01\x12'\n" +
	"\ramazon_s3_ssl\x18\r \x01(\bH\fR\vamazonS3Ssl\x88\x01\x01\x12.\n" +
	"\x11amazon_s3_sign_v2\x18\x0e \x01(\bH\rR\x0eamazonS3SignV2\x88\x01\x01\x12'\n" +
	"\ramazon_s3_sse\x18\x0f \x01(\bH\x0eR\vamazonS3Sse\x88\x01\x01\x12+\n" +
	"\x0famazon_s3_trace\x18\x10 \x01(\bH\x0fR\ramazonS3Trace\x88\x01\x01\x12W\n" +
	"&amazon_s3_request_timeout_milliseconds\x18\x11 \x01(\x03H\x10R\"amazonS3RequestTimeoutMilliseconds\x88\x01\x01\x12J\n" +
	" amazon_s3_upload_part_size_bytes\x18\x12 \x01(\x03H\x11R\x1bamazonS3UploadPartSizeBytes\x88\x01\x01\x12:\n" +
	"\x17amazon_s3_storage_class\x18\x13 \x01(\tH\x12R\x14amazonS3StorageClass\x88\x01\x01B\x1a\n" +
	"\x18_enable_file_attachmentsB\x17\n" +
	"\x15_enable_mobile_uploadB\x19\n" +
	"\x17_enable_mobile_downloadB\x17\n" +
	"\x15_max_image_resolutionB \n" +
	"\x1e_max_image_decoder_concurrencyB\x0e\n" +
	"\f_driver_nameB\x1a\n" +
	"\x18_amazon_s3_access_key_idB\x1e\n" +
	"\x1c_amazon_s3_secret_access_keyB\x13\n" +
	"\x11_amazon_s3_bucketB\x18\n" +
	"\x16_amazon_s3_path_prefixB\x13\n" +
	"\x11_amazon_s3_regionB\x15\n" +
	"\x13_amazon_s3_endpointB\x10\n" +
	"\x0e_amazon_s3_sslB\x14\n" +
	"\x12_amazon_s3_sign_v2B\x10\n" +
	"\x0e_amazon_s3_sseB\x12\n" +
	"\x10_amazon_s3_traceB)\n" +
	"'_amazon_s3_request_timeout_millisecondsB#\n" +
	"!_amazon_s3_upload_part_size_bytesB\x1a\n" +
	"\x18_amazon_s3_storage_class\"\x88\x11\n" +
	"\vConfigEmail\x12=\n" +
	"\x18send_email_notifications\x18\x01 \x01(\bH\x00R\x16sendEmailNotifications\x88\x01\x01\x12A\n" +
	"\x1arequire_email_verification\x18\x02 \x01(\bH\x01R\x18requireEmailVerification\x88\x01\x01\x12*\n" +
	"\x0efeedback_email\x18\x03 \x01(\tH\x02R\rfeedbackEmail\x88\x01\x01\x12-\n" +
	"\x10reply_to_address\x18\x04 \x01(\tH\x03R\x0ereplyToAddress\x88\x01\x01\x12-\n" +
	"\x10enable_smtp_auth\x18\x05 \x01(\bH\x04R\x0eenableSmtpAuth\x88\x01\x01\x12(\n" +
	"\rsmtp_username\x18\x06 \x01(\tH\x05R\fsmtpUsername\x88\x01\x01\x12(\n" +
	"\rsmtp_password\x18\a \x01(\tH\x06R\fsmtpPassword\x88\x01\x01\x12$\n" +
	"\vsmtp_server\x18\b \x01(\tH\aR\n" +
	"smtpServer\x88\x01\x01\x12 \n" +
	"\tsmtp_port\x18\t \x01(\tH\bR\bsmtpPort\x88\x01\x01\x123\n" +
	"\x13smtp_server_timeout\x18\n" +
	" \x01(\x05H\tR\x11smtpServerTimeout\x88\x01\x01\x124\n" +
	"\x13connection_security\x18\v \x01(\tH\n" +
	"R\x12connectionSecurity\x88\x01\x01\x12;\n" +
	"\x17send_push_notifications\x18\f \x01(\bH\vR\x15sendPushNotifications\x88\x01\x01\x12=\n" +
	"\x18push_notification_server\x18\r \x01(\tH\fR\x16pushNotificationServer\x88\x01\x01\x12A\n" +
	"\x1apush_notification_contents\x18\x0e \x01(\tH\rR\x18pushNotificationContents\x88\x01\x01\x12=\n" +
	"\x18push_notification_buffer\x18\x0f \x01(\x05H\x0eR\x16pushNotificationBuffer\x88\x01\x01\x127\n" +
	"\x15enable_email_batching\x18\x10 \x01(\bH\x0fR\x13enableEmailBatching\x88\x01\x01\x12@\n" +
	"\x1aemail_batching_buffer_size\x18\x11 \x01(\x05H\x10R\x17emailBatchingBufferSize\x88\x01\x01\x12;\n" +
	"\x17email_batching_interval\x18\x12 \x01(\x05H\x11R\x15emailBatchingInterval\x88\x01\x01\x12T\n" +
	"$skip_server_certificate_verification\x18\x13 \x01(\bH\x12R!skipServerCertificateVerification\x88\x01\x01\x12L\n" +
	" email_notification_contents_type\x18\x14 \x01(\tH\x13R\x1demailNotificationContentsType\x88\x01\x01\x121\n" +
	"\x12login_button_color\x18\x15 \x01(\tH\x14R\x10loginButtonColor\x88\x01\x01\x12>\n" +
	"\x19login_button_border_color\x18\x16 \x01(\tH\x15R\x16loginButtonBorderColor\x88\x01\x01\x12:\n" +
	"\x17login_button_text_color\x18\x17 \x01(\tH\x16R\x14loginButtonTextColor\x88\x01\x01\x12>\n" +
	"\x19rate_limiting_memory_size\x18\x18 \x01(\x05H\x17R\x16rateLimitingMemorySize\x88\x01\x01\x128\n" +
	"\x16rate_limiting_per_hour\x18\x19 \x01(\x05H\x18R\x13rateLimitingPerHour\x88\x01\x01\x12:\n" +
	"\x17rate_limiting_max_burst\x18\x1a \x01(\x05H\x19R\x14rateLimitingMaxBurst\x88\x01\x01B\x1b\n" +
	"\x19_send_email_notificationsB\x1d\n" +
	"\x1b_require_email_verificationB\x11\n" +
	"\x0f_feedback_emailB\x13\n" +
	"\x11_reply_to_addressB\x13\n" +
	"\x11_enable_smtp_authB\x10\n" +
	"\x0e_smtp_usernameB\x10\n" +
	"\x0e_smtp_passwordB\x0e\n" +
	"\f_smtp_serverB\f\n" +
	"\n" +
	"_smtp_portB\x16\n" +
	"\x14_smtp_server_timeoutB\x16\n" +
	"\x14_connection_securityB\x1a\n" +
	"\x18_send_push_notificationsB\x1b\n" +
	"\x19_push_notification_serverB\x1d\n" +
	"\x1b_push_notification_contentsB\x1b\n" +
	"\x19_push_notification_bufferB\x18\n" +
	"\x16_enable_email_batchingB\x1d\n" +
	"\x1b_email_batching_buffer_sizeB\x1a\n" +
	"\x18_email_batching_intervalB'\n" +
	"%_skip_server_certificate_verificationB#\n" +
	"!_email_notification_contents_typeB\x15\n" +
	"\x13_login_button_colorB\x1c\n" +
	"\x1a_login_button_border_colorB\x1a\n" +
	"\x18_login_button_text_colorB\x1c\n" +
	"\x1a_rate_limiting_memory_sizeB\x19\n" +
	"\x17_rate_limiting_per_hourB\x1a\n" +
	"\x18_rate_limiting_max_burst\"\x84\x03\n" +
	"\x0fConfigRateLimit\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12\x1c\n" +
	"\aper_sec\x18\x02 \x01(\x05H\x01R\x06perSec\x88\x01\x01\x12 \n" +
	"\tmax_burst\x18\x03 \x01(\x05H\x02R\bmaxBurst\x88\x01\x01\x12/\n" +
	"\x11memory_store_size\x18\x04 \x01(\x05H\x03R\x0fmemoryStoreSize\x88\x01\x01\x122\n" +
	"\x13vary_by_remote_addr\x18\x05 \x01(\bH\x04R\x10varyByRemoteAddr\x88\x01\x01\x12%\n" +
	"\fvary_by_user\x18\x06 \x01(\bH\x05R\n" +
	"varyByUser\x88\x01\x01\x12$\n" +
	"\x0evary_by_header\x18\a \x01(\tR\fvaryByHeaderB\t\n" +
	"\a_enableB\n" +
	"\n" +
	"\b_per_secB\f\n" +
	"\n" +
	"_max_burstB\x14\n" +
	"\x12_memory_store_sizeB\x16\n" +
	"\x14_vary_by_remote_addrB\x0f\n" +
	"\r_vary_by_user\"\x97\x01\n" +
	"\rConfigPrivacy\x121\n" +
	"\x12show_email_address\x18\x01 \x01(\bH\x00R\x10showEmailAddress\x88\x01\x01\x12)\n" +
	"\x0eshow_full_name\x18\x02 \x01(\bH\x01R\fshowFullName\x88\x01\x01B\x15\n" +
	"\x13_show_email_addressB\x11\n" +
	"\x0f_show_full_name\"\xef\x03\n" +
	"\rConfigSupport\x126\n" +
	"\x15terms_of_service_link\x18\x01 \x01(\tH\x00R\x12termsOfServiceLink\x88\x01\x01\x123\n" +
	"\x13privacy_policy_link\x18\x02 \x01(\tH\x01R\x11privacyPolicyLink\x88\x01\x01\x12\"\n" +
	"\n" +
	"about_link\x18\x03 \x01(\tH\x02R\taboutLink\x88\x01\x01\x12 \n" +
	"\thelp_link\x18\x04 \x01(\tH\x03R\bhelpLink\x88\x01\x01\x126\n" +
	"\x15report_a_problem_link\x18\x05 \x01(\tH\x04R\x12reportAProblemLink\x88\x01\x01\x125\n" +
	"\x14forgot_password_link\x18\x06 \x01(\tH\x05R\x12forgotPasswordLink\x88\x01\x01\x12(\n" +
	"\rsupport_email\x18\a \x01(\tH\x06R\fsupportEmail\x88\x01\x01B\x18\n" +
	"\x16_terms_of_service_linkB\x16\n" +
	"\x14_privacy_policy_linkB\r\n" +
	"\v_about_linkB\f\n" +
	"\n" +
	"_help_linkB\x18\n" +
	"\x16_report_a_problem_linkB\x17\n" +
	"\x15_forgot_password_linkB\x10\n" +
	"\x0e_support_email\"\xe7\x01\n" +
	"\x12ConfigLocalization\x127\n" +
	"\x15default_server_locale\x18\x01 \x01(\tH\x00R\x13defaultServerLocale\x88\x01\x01\x127\n" +
	"\x15default_client_locale\x18\x02 \x01(\tH\x01R\x13defaultClientLocale\x88\x01\x01\x12+\n" +
	"\x11available_locales\x18\x03 \x03(\tR\x10availableLocalesB\x18\n" +
	"\x16_default_server_localeB\x18\n" +
	"\x16_default_client_locale\"\xd5\x10\n" +
	"\n" +
	"ConfigLdap\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12$\n" +
	"\venable_sync\x18\x02 \x01(\bH\x01R\n" +
	"enableSync\x88\x01\x01\x12$\n" +
	"\vldap_server\x18\x03 \x01(\tH\x02R\n" +
	"ldapServer\x88\x01\x01\x12 \n" +
	"\tldap_port\x18\x04 \x01(\x05H\x03R\bldapPort\x88\x01\x01\x124\n" +
	"\x13connection_security\x18\x05 \x01(\tH\x04R\x12connectionSecurity\x88\x01\x01\x12\x1c\n" +
	"\abase_dn\x18\x06 \x01(\tH\x05R\x06baseDn\x88\x01\x01\x12(\n" +
	"\rbind_username\x18\a \x01(\tH\x06R\fbindUsername\x88\x01\x01\x12(\n" +
	"\rbind_password\x18\b \x01(\tH\aR\fbindPassword\x88\x01\x01\x129\n" +
	"\x16maximum_login_attempts\x18\t \x01(\x05H\bR\x14maximumLoginAttempts\x88\x01\x01\x12$\n" +
	"\vuser_filter\x18\n" +
	" \x01(\tH\tR\n" +
	"userFilter\x88\x01\x01\x12&\n" +
	"\fgroup_filter\x18\v \x01(\tH\n" +
	"R\vgroupFilter\x88\x01\x01\x123\n" +
	"\x13enable_admin_filter\x18\f \x01(\bH\vR\x11enableAdminFilter\x88\x01\x01\x12&\n" +
	"\fadmin_filter\x18\r \x01(\tH\fR\vadminFilter\x88\x01\x01\x12D\n" +
	"\x1cgroup_display_name_attribute\x18\x0e \x01(\tH\rR\x19groupDisplayNameAttribute\x88\x01\x01\x121\n" +
	"\x12group_id_attribute\x18\x0f \x01(\tH\x0eR\x10groupIdAttribute\x88\x01\x01\x125\n" +
	"\x14first_name_attribute\x18\x10 \x01(\tH\x0fR\x12firstNameAttribute\x88\x01\x01\x123\n" +
	"\x13last_name_attribute\x18\x11 \x01(\tH\x10R\x11lastNameAttribute\x88\x01\x01\x12,\n" +
	"\x0femail_attribute\x18\x12 \x01(\tH\x11R\x0eemailAttribute\x88\x01\x01\x122\n" +
	"\x12username_attribute\x18\x13 \x01(\tH\x12R\x11usernameAttribute\x88\x01\x01\x122\n" +
	"\x12nickname_attribute\x18\x14 \x01(\tH\x13R\x11nicknameAttribute\x88\x01\x01\x12&\n" +
	"\fid_attribute\x18\x15 \x01(\tH\x14R\vidAttribute\x88\x01\x01\x122\n" +
	"\x12position_attribute\x18\x16 \x01(\tH\x15R\x11positionAttribute\x88\x01\x01\x121\n" +
	"\x12login_id_attribute\x18\x17 \x01(\tH\x16R\x10loginIdAttribute\x88\x01\x01\x120\n" +
	"\x11picture_attribute\x18\x18 \x01(\tH\x17R\x10pictureAttribute\x88\x01\x01\x127\n" +
	"\x15sync_interval_minutes\x18\x19 \x01(\x05H\x18R\x13syncIntervalMinutes\x88\x01\x01\x12(\n" +
	"\rquery_timeout\x18\x1a \x01(\x05H\x19R\fqueryTimeout\x88\x01\x01\x12'\n" +
	"\rmax_page_size\x18\x1b \x01(\x05H\x1aR\vmaxPageSize\x88\x01\x01\x12-\n" +
	"\x10login_field_name\x18\x1c \x01(\tH\x1bR\x0eloginFieldName\x88\x01\x01\x121\n" +
	"\x12login_button_color\x18\x1d \x01(\tH\x1cR\x10loginButtonColor\x88\x01\x01\x12>\n" +
	"\x19login_button_border_color\x18\x1e \x01(\tH\x1dR\x16loginButtonBorderColor\x88\x01\x01\x12:\n" +
	"\x17login_button_text_color\x18\x1f \x01(\tH\x1eR\x14loginButtonTextColor\x88\x01\x01B\t\n" +
	"\a_enableB\x0e\n" +
	"\f_enable_syncB\x0e\n" +
	"\f_ldap_serverB\f\n" +
	"\n" +
	"_ldap_portB\x16\n" +
	"\x14_connection_securityB\n" +
	"\n" +
	"\b_base_dnB\x10\n" +
	"\x0e_bind_usernameB\x10\n" +
	"\x0e_bind_passwordB\x19\n" +
	"\x17_maximum_login_attemptsB\x0e\n" +
	"\f_user_filterB\x0f\n" +
	"\r_group_filterB\x16\n" +
	"\x14_enable_admin_filterB\x0f\n" +
	"\r_admin_filterB\x1f\n" +
	"\x1d_group_display_name_attributeB\x15\n" +
	"\x13_group_id_attributeB\x17\n" +
	"\x15_first_name_attributeB\x16\n" +
	"\x14_last_name_attributeB\x12\n" +
	"\x10_email_attributeB\x15\n" +
	"\x13_username_attributeB\x15\n" +
	"\x13_nickname_attributeB\x0f\n" +
	"\r_id_attributeB\x15\n" +
	"\x13_position_attributeB\x15\n" +
	"\x13_login_id_attributeB\x14\n" +
	"\x12_picture_attributeB\x18\n" +
	"\x16_sync_interval_minutesB\x10\n" +
	"\x0e_query_timeoutB\x10\n" +
	"\x0e_max_page_sizeB\x13\n" +
	"\x11_login_field_nameB\x15\n" +
	"\x13_login_button_colorB\x1c\n" +
	"\x1a_login_button_border_colorB\x1a\n" +
	"\x18_login_button_text_color\"\xad\x13\n" +
	"\n" +
	"ConfigSaml\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x126\n" +
	"\x15enable_sync_with_ldap\x18\x02 \x01(\bH\x01R\x12enableSyncWithLdap\x88\x01\x01\x12N\n" +
	"\"enable_sync_with_ldap_include_auth\x18\x03 \x01(\bH\x02R\x1denableSyncWithLdapIncludeAuth\x88\x01\x01\x12:\n" +
	"\x17ignore_guests_ldap_sync\x18\x04 \x01(\bH\x03R\x14ignoreGuestsLdapSync\x88\x01\x01\x12\x1b\n" +
	"\x06verify\x18\x05 \x01(\bH\x04R\x06verify\x88\x01\x01\x12\x1d\n" +
	"\aencrypt\x18\x06 \x01(\bH\x05R\aencrypt\x88\x01\x01\x12&\n" +
	"\fsign_request\x18\a \x01(\bH\x06R\vsignRequest\x88\x01\x01\x12\x1c\n" +
	"\aidp_url\x18\b \x01(\tH\aR\x06idpUrl\x88\x01\x01\x121\n" +
	"\x12idp_descriptor_url\x18\t \x01(\tH\bR\x10idpDescriptorUrl\x88\x01\x01\x12-\n" +
	"\x10idp_metadata_url\x18\n" +
	" \x01(\tH\tR\x0eidpMetadataUrl\x88\x01\x01\x12C\n" +
	"\x1bservice_provider_identifier\x18\v \x01(\tH\n" +
	"R\x19serviceProviderIdentifier\x88\x01\x01\x12H\n" +
	"\x1eassertion_consumer_service_url\x18\f \x01(\tH\vR\x1bassertionConsumerServiceUrl\x88\x01\x01\x124\n" +
	"\x13signature_algorithm\x18\r \x01(\tH\fR\x12signatureAlgorithm\x88\x01\x01\x124\n" +
	"\x13canonical_algorithm\x18\x0e \x01(\tH\rR\x12canonicalAlgorithm\x88\x01\x01\x12:\n" +
	"\x17scoping_idp_provider_id\x18\x0f \x01(\tH\x0eR\x14scopingIdpProviderId\x88\x01\x01\x12-\n" +
	"\x10scoping_idp_name\x18\x10 \x01(\tH\x0fR\x0escopingIdpName\x88\x01\x01\x125\n" +
	"\x14idp_certificate_file\x18\x11 \x01(\tH\x10R\x12idpCertificateFile\x88\x01\x01\x12;\n" +
	"\x17public_certificate_file\x18\x12 \x01(\tH\x11R\x15publicCertificateFile\x88\x01\x01\x12-\n" +
	"\x10private_key_file\x18\x13 \x01(\tH\x12R\x0eprivateKeyFile\x88\x01\x01\x12&\n" +
	"\fid_attribute\x18\x14 \x01(\tH\x13R\vidAttribute\x88\x01\x01\x129\n" +
	"\x16enable_admin_attribute\x18\x15 \x01(\bH\x14R\x14enableAdminAttribute\x88\x01\x01\x12,\n" +
	"\x0fadmin_attribute\x18\x16 \x01(\tH\x15R\x0eadminAttribute\x88\x01\x01\x125\n" +
	"\x14first_name_attribute\x18\x17 \x01(\tH\x16R\x12firstNameAttribute\x88\x01\x01\x123\n" +
	"\x13last_name_attribute\x18\x18 \x01(\tH\x17R\x11lastNameAttribute\x88\x01\x01\x12,\n" +
	"\x0femail_attribute\x18\x19 \x01(\tH\x18R\x0eemailAttribute\x88\x01\x01\x122\n" +
	"\x12username_attribute\x18\x1a \x01(\tH\x19R\x11usernameAttribute\x88\x01\x01\x122\n" +
	"\x12nickname_attribute\x18\x1b \x01(\tH\x1aR\x11nicknameAttribute\x88\x01\x01\x12.\n" +
	"\x10locale_attribute\x18\x1c \x01(\tH\x1bR\x0flocaleAttribute\x88\x01\x01\x122\n" +
	"\x12position_attribute\x18\x1d \x01(\tH\x1cR\x11positionAttribute\x88\x01\x01\x12/\n" +
	"\x11login_button_text\x18\x1e \x01(\tH\x1dR\x0floginButtonText\x88\x01\x01\x121\n" +
	"\x12login_button_color\x18\x1f \x01(\tH\x1eR\x10loginButtonColor\x88\x01\x01\x12>\n" +
	"\x19login_button_border_color\x18  \x01(\tH\x1fR\x16loginButtonBorderColor\x88\x01\x01\x12:\n" +
	"\x17login_button_text_color\x18! \x01(\tH R\x14loginButtonTextColor\x88\x01\x01B\t\n" +
	"\a_enableB\x18\n" +
	"\x16_enable_sync_with_ldapB%\n" +
	"#_enable_sync_with_ldap_include_authB\x1a\n" +
	"\x18_ignore_guests_ldap_syncB\t\n" +
	"\a_verifyB\n" +
	"\n" +
	"\b_encryptB\x0f\n" +
	"\r_sign_requestB\n" +
	"\n" +
	"\b_idp_urlB\x15\n" +
	"\x13_idp_descriptor_urlB\x13\n" +
	"\x11_idp_metadata_urlB\x1e\n" +
	"\x1c_service_provider_identifierB!\n" +
	"\x1f_assertion_consumer_service_urlB\x16\n" +
	"\x14_signature_algorithmB\x16\n" +
	"\x14_canonical_algorithmB\x1a\n" +
	"\x18_scoping_idp_provider_idB\x13\n" +
	"\x11_scoping_idp_nameB\x17\n" +
	"\x15_idp_certificate_fileB\x1a\n" +
	"\x18_public_certificate_fileB\x13\n" +
	"\x11_private_key_fileB\x0f\n" +
	"\r_id_attributeB\x19\n" +
	"\x17_enable_admin_attributeB\x12\n" +
	"\x10_admin_attributeB\x17\n" +
	"\x15_first_name_attributeB\x16\n" +
	"\x14_last_name_attributeB\x12\n" +
	"\x10_email_attributeB\x15\n" +
	"\x13_username_attributeB\x15\n" +
	"\x13_nickname_attributeB\x13\n" +
	"\x11_locale_attributeB\x15\n" +
	"\x13_position_attributeB\x14\n" +
	"\x12_login_button_textB\x15\n" +
	"\x13_login_button_colorB\x1c\n" +
	"\x1a_login_button_border_colorB\x1a\n" +
	"\x18_login_button_text_color\"\xc1\x05\n" +
	"\x0fConfigNativeApp\x123\n" +
	"\x16app_custom_url_schemes\x18\x01 \x03(\tR\x13appCustomUrlSchemes\x12/\n" +
	"\x11app_download_link\x18\x02 \x01(\tH\x00R\x0fappDownloadLink\x88\x01\x01\x12>\n" +
	"\x19android_app_download_link\x18\x03 \x01(\tH\x01R\x16androidAppDownloadLink\x88\x01\x01\x126\n" +
	"\x15ios_app_download_link\x18\x04 \x01(\tH\x02R\x12iosAppDownloadLink\x88\x01\x01\x12;\n" +
	"\x17mobile_external_browser\x18\x05 \x01(\bH\x03R\x15mobileExternalBrowser\x88\x01\x01\x12=\n" +
	"\x18mobile_enable_biometrics\x18\x06 \x01(\bH\x04R\x16mobileEnableBiometrics\x88\x01\x01\x12F\n" +
	"\x1dmobile_prevent_screen_capture\x18\a \x01(\bH\x05R\x1amobilePreventScreenCapture\x88\x01\x01\x12C\n" +
	"\x1bmobile_jailbreak_protection\x18\b \x01(\bH\x06R\x19mobileJailbreakProtection\x88\x01\x01B\x14\n" +
	"\x12_app_download_linkB\x1c\n" +
	"\x1a_android_app_download_linkB\x18\n" +
	"\x16_ios_app_download_linkB\x1a\n" +
	"\x18_mobile_external_browserB\x1b\n" +
	"\x19_mobile_enable_biometricsB \n" +
	"\x1e_mobile_prevent_screen_captureB\x1e\n" +
	"\x1c_mobile_jailbreak_protection\"\xab\x05\n" +
	"\x11ConfigMeilisearch\x12#\n" +
	"\n" +
	"server_url\x18\x01 \x01(\tH\x00R\n" +
	"server_url\x88\x01\x01\x12\"\n" +
	"\n" +
	"master_key\x18\x02 \x01(\tH\x01R\tmasterKey\x88\x01\x01\x12,\n" +
	"\x0fenable_indexing\x18\x03 \x01(\bH\x02R\x0eenableIndexing\x88\x01\x01\x12.\n" +
	"\x10enable_searching\x18\x04 \x01(\bH\x03R\x0fenableSearching\x88\x01\x01\x124\n" +
	"\x13enable_autocomplete\x18\x05 \x01(\bH\x04R\x12enableAutocomplete\x88\x01\x01\x12\"\n" +
	"\n" +
	"batch_size\x18\x06 \x01(\x05H\x05R\tbatchSize\x88\x01\x01\x12;\n" +
	"\x17request_timeout_seconds\x18\a \x01(\x05H\x06R\x15requestTimeoutSeconds\x88\x01\x01\x12&\n" +
	"\findex_prefix\x18\b \x01(\tH\aR\vindexPrefix\x88\x01\x01\x12-\n" +
	"\x10search_cutoff_ms\x18\t \x01(\x05H\bR\x0esearchCutoffMs\x88\x01\x01\x127\n" +
	"\x15enable_typo_tolerance\x18\n" +
	" \x01(\bH\tR\x13enableTypoTolerance\x88\x01\x01B\r\n" +
	"\v_server_urlB\r\n" +
	"\v_master_keyB\x12\n" +
	"\x10_enable_indexingB\x13\n" +
	"\x11_enable_searchingB\x16\n" +
	"\x14_enable_autocompleteB\r\n" +
	"\v_batch_sizeB\x1a\n" +
	"\x18_request_timeout_secondsB\x0f\n" +
	"\r_index_prefixB\x13\n" +
	"\x11_search_cutoff_msB\x18\n" +
	"\x16_enable_typo_tolerance\"\xba\x03\n" +
	"\vConfigBleve\x12 \n" +
	"\tindex_dir\x18\x01 \x01(\tH\x00R\bindexDir\x88\x01\x01\x12,\n" +
	"\x0fenable_indexing\x18\x02 \x01(\bH\x01R\x0eenableIndexing\x88\x01\x01\x12.\n" +
	"\x10enable_searching\x18\x03 \x01(\bH\x02R\x0fenableSearching\x88\x01\x01\x124\n" +
	"\x13enable_autocomplete\x18\x04 \x01(\bH\x03R\x12enableAutocomplete\x88\x01\x01\x12M\n" +
	"!bulk_indexing_time_window_seconds\x18\x05 \x01(\x05H\x04R\x1dbulkIndexingTimeWindowSeconds\x88\x01\x01\x12\"\n" +
	"\n" +
	"batch_size\x18\x06 \x01(\x05H\x05R\tbatchSize\x88\x01\x01B\f\n" +
	"\n" +
	"_index_dirB\x12\n" +
	"\x10_enable_indexingB\x13\n" +
	"\x11_enable_searchingB\x16\n" +
	"\x14_enable_autocompleteB$\n" +
	"\"_bulk_indexing_time_window_secondsB\r\n" +
	"\v_batch_size\"\xec\x06\n" +
	"\x13ConfigDataRetention\x12;\n" +
	"\x17enable_message_deletion\x18\x01 \x01(\bH\x00R\x15enableMessageDeletion\x88\x01\x01\x125\n" +
	"\x14enable_file_deletion\x18\x02 \x01(\bH\x01R\x12enableFileDeletion\x88\x01\x01\x129\n" +
	"\x16enable_boards_deletion\x18\x03 \x01(\bH\x02R\x14enableBoardsDeletion\x88\x01\x01\x12;\n" +
	"\x17message_retention_hours\x18\x04 \x01(\x05H\x03R\x15messageRetentionHours\x88\x01\x01\x125\n" +
	"\x14file_retention_hours\x18\x05 \x01(\x05H\x04R\x12fileRetentionHours\x88\x01\x01\x127\n" +
	"\x15boards_retention_days\x18\x06 \x01(\x05H\x05R\x13boardsRetentionDays\x88\x01\x01\x12:\n" +
	"\x17deletion_job_start_time\x18\a \x01(\tH\x06R\x14deletionJobStartTime\x88\x01\x01\x12\"\n" +
	"\n" +
	"batch_size\x18\b \x01(\x05H\aR\tbatchSize\x88\x01\x01\x12N\n" +
	"!time_between_batches_milliseconds\x18\t \x01(\x05H\bR\x1etimeBetweenBatchesMilliseconds\x88\x01\x01\x12<\n" +
	"\x18retention_ids_batch_size\x18\n" +
	" \x01(\x05H\tR\x15retentionIdsBatchSize\x88\x01\x01B\x1a\n" +
	"\x18_enable_message_deletionB\x17\n" +
	"\x15_enable_file_deletionB\x19\n" +
	"\x17_enable_boards_deletionB\x1a\n" +
	"\x18_message_retention_hoursB\x17\n" +
	"\x15_file_retention_hoursB\x18\n" +
	"\x16_boards_retention_daysB\x1a\n" +
	"\x18_deletion_job_start_timeB\r\n" +
	"\v_batch_sizeB$\n" +
	"\"_time_between_batches_millisecondsB\x1b\n" +
	"\x19_retention_ids_batch_size\"\xb4\x02\n" +
	"\x10ConfigImageProxy\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12-\n" +
	"\x10image_proxy_type\x18\x02 \x01(\tH\x01R\x0eimageProxyType\x88\x01\x01\x128\n" +
	"\x16remote_image_proxy_url\x18\x03 \x01(\tH\x02R\x13remoteImageProxyUrl\x88\x01\x01\x12@\n" +
	"\x1aremote_image_proxy_options\x18\x04 \x01(\tH\x03R\x17remoteImageProxyOptions\x88\x01\x01B\t\n" +
	"\a_enableB\x13\n" +
	"\x11_image_proxy_typeB\x19\n" +
	"\x17_remote_image_proxy_urlB\x1d\n" +
	"\x1b_remote_image_proxy_options\"\xcd\b\n" +
	"\x06Config\x12)\n" +
	"\x04main\x18\x01 \x01(\v2\x15.common.v1.ConfigMainR\x04main\x125\n" +
	"\bservices\x18\x02 \x01(\v2\x19.common.v1.ConfigServicesR\bservices\x125\n" +
	"\bsecurity\x18\x03 \x01(\v2\x19.common.v1.ConfigSecurityR\bsecurity\x12,\n" +
	"\x05cache\x18\x04 \x01(\v2\x16.common.v1.CacheConfigR\x05cache\x122\n" +
	"\ametrics\x18\x05 \x01(\v2\x18.common.v1.ConfigMetricsR\ametrics\x12&\n" +
	"\x03sso\x18\x06 \x01(\v2\x14.common.v1.ConfigSSOR\x03sso\x12&\n" +
	"\x03sql\x18\a \x01(\v2\x14.common.v1.ConfigSqlR\x03sql\x125\n" +
	"\bpassword\x18\b \x01(\v2\x19.common.v1.ConfigPasswordR\bpassword\x12)\n" +
	"\x04file\x18\t \x01(\v2\x15.common.v1.ConfigFileR\x04file\x12,\n" +
	"\x05email\x18\n" +
	" \x01(\v2\x16.common.v1.ConfigEmailR\x05email\x129\n" +
	"\n" +
	"rate_limit\x18\v \x01(\v2\x1a.common.v1.ConfigRateLimitR\trateLimit\x122\n" +
	"\aprivacy\x18\f \x01(\v2\x18.common.v1.ConfigPrivacyR\aprivacy\x122\n" +
	"\asupport\x18\r \x01(\v2\x18.common.v1.ConfigSupportR\asupport\x12A\n" +
	"\flocalization\x18\x0e \x01(\v2\x1d.common.v1.ConfigLocalizationR\flocalization\x12)\n" +
	"\x04ldap\x18\x0f \x01(\v2\x15.common.v1.ConfigLdapR\x04ldap\x12)\n" +
	"\x04saml\x18\x10 \x01(\v2\x15.common.v1.ConfigSamlR\x04saml\x129\n" +
	"\n" +
	"native_app\x18\x11 \x01(\v2\x1a.common.v1.ConfigNativeAppR\tnativeApp\x12>\n" +
	"\vmeilisearch\x18\x12 \x01(\v2\x1c.common.v1.ConfigMeilisearchR\vmeilisearch\x12,\n" +
	"\x05bleve\x18\x13 \x01(\v2\x16.common.v1.ConfigBleveR\x05bleve\x12E\n" +
	"\x0edata_retention\x18\x14 \x01(\v2\x1e.common.v1.ConfigDataRetentionR\rdataRetention\x12<\n" +
	"\vimage_proxy\x18\x15 \x01(\v2\x1b.common.v1.ConfigImageProxyR\n" +
	"imageProxy\"\x12\n" +
	"\x10ConfigGetRequest\"u\n" +
	"\x11ConfigGetResponse\x12'\n" +
	"\x04data\x18\x01 \x01(\v2\x11.common.v1.ConfigH\x00R\x04data\x12+\n" +
	"\x05error\x18\x02 \x01(\v2\x13.shared.v1.AppErrorH\x00R\x05errorB\n" +
	"\n" +
	"\bresponse\"@\n" +
	"\x13ConfigUpdateRequest\x12)\n" +
	"\x06config\x18\x01 \x01(\v2\x11.common.v1.ConfigR\x06config\"x\n" +
	"\x14ConfigUpdateResponse\x12'\n" +
	"\x04data\x18\x01 \x01(\v2\x11.common.v1.ConfigH\x00R\x04data\x12+\n" +
	"\x05error\x18\x02 \x01(\v2\x13.shared.v1.AppErrorH\x00R\x05errorB\n" +
	"\n" +
	"\bresponse\"z\n" +
	"\x16ConfigListenerResponse\x12'\n" +
	"\x04data\x18\x01 \x01(\v2\x11.common.v1.ConfigH\x00R\x04data\x12+\n" +
	"\x05error\x18\x02 \x01(\v2\x13.shared.v1.AppErrorH\x00R\x05errorB\n" +
	"\n" +
	"\bresponse\"4\n" +
	"\x15ConfigListenerRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientIdBq\n" +
	"\x1aorg.megacommerce.common.v1B\vConfigProtoZCgithub.com/ahmad-khatib0-org/megacommerce-proto/gen/go/common/v1;v1\xf8\x01\x01b\x06proto3"

var (
	file_common_v1_config_proto_rawDescOnce sync.Once
	file_common_v1_config_proto_rawDescData []byte
)

func file_common_v1_config_proto_rawDescGZIP() []byte {
	file_common_v1_config_proto_rawDescOnce.Do(func() {
		file_common_v1_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_v1_config_proto_rawDesc), len(file_common_v1_config_proto_rawDesc)))
	})
	return file_common_v1_config_proto_rawDescData
}

var file_common_v1_config_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_common_v1_config_proto_goTypes = []any{
	(*ConfigMain)(nil),             // 0: common.v1.ConfigMain
	(*ConfigServices)(nil),         // 1: common.v1.ConfigServices
	(*ConfigSecurity)(nil),         // 2: common.v1.ConfigSecurity
	(*CacheConfig)(nil),            // 3: common.v1.CacheConfig
	(*ConfigMetrics)(nil),          // 4: common.v1.ConfigMetrics
	(*ConfigSSO)(nil),              // 5: common.v1.ConfigSSO
	(*ConfigSql)(nil),              // 6: common.v1.ConfigSql
	(*ConfigPassword)(nil),         // 7: common.v1.ConfigPassword
	(*ConfigFile)(nil),             // 8: common.v1.ConfigFile
	(*ConfigEmail)(nil),            // 9: common.v1.ConfigEmail
	(*ConfigRateLimit)(nil),        // 10: common.v1.ConfigRateLimit
	(*ConfigPrivacy)(nil),          // 11: common.v1.ConfigPrivacy
	(*ConfigSupport)(nil),          // 12: common.v1.ConfigSupport
	(*ConfigLocalization)(nil),     // 13: common.v1.ConfigLocalization
	(*ConfigLdap)(nil),             // 14: common.v1.ConfigLdap
	(*ConfigSaml)(nil),             // 15: common.v1.ConfigSaml
	(*ConfigNativeApp)(nil),        // 16: common.v1.ConfigNativeApp
	(*ConfigMeilisearch)(nil),      // 17: common.v1.ConfigMeilisearch
	(*ConfigBleve)(nil),            // 18: common.v1.ConfigBleve
	(*ConfigDataRetention)(nil),    // 19: common.v1.ConfigDataRetention
	(*ConfigImageProxy)(nil),       // 20: common.v1.ConfigImageProxy
	(*Config)(nil),                 // 21: common.v1.Config
	(*ConfigGetRequest)(nil),       // 22: common.v1.ConfigGetRequest
	(*ConfigGetResponse)(nil),      // 23: common.v1.ConfigGetResponse
	(*ConfigUpdateRequest)(nil),    // 24: common.v1.ConfigUpdateRequest
	(*ConfigUpdateResponse)(nil),   // 25: common.v1.ConfigUpdateResponse
	(*ConfigListenerResponse)(nil), // 26: common.v1.ConfigListenerResponse
	(*ConfigListenerRequest)(nil),  // 27: common.v1.ConfigListenerRequest
	nil,                            // 28: common.v1.ConfigSecurity.RestrictedUsernamesEntry
	(*v1.AppError)(nil),            // 29: shared.v1.AppError
}
var file_common_v1_config_proto_depIdxs = []int32{
	28, // 0: common.v1.ConfigSecurity.restricted_usernames:type_name -> common.v1.ConfigSecurity.RestrictedUsernamesEntry
	0,  // 1: common.v1.Config.main:type_name -> common.v1.ConfigMain
	1,  // 2: common.v1.Config.services:type_name -> common.v1.ConfigServices
	2,  // 3: common.v1.Config.security:type_name -> common.v1.ConfigSecurity
	3,  // 4: common.v1.Config.cache:type_name -> common.v1.CacheConfig
	4,  // 5: common.v1.Config.metrics:type_name -> common.v1.ConfigMetrics
	5,  // 6: common.v1.Config.sso:type_name -> common.v1.ConfigSSO
	6,  // 7: common.v1.Config.sql:type_name -> common.v1.ConfigSql
	7,  // 8: common.v1.Config.password:type_name -> common.v1.ConfigPassword
	8,  // 9: common.v1.Config.file:type_name -> common.v1.ConfigFile
	9,  // 10: common.v1.Config.email:type_name -> common.v1.ConfigEmail
	10, // 11: common.v1.Config.rate_limit:type_name -> common.v1.ConfigRateLimit
	11, // 12: common.v1.Config.privacy:type_name -> common.v1.ConfigPrivacy
	12, // 13: common.v1.Config.support:type_name -> common.v1.ConfigSupport
	13, // 14: common.v1.Config.localization:type_name -> common.v1.ConfigLocalization
	14, // 15: common.v1.Config.ldap:type_name -> common.v1.ConfigLdap
	15, // 16: common.v1.Config.saml:type_name -> common.v1.ConfigSaml
	16, // 17: common.v1.Config.native_app:type_name -> common.v1.ConfigNativeApp
	17, // 18: common.v1.Config.meilisearch:type_name -> common.v1.ConfigMeilisearch
	18, // 19: common.v1.Config.bleve:type_name -> common.v1.ConfigBleve
	19, // 20: common.v1.Config.data_retention:type_name -> common.v1.ConfigDataRetention
	20, // 21: common.v1.Config.image_proxy:type_name -> common.v1.ConfigImageProxy
	21, // 22: common.v1.ConfigGetResponse.data:type_name -> common.v1.Config
	29, // 23: common.v1.ConfigGetResponse.error:type_name -> shared.v1.AppError
	21, // 24: common.v1.ConfigUpdateRequest.config:type_name -> common.v1.Config
	21, // 25: common.v1.ConfigUpdateResponse.data:type_name -> common.v1.Config
	29, // 26: common.v1.ConfigUpdateResponse.error:type_name -> shared.v1.AppError
	21, // 27: common.v1.ConfigListenerResponse.data:type_name -> common.v1.Config
	29, // 28: common.v1.ConfigListenerResponse.error:type_name -> shared.v1.AppError
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_common_v1_config_proto_init() }
func file_common_v1_config_proto_init() {
	if File_common_v1_config_proto != nil {
		return
	}
	file_common_v1_config_proto_msgTypes[0].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[1].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[2].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[3].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[4].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[5].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[6].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[7].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[8].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[9].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[10].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[11].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[12].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[13].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[14].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[15].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[16].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[17].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[18].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[19].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[20].OneofWrappers = []any{}
	file_common_v1_config_proto_msgTypes[23].OneofWrappers = []any{
		(*ConfigGetResponse_Data)(nil),
		(*ConfigGetResponse_Error)(nil),
	}
	file_common_v1_config_proto_msgTypes[25].OneofWrappers = []any{
		(*ConfigUpdateResponse_Data)(nil),
		(*ConfigUpdateResponse_Error)(nil),
	}
	file_common_v1_config_proto_msgTypes[26].OneofWrappers = []any{
		(*ConfigListenerResponse_Data)(nil),
		(*ConfigListenerResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_v1_config_proto_rawDesc), len(file_common_v1_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_config_proto_goTypes,
		DependencyIndexes: file_common_v1_config_proto_depIdxs,
		MessageInfos:      file_common_v1_config_proto_msgTypes,
	}.Build()
	File_common_v1_config_proto = out.File
	file_common_v1_config_proto_goTypes = nil
	file_common_v1_config_proto_depIdxs = nil
}
