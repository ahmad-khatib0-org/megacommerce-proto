// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: shared/v1/attachment.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AttachmentErrorType int32

const (
	AttachmentErrorType_UNSPECIFIED           AttachmentErrorType = 0
	AttachmentErrorType_INVALID_BASE64        AttachmentErrorType = 1
	AttachmentErrorType_INVALID_FILE_TYPE     AttachmentErrorType = 2
	AttachmentErrorType_BIG_FILE              AttachmentErrorType = 3
	AttachmentErrorType_DECODE_IMG            AttachmentErrorType = 4
	AttachmentErrorType_BIG_DIMENSIONS_IMG    AttachmentErrorType = 5
	AttachmentErrorType_UNSUPPORTED_FILE_TYPE AttachmentErrorType = 6
)

// Enum value maps for AttachmentErrorType.
var (
	AttachmentErrorType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "INVALID_BASE64",
		2: "INVALID_FILE_TYPE",
		3: "BIG_FILE",
		4: "DECODE_IMG",
		5: "BIG_DIMENSIONS_IMG",
		6: "UNSUPPORTED_FILE_TYPE",
	}
	AttachmentErrorType_value = map[string]int32{
		"UNSPECIFIED":           0,
		"INVALID_BASE64":        1,
		"INVALID_FILE_TYPE":     2,
		"BIG_FILE":              3,
		"DECODE_IMG":            4,
		"BIG_DIMENSIONS_IMG":    5,
		"UNSUPPORTED_FILE_TYPE": 6,
	}
)

func (x AttachmentErrorType) Enum() *AttachmentErrorType {
	p := new(AttachmentErrorType)
	*p = x
	return p
}

func (x AttachmentErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttachmentErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_shared_v1_attachment_proto_enumTypes[0].Descriptor()
}

func (AttachmentErrorType) Type() protoreflect.EnumType {
	return &file_shared_v1_attachment_proto_enumTypes[0]
}

func (x AttachmentErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttachmentErrorType.Descriptor instead.
func (AttachmentErrorType) EnumDescriptor() ([]byte, []int) {
	return file_shared_v1_attachment_proto_rawDescGZIP(), []int{0}
}

type Attachment struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filename        string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	FileType        string                 `protobuf:"bytes,3,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	FileSize        int64                  `protobuf:"varint,4,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	FileExtension   string                 `protobuf:"bytes,5,opt,name=file_extension,json=fileExtension,proto3" json:"file_extension,omitempty"`
	Base64          string                 `protobuf:"bytes,6,opt,name=base64,proto3" json:"base64,omitempty"`
	ExifOrientation int32                  `protobuf:"varint,7,opt,name=exif_orientation,json=exifOrientation,proto3" json:"exif_orientation,omitempty"`
	Crop            *Crop                  `protobuf:"bytes,8,opt,name=crop,proto3" json:"crop,omitempty"`
	Metadata        *Struct                `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"` // arbitrary JSON-like object
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	mi := &file_shared_v1_attachment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_shared_v1_attachment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_shared_v1_attachment_proto_rawDescGZIP(), []int{0}
}

func (x *Attachment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Attachment) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Attachment) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *Attachment) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Attachment) GetFileExtension() string {
	if x != nil {
		return x.FileExtension
	}
	return ""
}

func (x *Attachment) GetBase64() string {
	if x != nil {
		return x.Base64
	}
	return ""
}

func (x *Attachment) GetExifOrientation() int32 {
	if x != nil {
		return x.ExifOrientation
	}
	return 0
}

func (x *Attachment) GetCrop() *Crop {
	if x != nil {
		return x.Crop
	}
	return nil
}

func (x *Attachment) GetMetadata() *Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Crop struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             float32                `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Width         float32                `protobuf:"fixed32,3,opt,name=width,proto3" json:"width,omitempty"`
	Height        float32                `protobuf:"fixed32,4,opt,name=height,proto3" json:"height,omitempty"`
	AspectRatio   float32                `protobuf:"fixed32,5,opt,name=aspect_ratio,json=aspectRatio,proto3" json:"aspect_ratio,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Crop) Reset() {
	*x = Crop{}
	mi := &file_shared_v1_attachment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Crop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Crop) ProtoMessage() {}

func (x *Crop) ProtoReflect() protoreflect.Message {
	mi := &file_shared_v1_attachment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Crop.ProtoReflect.Descriptor instead.
func (*Crop) Descriptor() ([]byte, []int) {
	return file_shared_v1_attachment_proto_rawDescGZIP(), []int{1}
}

func (x *Crop) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Crop) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Crop) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Crop) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Crop) GetAspectRatio() float32 {
	if x != nil {
		return x.AspectRatio
	}
	return 0
}

type AttachmentError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // the attachment id
	Type          AttachmentErrorType    `protobuf:"varint,2,opt,name=type,proto3,enum=shared.v1.AttachmentErrorType" json:"type,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"` // shown to the user
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`     // used for the backend
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachmentError) Reset() {
	*x = AttachmentError{}
	mi := &file_shared_v1_attachment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachmentError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentError) ProtoMessage() {}

func (x *AttachmentError) ProtoReflect() protoreflect.Message {
	mi := &file_shared_v1_attachment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentError.ProtoReflect.Descriptor instead.
func (*AttachmentError) Descriptor() ([]byte, []int) {
	return file_shared_v1_attachment_proto_rawDescGZIP(), []int{2}
}

func (x *AttachmentError) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AttachmentError) GetType() AttachmentErrorType {
	if x != nil {
		return x.Type
	}
	return AttachmentErrorType_UNSPECIFIED
}

func (x *AttachmentError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AttachmentError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_shared_v1_attachment_proto protoreflect.FileDescriptor

const file_shared_v1_attachment_proto_rawDesc = "" +
	"\n" +
	"\x1ashared/v1/attachment.proto\x12\tshared.v1\x1a\x16shared/v1/struct.proto\"\xb0\x02\n" +
	"\n" +
	"Attachment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x1b\n" +
	"\tfile_type\x18\x03 \x01(\tR\bfileType\x12\x1b\n" +
	"\tfile_size\x18\x04 \x01(\x03R\bfileSize\x12%\n" +
	"\x0efile_extension\x18\x05 \x01(\tR\rfileExtension\x12\x16\n" +
	"\x06base64\x18\x06 \x01(\tR\x06base64\x12)\n" +
	"\x10exif_orientation\x18\a \x01(\x05R\x0fexifOrientation\x12#\n" +
	"\x04crop\x18\b \x01(\v2\x0f.shared.v1.CropR\x04crop\x12-\n" +
	"\bmetadata\x18\t \x01(\v2\x11.shared.v1.StructR\bmetadata\"s\n" +
	"\x04Crop\x12\f\n" +
	"\x01x\x18\x01 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\x12\x14\n" +
	"\x05width\x18\x03 \x01(\x02R\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\x02R\x06height\x12!\n" +
	"\faspect_ratio\x18\x05 \x01(\x02R\vaspectRatio\"\x85\x01\n" +
	"\x0fAttachmentError\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x122\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1e.shared.v1.AttachmentErrorTypeR\x04type\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error*\xa2\x01\n" +
	"\x13AttachmentErrorType\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eINVALID_BASE64\x10\x01\x12\x15\n" +
	"\x11INVALID_FILE_TYPE\x10\x02\x12\f\n" +
	"\bBIG_FILE\x10\x03\x12\x0e\n" +
	"\n" +
	"DECODE_IMG\x10\x04\x12\x16\n" +
	"\x12BIG_DIMENSIONS_IMG\x10\x05\x12\x19\n" +
	"\x15UNSUPPORTED_FILE_TYPE\x10\x06Bu\n" +
	"\x1aorg.megacommerce.shared.v1B\x0fAttachmentProtoZCgithub.com/ahmad-khatib0-org/megacommerce-proto/gen/go/shared/v1;v1\xf8\x01\x01b\x06proto3"

var (
	file_shared_v1_attachment_proto_rawDescOnce sync.Once
	file_shared_v1_attachment_proto_rawDescData []byte
)

func file_shared_v1_attachment_proto_rawDescGZIP() []byte {
	file_shared_v1_attachment_proto_rawDescOnce.Do(func() {
		file_shared_v1_attachment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_shared_v1_attachment_proto_rawDesc), len(file_shared_v1_attachment_proto_rawDesc)))
	})
	return file_shared_v1_attachment_proto_rawDescData
}

var file_shared_v1_attachment_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_shared_v1_attachment_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_shared_v1_attachment_proto_goTypes = []any{
	(AttachmentErrorType)(0), // 0: shared.v1.AttachmentErrorType
	(*Attachment)(nil),       // 1: shared.v1.Attachment
	(*Crop)(nil),             // 2: shared.v1.Crop
	(*AttachmentError)(nil),  // 3: shared.v1.AttachmentError
	(*Struct)(nil),           // 4: shared.v1.Struct
}
var file_shared_v1_attachment_proto_depIdxs = []int32{
	2, // 0: shared.v1.Attachment.crop:type_name -> shared.v1.Crop
	4, // 1: shared.v1.Attachment.metadata:type_name -> shared.v1.Struct
	0, // 2: shared.v1.AttachmentError.type:type_name -> shared.v1.AttachmentErrorType
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_shared_v1_attachment_proto_init() }
func file_shared_v1_attachment_proto_init() {
	if File_shared_v1_attachment_proto != nil {
		return
	}
	file_shared_v1_struct_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_shared_v1_attachment_proto_rawDesc), len(file_shared_v1_attachment_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shared_v1_attachment_proto_goTypes,
		DependencyIndexes: file_shared_v1_attachment_proto_depIdxs,
		EnumInfos:         file_shared_v1_attachment_proto_enumTypes,
		MessageInfos:      file_shared_v1_attachment_proto_msgTypes,
	}.Build()
	File_shared_v1_attachment_proto = out.File
	file_shared_v1_attachment_proto_goTypes = nil
	file_shared_v1_attachment_proto_depIdxs = nil
}
