// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: search/v1/tasks.proto

package v1

import (
	v1 "github.com/ahmad-khatib0-org/megacommerce-proto/gen/go/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Minimal task-create / add-documents response
type TaskCreateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Meili returns a numeric task id (examples show "taskUid"). Use uint64.
	TaskUid uint64 `protobuf:"varint,1,opt,name=task_uid,json=taskUid,proto3" json:"task_uid,omitempty"`
	// index uid string
	IndexUid string `protobuf:"bytes,2,opt,name=index_uid,json=indexUid,proto3" json:"index_uid,omitempty"`
	// status e.g. "enqueued", "processing", "succeeded", "failed"
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// type e.g. "documentAdditionOrUpdate"
	Type string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// enqueuedAt is returned as an RFC3339 string in JSON. Use Timestamp for typed time.
	EnqueuedAt    *v1.Timestamp `protobuf:"bytes,5,opt,name=enqueued_at,json=enqueuedAt,proto3" json:"enqueued_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskCreateResponse) Reset() {
	*x = TaskCreateResponse{}
	mi := &file_search_v1_tasks_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCreateResponse) ProtoMessage() {}

func (x *TaskCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_tasks_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCreateResponse.ProtoReflect.Descriptor instead.
func (*TaskCreateResponse) Descriptor() ([]byte, []int) {
	return file_search_v1_tasks_proto_rawDescGZIP(), []int{0}
}

func (x *TaskCreateResponse) GetTaskUid() uint64 {
	if x != nil {
		return x.TaskUid
	}
	return 0
}

func (x *TaskCreateResponse) GetIndexUid() string {
	if x != nil {
		return x.IndexUid
	}
	return ""
}

func (x *TaskCreateResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TaskCreateResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TaskCreateResponse) GetEnqueuedAt() *v1.Timestamp {
	if x != nil {
		return x.EnqueuedAt
	}
	return nil
}

var File_search_v1_tasks_proto protoreflect.FileDescriptor

const file_search_v1_tasks_proto_rawDesc = "" +
	"\n" +
	"\x15search/v1/tasks.proto\x12\tsearch.v1\x1a\x14shared/v1/time.proto\"\xaf\x01\n" +
	"\x12TaskCreateResponse\x12\x19\n" +
	"\btask_uid\x18\x01 \x01(\x04R\ataskUid\x12\x1b\n" +
	"\tindex_uid\x18\x02 \x01(\tR\bindexUid\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x125\n" +
	"\venqueued_at\x18\x05 \x01(\v2\x14.shared.v1.TimestampR\n" +
	"enqueuedAtBp\n" +
	"\x1aorg.megacommerce.search.v1B\n" +
	"TasksProtoZCgithub.com/ahmad-khatib0-org/megacommerce-proto/gen/go/search/v1;v1\xf8\x01\x01b\x06proto3"

var (
	file_search_v1_tasks_proto_rawDescOnce sync.Once
	file_search_v1_tasks_proto_rawDescData []byte
)

func file_search_v1_tasks_proto_rawDescGZIP() []byte {
	file_search_v1_tasks_proto_rawDescOnce.Do(func() {
		file_search_v1_tasks_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_search_v1_tasks_proto_rawDesc), len(file_search_v1_tasks_proto_rawDesc)))
	})
	return file_search_v1_tasks_proto_rawDescData
}

var file_search_v1_tasks_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_search_v1_tasks_proto_goTypes = []any{
	(*TaskCreateResponse)(nil), // 0: search.v1.TaskCreateResponse
	(*v1.Timestamp)(nil),       // 1: shared.v1.Timestamp
}
var file_search_v1_tasks_proto_depIdxs = []int32{
	1, // 0: search.v1.TaskCreateResponse.enqueued_at:type_name -> shared.v1.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_search_v1_tasks_proto_init() }
func file_search_v1_tasks_proto_init() {
	if File_search_v1_tasks_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_search_v1_tasks_proto_rawDesc), len(file_search_v1_tasks_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_search_v1_tasks_proto_goTypes,
		DependencyIndexes: file_search_v1_tasks_proto_depIdxs,
		MessageInfos:      file_search_v1_tasks_proto_msgTypes,
	}.Build()
	File_search_v1_tasks_proto = out.File
	file_search_v1_tasks_proto_goTypes = nil
	file_search_v1_tasks_proto_depIdxs = nil
}
