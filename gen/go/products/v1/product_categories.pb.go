// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: products/v1/product_categories.proto

package v1

import (
	v1 "github.com/ahmad-khatib0-org/megacommerce-proto/gen/go/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Category struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image         string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Subcategories []*Subcategory         `protobuf:"bytes,4,rep,name=subcategories,proto3" json:"subcategories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Category) Reset() {
	*x = Category{}
	mi := &file_products_v1_product_categories_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_products_v1_product_categories_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_products_v1_product_categories_proto_rawDescGZIP(), []int{0}
}

func (x *Category) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Category) GetSubcategories() []*Subcategory {
	if x != nil {
		return x.Subcategories
	}
	return nil
}

type Subcategory struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Id            string                           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version       int32                            `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	CreatedAt     string                           `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Attributes    map[string]*SubcategoryAttribute `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subcategory) Reset() {
	*x = Subcategory{}
	mi := &file_products_v1_product_categories_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subcategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subcategory) ProtoMessage() {}

func (x *Subcategory) ProtoReflect() protoreflect.Message {
	mi := &file_products_v1_product_categories_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subcategory.ProtoReflect.Descriptor instead.
func (*Subcategory) Descriptor() ([]byte, []int) {
	return file_products_v1_product_categories_proto_rawDescGZIP(), []int{1}
}

func (x *Subcategory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Subcategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Subcategory) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Subcategory) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Subcategory) GetAttributes() map[string]*SubcategoryAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Top-level attribute with a typed validation
type SubcategoryAttribute struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// wither this attribute required or optional
	Required bool `protobuf:"varint,1,opt,name=required,proto3" json:"required,omitempty"`
	// input, select, tags ...
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// reference id to the attributes table (E.g weight is common for many products types,
	// so instead rewriting it each time, we store it in another table)
	Refrence *string `protobuf:"bytes,3,opt,name=refrence,proto3,oneof" json:"refrence,omitempty"`
	// for select type (E.g. ['white', 'black', ...])
	StringArray []string `protobuf:"bytes,4,rep,name=string_array,json=stringArray,proto3" json:"string_array,omitempty"`
	// for select type (E.g. multiple colors)
	IsMultiple *bool `protobuf:"varint,5,opt,name=is_multiple,json=isMultiple,proto3,oneof" json:"is_multiple,omitempty"`
	// validation rules of this attribute
	Validation    *v1.ValidationField `protobuf:"bytes,6,opt,name=validation,proto3" json:"validation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubcategoryAttribute) Reset() {
	*x = SubcategoryAttribute{}
	mi := &file_products_v1_product_categories_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubcategoryAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubcategoryAttribute) ProtoMessage() {}

func (x *SubcategoryAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_products_v1_product_categories_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubcategoryAttribute.ProtoReflect.Descriptor instead.
func (*SubcategoryAttribute) Descriptor() ([]byte, []int) {
	return file_products_v1_product_categories_proto_rawDescGZIP(), []int{2}
}

func (x *SubcategoryAttribute) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *SubcategoryAttribute) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SubcategoryAttribute) GetRefrence() string {
	if x != nil && x.Refrence != nil {
		return *x.Refrence
	}
	return ""
}

func (x *SubcategoryAttribute) GetStringArray() []string {
	if x != nil {
		return x.StringArray
	}
	return nil
}

func (x *SubcategoryAttribute) GetIsMultiple() bool {
	if x != nil && x.IsMultiple != nil {
		return *x.IsMultiple
	}
	return false
}

func (x *SubcategoryAttribute) GetValidation() *v1.ValidationField {
	if x != nil {
		return x.Validation
	}
	return nil
}

var File_products_v1_product_categories_proto protoreflect.FileDescriptor

const file_products_v1_product_categories_proto_rawDesc = "" +
	"\n" +
	"$products/v1/product_categories.proto\x12\vproducts.v1\x1a\x1ashared/v1/validation.proto\"\x84\x01\n" +
	"\bCategory\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12>\n" +
	"\rsubcategories\x18\x04 \x03(\v2\x18.products.v1.SubcategoryR\rsubcategories\"\x96\x02\n" +
	"\vSubcategory\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x03 \x01(\x05R\aversion\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\x12H\n" +
	"\n" +
	"attributes\x18\x05 \x03(\v2(.products.v1.Subcategory.AttributesEntryR\n" +
	"attributes\x1a`\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x127\n" +
	"\x05value\x18\x02 \x01(\v2!.products.v1.SubcategoryAttributeR\x05value:\x028\x01\"\x89\x02\n" +
	"\x14SubcategoryAttribute\x12\x1a\n" +
	"\brequired\x18\x01 \x01(\bR\brequired\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1f\n" +
	"\brefrence\x18\x03 \x01(\tH\x00R\brefrence\x88\x01\x01\x12!\n" +
	"\fstring_array\x18\x04 \x03(\tR\vstringArray\x12$\n" +
	"\vis_multiple\x18\x05 \x01(\bH\x01R\n" +
	"isMultiple\x88\x01\x01\x12:\n" +
	"\n" +
	"validation\x18\x06 \x01(\v2\x1a.shared.v1.ValidationFieldR\n" +
	"validationB\v\n" +
	"\t_refrenceB\x0e\n" +
	"\f_is_multipleB\x80\x01\n" +
	"\x1corg.megacommerce.products.v1B\x16ProductCategoriesProtoZEgithub.com/ahmad-khatib0-org/megacommerce-proto/gen/go/products/v1;v1\xf8\x01\x01b\x06proto3"

var (
	file_products_v1_product_categories_proto_rawDescOnce sync.Once
	file_products_v1_product_categories_proto_rawDescData []byte
)

func file_products_v1_product_categories_proto_rawDescGZIP() []byte {
	file_products_v1_product_categories_proto_rawDescOnce.Do(func() {
		file_products_v1_product_categories_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_products_v1_product_categories_proto_rawDesc), len(file_products_v1_product_categories_proto_rawDesc)))
	})
	return file_products_v1_product_categories_proto_rawDescData
}

var file_products_v1_product_categories_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_products_v1_product_categories_proto_goTypes = []any{
	(*Category)(nil),             // 0: products.v1.Category
	(*Subcategory)(nil),          // 1: products.v1.Subcategory
	(*SubcategoryAttribute)(nil), // 2: products.v1.SubcategoryAttribute
	nil,                          // 3: products.v1.Subcategory.AttributesEntry
	(*v1.ValidationField)(nil),   // 4: shared.v1.ValidationField
}
var file_products_v1_product_categories_proto_depIdxs = []int32{
	1, // 0: products.v1.Category.subcategories:type_name -> products.v1.Subcategory
	3, // 1: products.v1.Subcategory.attributes:type_name -> products.v1.Subcategory.AttributesEntry
	4, // 2: products.v1.SubcategoryAttribute.validation:type_name -> shared.v1.ValidationField
	2, // 3: products.v1.Subcategory.AttributesEntry.value:type_name -> products.v1.SubcategoryAttribute
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_products_v1_product_categories_proto_init() }
func file_products_v1_product_categories_proto_init() {
	if File_products_v1_product_categories_proto != nil {
		return
	}
	file_products_v1_product_categories_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_products_v1_product_categories_proto_rawDesc), len(file_products_v1_product_categories_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_products_v1_product_categories_proto_goTypes,
		DependencyIndexes: file_products_v1_product_categories_proto_depIdxs,
		MessageInfos:      file_products_v1_product_categories_proto_msgTypes,
	}.Build()
	File_products_v1_product_categories_proto = out.File
	file_products_v1_product_categories_proto_goTypes = nil
	file_products_v1_product_categories_proto_depIdxs = nil
}
